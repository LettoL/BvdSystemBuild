{"version":3,"sources":["hooks/http.hook.js","const.js","components/import-form/product-item.js","components/import-form/form.js","pages/admin/import.page.js","models/product-table/product.store.js","models/filter/filter.store.js","shared/store/error-store.js","store/supplier-store.js","components/admin-products/product-table-filters.js","components/admin-products/products-table.js","components/admin-products/products-table-paginator.js","components/admin-products/products.js","pages/admin/products.page.js","pages/admin/products-history.page.js","components/supply-product/form/supply-product-item.js","components/supply-product/form/supply-product-form.js","store/shop-store.js","components/shop/shop-create.js","components/shop/shops-list.js","components/supplier/supplier-create.js","components/supplier/suppliers-list.js","store/category-store.js","components/categories/category-create.js","components/categories/categories-list.js","store/supply-product-store.js","components/supply-product/list/supply-products-list.js","models/manager/manager.store.js","components/manager/manager-list.js","models/archive-sale/archive-sale.store.js","components/archive-sale/archive-sale-list-item.js","components/archive-sale/archive-sales-list.js","features/product/components/products-list.components.js","features/product/models/product-info-store.js","features/product/components/product-info.js","features/product/components/product-supplies.js","features/product/components/products-understaffed.js","features/product/components/product-tabs.component.js","features/product/components/product.page.js","features/sale/sale-create/model/sale-create.js","features/sale/sale-create/model/store.js","features/sale/sale-create/components/select-products.js","features/sale/sale-create/components/selected-product-item.js","features/sale/sale-create/components/selected-products-list.js","features/sale/sale-create/components/cash-payment.js","features/sale/sale-create/model/money-workers-store.js","features/sale/sale-create/components/cashless-payment.js","features/sale/sale-create/components/payment-methods.js","features/sale/sale-create/components/sale-info.js","features/sale/sale-create/components/errors.js","features/sale/sale-create/components/sale-create.js","contexts/auth.context.js","components/layouts/admin.layout.js","App.js","routes.js","index.js"],"names":["useHttp","useState","loading","setLoading","error","setError","request","useCallback","url","a","method","body","headers","JSON","stringify","fetch","response","json","data","ok","Error","errors","message","clearError","Constants","ProductItem","props","classes","useStyles","product","editProduct","changeHandler","event","newProduct","target","name","value","Grid","container","ListItem","key","number","item","xs","Typography","variant","TextField","title","label","size","onChange","className","maxWidth","code","amount","price","Divider","component","makeStyles","theme","width","padding","Form","shops","suppliers","categories","saveForm","success","productsText","shop","supplier","supplyType","category","form","setForm","products","setProducts","disabled","setDisabled","changeFormHandler","productIndex","findIndex","x","slice","FormControl","formControl","InputLabel","id","Select","labelId","MenuItem","map","multiline","rows","fullWidth","Button","color","onClick","length","split","replace","sum","productsForSave","CircularProgress","List","margin","spacing","minWidth","API","ImportPage","setShops","setCategories","setSuppliers","saveSuccess","setSaveSuccess","getShops","getCategories","getSuppliers","useEffect","API_PRODUCTS","setShopFilter","createEvent","setCategoryFilter","setTitleFilter","setMinAmountFilter","setSupplierFilter","fetchProductsFx","createEffect","handler","res","fetchProductsBySupplierFx","$products","createStore","on","doneData","state","$filterShopId","_","shopId","$filterCategoryId","categoryId","$filterSupplierId","supplierId","$filterTitle","$filterMinAmount","$filteredProducts","combine","minAmount","filter","toLowerCase","includes","API_SHOPS","API_CATEGORIES","API_SUPPLIERS","fetchShopsFx","fetchCategoriesFx","fetchSupplierFx","$shopsFilter","$categoriesFilter","$suppliersFilter","$errorStore","fetchSuppliersFx","finally","watch","createSupplierFx","phone","email","ProductTableFilters","useStore","ProductsTable","page","rowsPerPage","handleOpenDialog","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","row","primeCost","bind","ProductsTablePaginator","handleChangePage","handleChangeRowsPerPage","TablePagination","rowsPerPageOptions","count","onChangePage","onChangeRowsPerPage","Products","setPage","setRowsPerPage","openDialog","setOpenDialog","setDetailProduct","separator","newPage","Dialog","open","onClose","DialogTitle","DialogContent","autoFocus","type","ProductsPage","ProductsHistory","setShop","startDate","setStartDate","endDate","setEndDate","getProducts","date","Date","dateTime","defaultValue","textField","InputLabelProps","shrink","utils","DateFnsUtils","disableToolbar","format","KeyboardButtonProps","toLocaleDateString","productTitle","supplierName","shopTitle","selectEmpty","marginTop","SupplyProductItem","index","supplyProduct","productId","procurementCost","changeProduct","SupplyProductForm","supplyProducts","setSupplyProducts","changeItemState","console","log","saveShopFx","ShopCreate","setTitle","ShopsList","shopsData","SupplierCreate","setName","setPhone","setEmail","SuppliersList","suppliersData","createCategoryFx","CategoryCreate","CategoriesList","categoriesData","API_SUPPLYPRODUCTS","fetchSupplyProductsFx","SupplyProductsList","minProcurementCost","setMinProcurementCost","supplyProductId","shopAmount","suppliedAmount","API_MANAGERS","clickMargin","clickTurnover","fetchManagersFx","filterManagersFx","dates","$managers","managers","$marginOrdered","$turnoverOrdered","$orderedManagers","turnover","sort","b","ManagerList","API_DELETED_SALES","fetchDeletedSalesFx","$deletedSales","deletedSales","ArchiveSaleListItem","sale","setOpen","saleType","discount","buyer","IconButton","aria-lavel","style","paddingBottom","paddingTop","colSpan","Collapse","in","timeout","unmountOnExit","Box","payments","payment","account","deletedDate","ArchiveSalesList","sales","ProductsList","API_PRODUCT_INFO","fetchProductInfoFx","zaglushka","Promise","resolve","reject","setTimeout","supplies","supplierTitle","understaffed","createUnderstaffedProductFx","$currentProduct","productInfo","ProductInfo","Card","CardContent","gutterBottom","fontSize","ProductSupplies","Paper","aria-label","align","scope","ProductsUnderstaffed","shopsList","React","handleClose","currentProduct","newProductAmount","setNewProductAmount","newProductShopId","setNewProductShopId","DialogActions","TabPanel","children","other","role","hidden","aria-labelledby","ProductTabs","setValue","Tabs","indicatorColor","textColor","newValue","centered","Tab","Product","API_SALE_CREATE","addProductToSale","removeProductFromSale","changeProductPrice","changeProductAmount","activateCashPayment","deactivateCashPayment","changeCashSum","activateCashlessPayment","deactivateCashlessPayment","changeCashlessSum","selectMoneyWorkerId","selectManagerId","changeDiscount","changeDeferred","changeForRussia","selectBuyerId","updateSaleInfo","resetSelectedMoneyWorker","$saleInfo","managerId","deferred","forRussia","buyerId","$saleProducts","curProduct","find","$cost","sample","source","fn","reduce","acc","$cashPayment","active","$cashlessPayment","moneyWorkerId","$errors","some","saleProducts","cash","cashless","cost","result","push","fxCreateSale","changeFilterProductTitle","selectProductCategory","fxFetchAvailableProducts","$availableProducts","availableAmount","stockAmount","$filterProductTitle","$filterProductCategory","API_AVAILABLE_PRODUCTS","use","SelectProducts","filterTitle","filterCategory","renderRow","button","e","preventDefault","ListItemText","primary","selectProducts","onMouseEnter","marginRight","handleMouseOverSelectProducts","onMouseLeave","toElement","relatedTarget","parentNode","handleMouseOutSelectProducts","sectionTitle","productList","height","itemSize","itemCount","position","right","bottom","top","paddingLeft","boxSizing","zIndex","backgroundColor","boxShadow","transition","fontWeight","transform","display","left","SelectedProductItem","productItem","required","startIcon","border","alignItems","SelectedProductsList","CashPayment","FormControlLabel","marginDefault","control","Checkbox","checked","labelPlacement","marginLeft","fetchMoneyWorkersFx","$moneyWorkers","moneyWorkers","CashlessPayment","moneyWorker","PaymentMethods","SaleInfo","manager","InputProps","readOnly","Errors","SaleCreate","saleCreateForm","root","flexGrow","AuthContext","createContext","userId","userRole","isAuth","mainListItems","Link","to","secondListItems","href","AdminLayout","openSidebar","setOpenSidebar","AppBar","clsx","appBar","appBarShift","Toolbar","toolbar","edge","menuButton","menuButtonHidden","noWrap","Drawer","paper","drawerPaper","drawerPaperClose","toolbarIcon","content","appBarSpacer","Container","paddingRight","justifyContent","mixins","drawer","transitions","create","easing","sharp","duration","leavingScreen","enteringScreen","whiteSpace","overflowX","breakpoints","up","overflow","flexDirection","fixedHeight","App","routes","path","exact","useCookies","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e2b5ed1c.chunk.js","sourcesContent":["import {useCallback, useState} from \"react\";\r\n\r\nexport const useHttp = () => {\r\n  const [loading, setLoading] = useState(false)\r\n  const [error, setError] = useState(null)\r\n  \r\n  const request = useCallback(async (url, method = 'GET', body = null, headers = {}) => {\r\n    setLoading(true)\r\n    try {\r\n      if(body) {\r\n        body = JSON.stringify(body)\r\n        headers['Content-Type'] = 'application/json'\r\n      }\r\n      \r\n      const response = await fetch(url, {method, body, headers})\r\n      const data = await response.json()\r\n      \r\n      if(!response.ok) {\r\n        throw new Error(data.errors[0] || 'Что-то не так')\r\n      }\r\n      \r\n      setLoading(false)\r\n      \r\n      return data;\r\n    } \r\n    catch (e) {\r\n      setLoading(false)\r\n      setError(e.message)\r\n      throw e\r\n    }\r\n  }, [])\r\n  \r\n  const clearError = useCallback(() => setError(null), [])\r\n  return {loading, request, error, clearError}\r\n}","export const Constants = {\r\n  //API: 'http://68.183.78.15/'\r\n  API: 'https://localhost:5001/'\r\n}","import React from \"react\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nexport const ProductItem = props => {\r\n  const classes = useStyles()\r\n  const {product, editProduct} = props\r\n\r\n  const changeHandler = event => {\r\n    const newProduct = {...product, [event.target.name]: [event.target.value]}\r\n    editProduct(newProduct)\r\n  }\r\n\r\n  return (\r\n    <Grid container>\r\n      <ListItem key={product.number}>\r\n        <Grid item xs={1}>\r\n          <Typography variant='h6'>{product.number}</Typography>\r\n        </Grid>\r\n        <Grid item container xs={11}>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              value={product.title}\r\n              variant='outlined'\r\n              label='Название'\r\n              size='small'\r\n              name='title'\r\n              onChange={changeHandler}\r\n              className={classes.maxWidth}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <TextField\r\n              value={product.code}\r\n              variant='outlined'\r\n              label='Артикул'\r\n              size='small'\r\n              name='code'\r\n              onChange={changeHandler}\r\n              className={classes.maxWidth}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <TextField\r\n              className={classes.maxWidth}\r\n              value={product.amount}\r\n              variant='outlined'\r\n              label='Количество'\r\n              size='small'\r\n              name='amount'\r\n              onChange={changeHandler}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <TextField\r\n              value={product.price}\r\n              variant='outlined'\r\n              label='Закупочная стоимость'\r\n              size='small'\r\n              name='price'\r\n              onChange={changeHandler}\r\n              className={classes.maxWidth}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </ListItem>\r\n      <Divider variant='inset' component='li'/>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  maxWidth: {\r\n    width: '100%',\r\n    padding: 5\r\n  }\r\n}))","import React, {Fragment, useState} from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {ProductItem} from \"./product-item\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nexport const Form = (props) => {\r\n  const classes = useStyles()\r\n  const {shops, suppliers, categories, saveForm, loading, error, success} = props\r\n\r\n  const [form, setForm] = useState({\r\n    productsText: '',\r\n    shop: null,\r\n    supplier: null,\r\n    supplyType: null,\r\n    category: null\r\n  })\r\n  const [products, setProducts] = useState([])\r\n  const [disabled, setDisabled] = useState(false)\r\n\r\n  const changeFormHandler = event => {\r\n    setForm({...form, [event.target.name]: event.target.value})\r\n  }\r\n\r\n  const productsTextHandle = () => {\r\n    if(form.productsText.length <= 0)\r\n      return\r\n\r\n    const productsText = form.productsText.split('\\n');\r\n    const productsProperties = productsText.map(x => x.split('\\t'));\r\n\r\n    const products = productsProperties.map(x => {\r\n      return {\r\n        number: +(x[0].replace(',', '.').replace(/\\s+/g,'')),\r\n        code: x[1],\r\n        title: x[2],\r\n        amount: +(x[3].replace(',', '.').replace(/\\s+/g,'')),\r\n        price: +(x[5].replace(',', '.').replace(/\\s+/g,'')),\r\n        sum: +(x[6].replace(',', '.').replace(/\\s+/g,''))\r\n      }\r\n    });\r\n\r\n    setProducts(products)\r\n  }\r\n\r\n  const editProduct = (product) => {\r\n    const productIndex = products.findIndex(x => x.number === product.number)\r\n    setProducts([...products.slice(0, productIndex), product, ...products.slice(productIndex + 1)])\r\n  }\r\n\r\n  const saveHandler = () => {\r\n    setDisabled(true)\r\n\r\n    const productsForSave = products.map(product => ({\r\n      ...product, ['price']: product.price + ''\r\n    }))\r\n\r\n    saveForm({...form, products: productsForSave})\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Grid item xs={4}>\r\n        <FormControl className={classes.formControl}>\r\n          <InputLabel id='shop-select'>Магазин</InputLabel>\r\n          <Select\r\n            labelId='shop-select'\r\n            value={form.shop}\r\n            onChange={changeFormHandler}\r\n            name='shop'\r\n          >\r\n            <MenuItem value={0}>Выбрать магазин</MenuItem>\r\n            {shops.map(shop => (\r\n              <MenuItem key={shop.id} value={shop.id}>{shop.title}</MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n        <FormControl className={classes.formControl}>\r\n          <InputLabel id='shop-select'>Поставщика</InputLabel>\r\n          <Select\r\n            labelId='shop-select'\r\n            value={form.supplier}\r\n            onChange={changeFormHandler}\r\n            name='supplier'\r\n          >\r\n            <MenuItem value={0}>Выбрать поставщика</MenuItem>\r\n            {suppliers.map(supplier => (\r\n              <MenuItem key={supplier.id} value={supplier.id}>{supplier.name}</MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n        <FormControl className={classes.formControl}>\r\n          <InputLabel id='shop-select'>Тип товара</InputLabel>\r\n          <Select\r\n            labelId='shop-select'\r\n            value={form.supplyType}\r\n            onChange={changeFormHandler}\r\n            name='supplyType'\r\n          >\r\n            <MenuItem value={0}>Выбрать тип товара</MenuItem>\r\n            <MenuItem value={1}>Оплаченный товар</MenuItem>\r\n            <MenuItem value={2}>Товар под реализацию</MenuItem>\r\n            <MenuItem value={3}>Отсроченый платёж</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n        <FormControl className={classes.formControl}>\r\n          <InputLabel id='shop-select'>Категория</InputLabel>\r\n          <Select\r\n            labelId='shop-select'\r\n            value={form.category}\r\n            onChange={changeFormHandler}\r\n            name='category'\r\n          >\r\n            <MenuItem value={0}>Выбрать категорию</MenuItem>\r\n            {categories.map(category => (\r\n              <MenuItem key={category.id} value={category.id}>{category.title}</MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n        <br/>\r\n        <TextField\r\n          label=\"Внесите товары\"\r\n          multiline\r\n          rows={10}\r\n          variant=\"outlined\"\r\n          value={form.productsText}\r\n          onChange={changeFormHandler}\r\n          name=\"productsText\"\r\n          fullWidth\r\n        />\r\n        <br/>\r\n        <Button\r\n          variant=\"contained\"\r\n          color='primary'\r\n          onClick={productsTextHandle}\r\n        >\r\n          Обработать\r\n        </Button>\r\n        <br/>\r\n        <br/>\r\n        <br/>\r\n        <br/>\r\n        <br/>\r\n        <Button\r\n          variant='contained'\r\n          color='primary'\r\n          onClick={saveHandler}\r\n          disabled={disabled}\r\n        >\r\n          Сохранить\r\n        </Button>\r\n        <br/>\r\n        <br/>\r\n        {loading && <CircularProgress/>}\r\n        {error && <p>Ошибка: {error}</p>}\r\n        {success && <p>Успех!</p>}\r\n      </Grid>\r\n      <Grid item xs={7}>\r\n        <List>\r\n          {products.map(product => (\r\n            <ProductItem\r\n              key={product.number}\r\n              product={product}\r\n              editProduct={editProduct}\r\n            />\r\n          ))}\r\n        </List>\r\n      </Grid>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  }\r\n}));","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport {useHttp} from \"../../hooks/http.hook\";\r\nimport {Constants} from \"../../const\";\r\nimport {Form} from \"../../components/import-form/form\";\r\n\r\nconst API = Constants.API\r\n\r\nexport const ImportPage = () => {\r\n  const {request, loading, error} = useHttp()\r\n\r\n  const [shops, setShops] = useState([])\r\n  const [categories, setCategories] = useState([])\r\n  const [suppliers, setSuppliers] = useState([])\r\n  const [saveSuccess, setSaveSuccess] = useState(false)\r\n\r\n  const getShops = useCallback(async () => {\r\n    try {\r\n      const data = await request(API + 'api/shops')\r\n      setShops(data)\r\n    }\r\n    catch (e) {}\r\n  }, [request])\r\n\r\n  const getCategories = useCallback(async () => {\r\n    try {\r\n      const data = await request(API + 'api/categories')\r\n      setCategories(data)\r\n    }\r\n    catch (e) {}\r\n  }, [request])\r\n\r\n  const getSuppliers = useCallback(async () => {\r\n    try {\r\n      const data = await request(API + 'api/suppliers')\r\n      setSuppliers(data)\r\n    }\r\n    catch (e) {}\r\n  }, [request])\r\n\r\n  useEffect(() => {\r\n    getShops()\r\n    getCategories()\r\n    getSuppliers()\r\n  }, [getShops, getCategories, getSuppliers])\r\n\r\n  const saveForm = async (data) => {\r\n    try {\r\n      const response = await request(API + 'api/supplyProducts/import', 'POST', {...data})\r\n      setSaveSuccess(true)\r\n    }\r\n    catch (e) { }\r\n  }\r\n  \r\n  return (\r\n    <Form\r\n      shops={shops}\r\n      suppliers={suppliers}\r\n      categories={categories}\r\n      saveForm={saveForm}\r\n      loading={loading}\r\n      error={error}\r\n      success={saveSuccess}\r\n    />\r\n  )\r\n}","import {Constants} from \"../../const\";\r\nimport {combine, createEffect, createEvent, createStore, sample} from \"effector\";\r\n\r\nconst API_URL = Constants.API\r\nconst API_PRODUCTS = API_URL + 'api/products'\r\n\r\nexport const setShopFilter = createEvent()\r\nexport const setCategoryFilter = createEvent()\r\nexport const setTitleFilter = createEvent()\r\nexport const setMinAmountFilter = createEvent()\r\nexport const setSupplierFilter = createEvent()\r\n\r\nexport const fetchProductsFx = createEffect({\r\n  async handler() {\r\n    const res = await fetch(API_PRODUCTS)\r\n    return res.json()\r\n  }\r\n})\r\n\r\nexport const fetchProductsBySupplierFx = createEffect({\r\n  async handler(id) {\r\n    const res = await fetch(API_PRODUCTS + \"/GetBySupplier/\" + id)\r\n    return res.json()\r\n  }\r\n})\r\n\r\nexport const $products = createStore([])\r\n  .on(fetchProductsFx.doneData, (state, products) => [...products])\r\n  .on(fetchProductsBySupplierFx.doneData, (state, products) => [...products])\r\n\r\nexport const $filterShopId = createStore(0)\r\n  .on(setShopFilter, (_, shopId) => shopId)\r\n\r\nexport const $filterCategoryId = createStore(0)\r\n  .on(setCategoryFilter, (_, categoryId) => categoryId)\r\n\r\nexport const $filterSupplierId = createStore(0)\r\n  .on(setSupplierFilter, (_, supplierId) => supplierId)\r\n\r\nexport const $filterTitle = createStore('')\r\n  .on(setTitleFilter, (_, title) => title)\r\n\r\nexport const $filterMinAmount = createStore(0)\r\n  .on(setMinAmountFilter, (_, amount) => amount)\r\n\r\nexport const $filteredProducts = combine(\r\n  $products,\r\n  $filterShopId,\r\n  $filterCategoryId,\r\n  $filterTitle,\r\n  $filterMinAmount,\r\n  (products, shopId, categoryId, title, minAmount) => products\r\n    .filter(product => shopId !== 0\r\n      ? product.shopId === shopId\r\n      : true)\r\n    .filter(product => categoryId !== 0\r\n      ? product.categoryId === categoryId\r\n      : true)\r\n    .filter(product => title !== ''\r\n      ? product.title.toLowerCase().includes(title.toLowerCase())\r\n      : true)\r\n    .filter(product => product.amount >= minAmount)\r\n)","import {Constants} from \"../../const\";\r\nimport {createEffect, createStore} from \"effector\";\r\n\r\nconst API_URL = Constants.API\r\nconst API_SHOPS = API_URL + 'api/shops'\r\nconst API_CATEGORIES = API_URL + 'api/categories'\r\nconst API_SUPPLIERS = API_URL + 'api/suppliers'\r\n\r\nexport const fetchShopsFx = createEffect({\r\n  async handler() {\r\n    const res = await fetch(API_SHOPS)\r\n    return res.json()\r\n  }\r\n})\r\n\r\nexport const fetchCategoriesFx = createEffect({\r\n  async handler() {\r\n    const res = await fetch(API_CATEGORIES)\r\n    return res.json()\r\n  }\r\n})\r\n\r\nexport const fetchSupplierFx = createEffect({\r\n  async handler() {\r\n    const res = await fetch(API_SUPPLIERS)\r\n    return res.json()\r\n  }\r\n})\r\n\r\nexport const $shopsFilter = createStore([])\r\n  .on(fetchShopsFx.doneData, (_, shops) => [...shops])\r\n\r\nexport const $categoriesFilter = createStore([])\r\n  .on(fetchCategoriesFx.doneData, (_, categories) => [...categories])\r\n\r\nexport const $suppliersFilter = createStore([])\r\n  .on(fetchSupplierFx.doneData, (_, suppliers) => [...suppliers])","import { createEvent, createStore } from 'effector';\r\n\r\nexport const setError = createEvent();\r\nexport const clearError = createEvent();\r\n\r\nexport const $errorStore = createStore([]);\r\n\r\n$errorStore\r\n\t.on(setError, (state, error) => [...state, error])\r\n\t.on(clearError, (state) => [])","import {Constants} from \"../const\";\r\nimport {createEffect, createStore} from \"effector\";\r\nimport { setError } from \"../shared/store/error-store\";\r\n\r\nconst API_URL = Constants.API\r\nconst API_SUPPLIERS = API_URL + 'api/suppliers'\r\n\r\nexport const fetchSuppliersFx = createEffect({\r\n  async handler() {\r\n    const res = await fetch(API_SUPPLIERS)\r\n    return res.json()\r\n  }\r\n})\r\n\r\nfetchSuppliersFx.finally.watch(data => {\r\n  if(data.error)\r\n    setError(`При загрузке списка поставщиков, произошла ошибка: ${data.error}`)\r\n})\r\n\r\nexport const createSupplierFx = createEffect({\r\n  async handler(name, phone, email) {\r\n    const data = {name, phone, email}\r\n\r\n    const res = await fetch(API_SUPPLIERS, {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      method: 'POST',\r\n      body: JSON.stringify(data)\r\n    })\r\n\r\n    return res.json()\r\n  }\r\n})\r\n\r\ncreateSupplierFx.finally.watch(data => {\r\n  if(data.error)\r\n    setError(`При создании поставщика, произошла ошибка: ${data.error}`)\r\n})\r\n\r\nexport const suppliers = createStore([])\r\n  .on(fetchSuppliersFx.doneData, (state, suppliers) => [...suppliers])\r\n  .on(createSupplierFx.doneData, (state, supplier) => [...state, supplier])","import React, {useEffect} from \"react\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {useStore} from \"effector-react\";\r\nimport {\r\n  $filterCategoryId, $filterMinAmount,\r\n  $filterShopId, $filterSupplierId, fetchProductsBySupplierFx, fetchProductsFx,\r\n  setCategoryFilter, setMinAmountFilter,\r\n  setShopFilter, setSupplierFilter,\r\n  setTitleFilter\r\n} from \"../../models/product-table/product.store\";\r\nimport {\r\n  $categoriesFilter,\r\n  $shopsFilter,\r\n  $suppliersFilter,\r\n  fetchCategoriesFx,\r\n  fetchShopsFx, fetchSupplierFx\r\n} from \"../../models/filter/filter.store\";\r\nimport {fetchSuppliersFx} from \"../../store/supplier-store\";\r\n\r\nexport const ProductTableFilters = () => {\r\n  const classes = useStyles()\r\n\r\n  const shopId = useStore($filterShopId)\r\n  const categoryId = useStore($filterCategoryId)\r\n  const supplierId = useStore($filterSupplierId)\r\n  const shops = useStore($shopsFilter)\r\n  const categories = useStore($categoriesFilter)\r\n  const suppliers = useStore($suppliersFilter)\r\n  const minAmount = useStore($filterMinAmount)\r\n\r\n  const handleChangeMinAmount = event => {\r\n    setMinAmountFilter(event.target.value)\r\n  }\r\n\r\n  const handleChangeShop = (event) => {\r\n    setShopFilter(event.target.value)\r\n  };\r\n\r\n  const handleChangeCategory = (event) => {\r\n    setCategoryFilter(event.target.value)\r\n  };\r\n\r\n  const handleChangeSupplier = (event) => {\r\n    const value = event.target.value\r\n\r\n    if(value > 0)\r\n      fetchProductsBySupplierFx(value)\r\n    else\r\n      fetchProductsFx()\r\n\r\n    setSupplierFilter(value)\r\n  }\r\n\r\n  const handleChangeTitle = (event) => {\r\n    setTitleFilter(event.target.value)\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchCategoriesFx()\r\n    fetchShopsFx()\r\n    fetchSupplierFx()\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel id=\"demo-simple-select-label\">Магазин</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-label\"\r\n          id=\"demo-simple-select\"\r\n          value={shopId}\r\n          onChange={handleChangeShop}\r\n        >\r\n          <MenuItem value={0}>Выбрать магазин</MenuItem>\r\n          {shops.map(shop => (\r\n            <MenuItem key={shop.id} value={shop.id}>{shop.title}</MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel id=\"demo-simple-select-label\">Категория</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-label\"\r\n          id=\"demo-simple-select\"\r\n          value={categoryId}\r\n          onChange={handleChangeCategory}\r\n        >\r\n          <MenuItem value={0}>Выбрать категорию</MenuItem>\r\n          {categories.map(category => (\r\n            <MenuItem key={category.id} value={category.id}>{category.title}</MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel id=\"demo-simple-select-label\">Поставщк</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-label\"\r\n          id=\"demo-simple-select\"\r\n          value={supplierId}\r\n          onChange={handleChangeSupplier}\r\n        >\r\n          <MenuItem value={0}>Выбрать поставщика</MenuItem>\r\n          {suppliers.map(supplier => (\r\n            <MenuItem key={supplier.id} value={supplier.id}>{supplier.name}</MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <TextField\r\n          label=\"Поиск по названию\"\r\n          onChange={handleChangeTitle}\r\n        />\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <TextField\r\n          label=\"Минимальное кол-во\"\r\n          onChange={handleChangeMinAmount}\r\n          value={minAmount}\r\n        />\r\n      </FormControl>\r\n    </>\r\n  )\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  }\r\n}));","import React from \"react\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\n\r\nexport const ProductsTable = props => {\r\n  const {products, page, rowsPerPage, handleOpenDialog} = props\r\n\r\n  return (\r\n    <TableContainer>\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Артикул</TableCell>\r\n            <TableCell>Название</TableCell>\r\n            <TableCell>Количество</TableCell>\r\n            <TableCell>Цена</TableCell>\r\n            <TableCell>Себестоимость</TableCell>\r\n            <TableCell>Магазин</TableCell>\r\n            <TableCell>Категория</TableCell>\r\n            <TableCell>Действия</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {products\r\n          .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n          .map(row => (\r\n            <TableRow key={row.id}>\r\n              <TableCell>{row.code}</TableCell>\r\n              <TableCell>{row.title}</TableCell>\r\n              <TableCell>{row.amount}</TableCell>\r\n              <TableCell>{row.price}</TableCell>\r\n              <TableCell>{row.primeCost}</TableCell>\r\n              <TableCell>{row.shop}</TableCell>\r\n              <TableCell>{row.category}</TableCell>\r\n              <TableCell>\r\n                <Button variant=\"contained\" onClick={handleOpenDialog.bind(this, row)}>\r\n                  Detail\r\n                </Button>\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  )\r\n}","import React from \"react\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\n\r\nexport const ProductsTablePaginator = props => {\r\n  const {products, rowsPerPage, page, handleChangePage, handleChangeRowsPerPage} = props\r\n\r\n  return (\r\n    <TablePagination\r\n      rowsPerPageOptions={[10, 25, 50, 100]}\r\n      component='div'\r\n      count={products.length}\r\n      rowsPerPage={rowsPerPage}\r\n      page={page}\r\n      onChangePage={handleChangePage}\r\n      onChangeRowsPerPage={handleChangeRowsPerPage}\r\n    />\r\n  )\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport {ProductTableFilters} from \"./product-table-filters\";\r\nimport {ProductsTable} from \"./products-table\";\r\nimport {ProductsTablePaginator} from \"./products-table-paginator\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport {\r\n  $filteredProducts,\r\n  fetchProductsFx\r\n} from \"../../models/product-table/product.store\";\r\nimport {useStore} from \"effector-react\";\r\nimport {CSVLink} from \"react-csv\";\r\n\r\nexport const Products = () => {\r\n  const classes = useStyles()\r\n\r\n  const products = useStore($filteredProducts)\r\n\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n\r\n  const [openDialog, setOpenDialog] = useState(false)\r\n  const [detailProduct, setDetailProduct] = useState(null)\r\n\r\n  const handleOpenDialog = (product) => {\r\n    setDetailProduct(product)\r\n    setOpenDialog(true)\r\n  }\r\n\r\n  const handleCloseDialog = () => {\r\n    setOpenDialog(false)\r\n  }\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchProductsFx()\r\n  }, [])\r\n\r\n  const headers = [\r\n    {label: \"Артикул\", key: 'code'},\r\n    {label: \"Наименование\", key: 'title'},\r\n    {label: \"Кол-во\", key: 'amount'},\r\n    {label: \"Цена\", key: 'price'},\r\n    {label: \"Себестоимость\", key: 'primeCost'},\r\n    {label: \"Магазин\", key: 'shop'},\r\n    {label: \"Категория\", key: 'category'}\r\n  ]\r\n\r\n  const data = products.map(product => (\r\n    {\r\n      code: product.code,\r\n      title: product.title,\r\n      amount: product.amount,\r\n      price: product.price,\r\n      primeCost: product.primeCost,\r\n      shop: product.shop,\r\n      category: product.category\r\n    }\r\n  ));\r\n\r\n  return (\r\n    <>\r\n      <CSVLink data={data} headers={headers} separator={';'}>\r\n        Download me\r\n      </CSVLink>;\r\n      <ProductTableFilters/>\r\n      <ProductsTable\r\n        products={products}\r\n        page={page}\r\n        rowsPerPage={rowsPerPage}\r\n        handleOpenDialog={handleOpenDialog}\r\n      />\r\n      <ProductsTablePaginator\r\n        products={products}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        handleChangePage={handleChangePage}\r\n        handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n      />\r\n      <Dialog open={openDialog} onClose={handleCloseDialog}>\r\n        <DialogTitle>Product</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            label='Название'\r\n            type='text'\r\n            margin='dense'\r\n          />\r\n          <TextField\r\n            label='Артикул'\r\n            type='text'\r\n            margin='dense'\r\n          />\r\n          <TextField\r\n            label='Стоимость для продажи'\r\n            type='number'\r\n            margin='dense'\r\n          />\r\n          <FormControl className={classes.formControl}>\r\n            <InputLabel id='category-select'>Категория</InputLabel>\r\n            <Select\r\n              labelId='category-select'\r\n            >\r\n              <MenuItem>1111</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n          <FormControl className={classes.formControl}>\r\n            <InputLabel id='shop-select'>Магазин</InputLabel>\r\n            <Select\r\n              labelId='shop-select'\r\n            >\r\n              <MenuItem>1111</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </>\r\n  )\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  }\r\n}));","import React, {useCallback, useEffect, useState} from 'react'\r\nimport {useHttp} from \"../../hooks/http.hook\";\r\nimport {Constants} from \"../../const\";\r\nimport {Products} from \"../../components/admin-products/products\";\r\nimport {useStore} from \"effector-react\";\r\nimport {$filteredProducts, fetchProductsFx} from \"../../models/product-table/product.store\";\r\n\r\nconst API = Constants.API\r\n\r\nexport const ProductsPage = () => {\r\n  const {loading, request} = useHttp()\r\n  const products = useStore($filteredProducts)\r\n\r\n  useEffect(() => {\r\n    fetchProductsFx()\r\n  }, [])\r\n\r\n  if(loading)\r\n    return <div>Загрузка...</div>\r\n  else\r\n    return <Products/>\r\n}","import React, {useCallback, useEffect, useState} from 'react'\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {useHttp} from \"../../hooks/http.hook\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {Constants} from \"../../const\";\r\nimport {KeyboardDatePicker, MuiPickersUtilsProvider} from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\n\r\nconst API = Constants.API\r\n\r\nexport const ProductsHistory = () => {\r\n  const classes = useStyles()\r\n  const [products, setProducts] = useState([])\r\n  const [shops, setShops] = useState([])\r\n  const [shop, setShop] = useState(0)\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const {loading, request} = useHttp()\r\n  const [startDate, setStartDate] = useState(null)\r\n  const [endDate, setEndDate] = useState(null)\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeShop = (event) => {\r\n    setShop(event.target.value);\r\n  };\r\n\r\n  const getProducts = useCallback(async () => {\r\n    try {\r\n      const data = await request(API + 'api/productsHistory')\r\n      setProducts(data.map(product => (\r\n        {...product, date: new Date(product.dateTime)}\r\n      )))\r\n    }\r\n    catch (e) {}\r\n  }, [request])\r\n\r\n  const getShops = useCallback(async () => {\r\n    try {\r\n      const data = await request(API + 'api/shops')\r\n      setShops(data)\r\n    }\r\n    catch (e) {}\r\n  }, [request])\r\n\r\n  useEffect(() => {\r\n    getProducts()\r\n    getShops()\r\n  }, [getProducts, getShops])\r\n\r\n  return(\r\n    <>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel id=\"demo-simple-select-label\">Магазин</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-label\"\r\n          id=\"demo-simple-select\"\r\n          value={shop}\r\n          onChange={handleChangeShop}\r\n        >\r\n          <MenuItem value={0}>Выбрать магазин</MenuItem>\r\n          {shops.map(shop => (\r\n            <MenuItem key={shop.id} value={shop.id}>{shop.title}</MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <TextField\r\n          label=\"Дата с\"\r\n          type=\"date\"\r\n          defaultValue=\"\"\r\n          className={classes.textField}\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n          onChange={event => setStartDate(new Date(event.target.value))}\r\n        />\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n          <KeyboardDatePicker\r\n            disableToolbar\r\n            variant='inline'\r\n            format='MM/dd/yyyy'\r\n            margin='normal'\r\n            label='Дата с'\r\n            value={startDate}\r\n            onChange={event => setStartDate(event)}\r\n            KeyboardButtonProps={{\r\n              'aria-label': 'change date',\r\n            }}\r\n          />\r\n        </MuiPickersUtilsProvider>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <TextField\r\n          label=\"Дата по\"\r\n          type=\"date\"\r\n          defaultValue=\"\"\r\n          className={classes.textField}\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n          onChange={event => setEndDate(new Date(event.target.value))}\r\n        />\r\n      </FormControl>\r\n      <TableContainer>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Дата</TableCell>\r\n              <TableCell>Товар</TableCell>\r\n              <TableCell>Количество</TableCell>\r\n              <TableCell>Поставщик</TableCell>\r\n              <TableCell>Тип</TableCell>\r\n              <TableCell>Магазин</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {products\r\n              .filter(row => shop !== 0\r\n                ? row.shopId === shop\r\n                : true)\r\n              .filter(row => startDate\r\n                ? row.date >= startDate\r\n                : true)\r\n              .filter(row => endDate\r\n                ? row.date <= endDate\r\n                : true)\r\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n              .map(row => (\r\n              <TableRow key={row.id}>\r\n                <TableCell>{row.date.toLocaleDateString()}</TableCell>\r\n                <TableCell>{row.productTitle}</TableCell>\r\n                <TableCell>{row.amount}</TableCell>\r\n                <TableCell>{row.supplierName}</TableCell>\r\n                <TableCell>{row.type}</TableCell>\r\n                <TableCell>{row.shopTitle}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 50, 100]}\r\n        component='div'\r\n        count={products\r\n          .filter(row => shop !== 0\r\n            ? row.shopId === shop\r\n            : true)\r\n          .filter(row => startDate\r\n            ? row.date >= startDate\r\n            : true)\r\n          .filter(row => endDate\r\n            ? row.date <= endDate\r\n            : true)\r\n          .length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));","import React from \"react\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nexport const SupplyProductItem = props => {\r\n  const classes = useStyles()\r\n\r\n  const {index, changeFormHandler} = props\r\n  const {productId, amount, shopId, supplierId, procurementCost} = props.supplyProduct\r\n\r\n  const products = [{id: 1, title: 'product1'}, {id: 2, title: 'product2'}]\r\n  const shops = [{id: 2, title: 'shop1'}]\r\n  const suppliers = [{id: 1, title: 'supplier1'}]\r\n\r\n  const changeProduct = event => {\r\n    changeFormHandler(index, event)\r\n  }\r\n\r\n  return(\r\n    <>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel id='product-select'>Товар</InputLabel>\r\n        <Select\r\n          labelId='product-select'\r\n          name='productId'\r\n          value={productId}\r\n          onChange={changeProduct}\r\n        >\r\n          <MenuItem value={0}>Выбрать товар</MenuItem>\r\n          {products.map(product => (\r\n            <MenuItem key={product.id} value={product.id}>{product.title}</MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <TextField\r\n          label='Количество'\r\n          value={amount}\r\n          onChange={changeProduct}\r\n          name='amount'\r\n        />\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel id='shop-select'>Магазин</InputLabel>\r\n        <Select\r\n          labelId='shop-select'\r\n          name='shopId'\r\n          value={shopId}\r\n          onChange={changeProduct}\r\n        >\r\n          <MenuItem value={0}>Выбрать магазин</MenuItem>\r\n          {shops.map(shop => (\r\n            <MenuItem key={shop.id} value={shop.id}>{shop.title}</MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel id='supplier-select'>Поставщик</InputLabel>\r\n        <Select\r\n          labelId='supplier-select'\r\n          name='supplierId'\r\n          value={supplierId}\r\n          onChange={changeProduct}\r\n        >\r\n          <MenuItem value={0}>Выбрать поставшика</MenuItem>\r\n          {suppliers.map(supplier => (\r\n            <MenuItem key={supplier.id} value={supplier.id}>{supplier.title}</MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <TextField\r\n          label='Закупочная стоимость'\r\n          value={procurementCost}\r\n          onChange={changeProduct}\r\n          name='procurementCost'\r\n        />\r\n      </FormControl>\r\n    </>\r\n  )\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  }\r\n}));","import React, {useState} from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport {SupplyProductItem} from \"./supply-product-item\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nexport const SupplyProductForm = () => {\r\n  const classes = useStyles()\r\n\r\n  const [supplyProducts, setSupplyProducts] = useState([\r\n    {\r\n      productId: 0,\r\n      amount: 0,\r\n      shopId: 0,\r\n      supplierId: 0,\r\n      procurementCost: 0\r\n    }\r\n  ])\r\n\r\n  const changeFormHandler = (index, event) => {\r\n    const supplyProduct = supplyProducts[index]\r\n    const changeItemState = {...supplyProduct, [event.target.name]: event.target.value}\r\n\r\n    setSupplyProducts([\r\n      ...supplyProducts.slice(0, index),\r\n      changeItemState,\r\n      ...supplyProducts.slice(index + 1)\r\n    ])\r\n  }\r\n\r\n  const addSupplyProduct = () => {\r\n    setSupplyProducts([...supplyProducts, {\r\n      productId: 0,\r\n      amount: 0,\r\n      shopId: 0,\r\n      supplierId: 0,\r\n      procurementCost: 0\r\n    }])\r\n  }\r\n\r\n  const saveForm = () => {\r\n    console.log(supplyProducts)\r\n  }\r\n\r\n  return(\r\n    <>\r\n      {supplyProducts.map((supplyProduct, index) => (\r\n        <SupplyProductItem\r\n          key={index}\r\n          supplyProduct={supplyProduct}\r\n          changeFormHandler={changeFormHandler}\r\n          index={index}\r\n        />\r\n      ))}\r\n      <Button\r\n        onClick={addSupplyProduct}\r\n      >\r\n        Добавить товар\r\n      </Button>\r\n      <Button\r\n        onClick={saveForm}\r\n      >\r\n        Сохранить\r\n      </Button>\r\n    </>\r\n  )\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  }\r\n}));","import {createEffect, createStore} from \"effector\";\r\nimport {Constants} from \"../const\";\r\nimport {setError, clearError} from \"../shared/store/error-store\"\r\n\r\nconst API_URL = Constants.API\r\nconst API_SHOPS = API_URL + 'api/shops'\r\n\r\nexport const fetchShopsFx = createEffect({\r\n  async handler() {\r\n    const res = await fetch(API_SHOPS)\r\n    return res.json()\r\n  }\r\n})\r\n\r\nfetchShopsFx.finally.watch(data => {\r\n  if(data.error)\r\n    setError(`При загрузке списка магазинов, произошла ошибка: ${data.error}`)\r\n})\r\n\r\nexport const saveShopFx = createEffect({\r\n  async handler(title) {\r\n    const data = {title}\r\n\r\n    const res = await fetch(API_SHOPS, {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      method: 'POST',\r\n      body: JSON.stringify(data)\r\n    })\r\n\r\n    return res.json()\r\n  }\r\n})\r\n\r\nsaveShopFx.finally.watch(data => {\r\n  if(data.error)\r\n    setError(`При сохранении магазина, произошла ошибка: ${data.error}`)\r\n  else \r\n    clearError()\r\n})\r\n\r\nexport const shops = createStore([])\r\n  .on(fetchShopsFx.doneData, (state, shops) => [...shops])\r\n  .on(saveShopFx.doneData, (state, shop) => [...state, shop])","import React, {useState} from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {saveShopFx} from \"../../store/shop-store\";\r\n\r\nexport const ShopCreate = () => {\r\n\r\n  const [title, setTitle] = useState('')\r\n  const [disabled, setDisabled] = useState(false)\r\n\r\n  const saveHandler = () => {\r\n    setDisabled(true)\r\n    saveShopFx(title)\r\n\r\n    setTitle('')\r\n    setDisabled(false)\r\n  }\r\n\r\n  return(\r\n    <>\r\n      <TextField\r\n        label='Название'\r\n        value={title}\r\n        onChange={event => setTitle(event.target.value)}\r\n        name='title'\r\n      />\r\n      <Button\r\n        onClick={saveHandler}\r\n        variant='contained'\r\n        color='primary'\r\n        disabled={disabled}\r\n      >\r\n        Сохранить\r\n      </Button>\r\n    </>\r\n  )\r\n}","import React, {useEffect} from \"react\";\r\nimport {fetchShopsFx, shops} from \"../../store/shop-store\";\r\nimport {useStore} from \"effector-react\";\r\nimport {ShopCreate} from \"./shop-create\";\r\n\r\nexport const ShopsList = () => {\r\n\r\n  useEffect(() => {\r\n    fetchShopsFx()\r\n  }, [])\r\n\r\n  const shopsData = useStore(shops)\r\n\r\n  return(\r\n    <>\r\n      <ShopCreate/>\r\n      <ul>\r\n        {shopsData.map(shop => (\r\n          <li>{shop.id} / {shop.title}</li>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  )\r\n}","import React, {useState} from \"react\";\r\nimport {createSupplierFx} from \"../../store/supplier-store\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nexport const SupplierCreate = () => {\r\n\r\n  const [name, setName] = useState('')\r\n  const [phone, setPhone] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [disabled, setDisabled] = useState(false)\r\n\r\n  const saveHandler = () => {\r\n    setDisabled(true)\r\n    createSupplierFx(name, phone, email)\r\n\r\n    setName('')\r\n    setDisabled(false)\r\n  }\r\n\r\n  return(\r\n    <>\r\n      <TextField\r\n        label='Имя поставщика'\r\n        value={name}\r\n        onChange={event => setName(event.target.value)}\r\n        name='name'\r\n      />\r\n      <TextField\r\n        label='Телефон'\r\n        value={phone}\r\n        onChange={event => setPhone(event.target.value)}\r\n        name='phone'\r\n      />\r\n      <TextField\r\n        label='Почта'\r\n        value={email}\r\n        onChange={event => setEmail(event.target.value)}\r\n        name='email'\r\n      />\r\n      <Button\r\n       onClick={saveHandler}\r\n       variant='contained'\r\n       color='primary'\r\n       disabled={disabled}\r\n      >\r\n        Сохранить\r\n      </Button>\r\n    </>\r\n  )\r\n}","import React, {useEffect} from \"react\";\r\nimport {fetchSuppliersFx, suppliers} from \"../../store/supplier-store\";\r\nimport {useStore} from \"effector-react\";\r\nimport {SupplierCreate} from \"./supplier-create\";\r\n\r\nexport const SuppliersList = () => {\r\n\r\n  useEffect(() => {\r\n    fetchSuppliersFx()\r\n  }, [])\r\n\r\n  const suppliersData = useStore(suppliers)\r\n\r\n  return(\r\n    <>\r\n      <SupplierCreate/>\r\n      <ul>\r\n        {suppliersData.map(supplier => (\r\n          <li>{supplier.id} / {supplier.name}</li>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  )\r\n}","import {Constants} from \"../const\";\r\nimport {createEffect, createStore} from \"effector\";\r\nimport { setError, clearError } from \"../shared/store/error-store\";\r\n\r\nconst API_URL = Constants.API\r\nconst API_CATEGORIES = API_URL + 'api/categories'\r\n\r\nexport const fetchCategoriesFx = createEffect({\r\n  async handler() {\r\n    const res = await fetch(API_CATEGORIES)\r\n    return res.json()\r\n  }\r\n})\r\n\r\nfetchCategoriesFx.finally.watch(data => {\r\n  if(data.error)\r\n    setError(`При загрузке списка категорий, произошла ошибка: ${data.error}`)\r\n  else \r\n    clearError()\r\n})\r\n\r\nexport const createCategoryFx = createEffect({\r\n  async handler(title) {\r\n    const data = {title}\r\n\r\n    const res = await fetch(API_CATEGORIES, {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      method: 'POST',\r\n      body: JSON.stringify(data)\r\n    })\r\n\r\n    return res.json()\r\n  }\r\n})\r\n\r\ncreateCategoryFx.finally.watch(data => {\r\n  if(data.error)\r\n    setError(`При создании категории, произошла ошибка: ${data.error}`)\r\n})\r\n\r\nexport const categories = createStore([])\r\n  .on(fetchCategoriesFx.doneData, (state, categories) => [...categories])\r\n  .on(createCategoryFx.doneData, (state, category) => [...state, category])","import React, {useState} from \"react\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { createCategoryFx } from \"../../store/category-store\";\r\n\r\nexport const CategoryCreate = () => {\r\n\r\n  const [title, setTitle] = useState('')\r\n  const [disabled, setDisabled] = useState(false)\r\n\r\n  const saveHandler = () => {\r\n    setDisabled(true);\r\n    createCategoryFx(title);\r\n\r\n    setTitle('');\r\n    setDisabled(false);\r\n  }\r\n\r\n  return(\r\n    <>\r\n      <TextField\r\n        label='Название'\r\n        value={title}\r\n        onChange={event => setTitle(event.target.value)}\r\n        name='title'\r\n      />\r\n      <Button\r\n       onClick={saveHandler}\r\n       variant='contained'\r\n       color='primary'\r\n       disabled={disabled}\r\n      >\r\n        Сохранить\r\n      </Button>\r\n    </>\r\n  )\r\n}","import React, {useEffect} from \"react\";\r\n\r\nimport {useStore} from \"effector-react\";\r\nimport { fetchCategoriesFx, categories } from \"../../store/category-store\";\r\nimport { CategoryCreate } from './category-create';\r\n\r\nexport const CategoriesList = () => {\r\n\r\n  useEffect(() => {\r\n    fetchCategoriesFx()\r\n  }, [])\r\n\r\n  const categoriesData = useStore(categories)\r\n\r\n  return(\r\n    <>\r\n      <CategoryCreate />\r\n      <ul>\r\n        {categoriesData.map(category => (\r\n          <li>{category.id} / {category.title}</li>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  )\r\n}","import {Constants} from \"../const\";\r\nimport {createEffect, createStore} from \"effector\";\r\nimport { setError } from \"../shared/store/error-store\";\r\n\r\nconst API_URL = Constants.API\r\nconst API_SUPPLYPRODUCTS = API_URL + 'api/supplyProducts'\r\n\r\nexport const fetchSupplyProductsFx = createEffect({\r\n  async handler() {\r\n    const res = await fetch(API_SUPPLYPRODUCTS)\r\n    return res.json()\r\n  }\r\n})\r\n\r\nfetchSupplyProductsFx.finally.watch(data => {\r\n  if(data.error)\r\n    setError(`При загрузке списка поставок, произошла ошибка: ${data.error}`)\r\n})\r\n\r\nexport const supplyProducts = createStore([])\r\n  .on(fetchSupplyProductsFx.doneData, (state, supplyProducts) => [...supplyProducts])","import React, {useEffect, useState} from \"react\";\r\nimport {fetchSupplyProductsFx, supplyProducts} from \"../../../store/supply-product-store\";\r\nimport {useStore} from \"effector-react\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nexport const SupplyProductsList = () => {\r\n\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const [minProcurementCost, setMinProcurementCost] = useState(0)\r\n\r\n  useEffect(() => {\r\n    fetchSupplyProductsFx()\r\n  }, [])\r\n\r\n  const data = useStore(supplyProducts)\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  return(\r\n    <>\r\n      <FormControl>\r\n        <TextField\r\n          label=\"Закупочная стоимость\"\r\n          defaultValue=\"0\"\r\n          onChange={event => setMinProcurementCost(event.target.value)}\r\n        />\r\n      </FormControl>\r\n      <TableContainer>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Id</TableCell>\r\n              <TableCell>Товар</TableCell>\r\n              <TableCell>Закупочная цена</TableCell>\r\n              <TableCell>Кол-во на складе</TableCell>\r\n              <TableCell>Поставленное кол-во</TableCell>\r\n              <TableCell>Магазин</TableCell>\r\n              <TableCell>Поставщик</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {data\r\n              .filter(row => row.procurementCost >= minProcurementCost)\r\n              //.sort((a, b) => (b.procurementCost - a.procurementCost))\r\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n              .map(row => (\r\n                <TableRow key={row.supplyProductId}>\r\n                  <TableCell>{row.supplyProductId}</TableCell>\r\n                  <TableCell>{row.productTitle}</TableCell>\r\n                  <TableCell>{row.procurementCost}</TableCell>\r\n                  <TableCell>{row.shopAmount}</TableCell>\r\n                  <TableCell>{row.suppliedAmount}</TableCell>\r\n                  <TableCell>{row.shopTitle}</TableCell>\r\n                  <TableCell>{row.supplierName}</TableCell>\r\n                </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 50, 100]}\r\n        component='div'\r\n        count={data\r\n          .filter(row => row.procurementCost >= minProcurementCost)\r\n          .length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n      />\r\n    </>\r\n  )\r\n}","import {combine, createEffect, createEvent, createStore} from \"effector\";\r\nimport {Constants} from \"../../const\";\r\n\r\nconst API_URL = Constants.API\r\nconst API_MANAGERS = API_URL + 'api/managers'\r\n\r\nexport const clickMargin = createEvent()\r\nexport const clickTurnover = createEvent()\r\n\r\nexport const fetchManagersFx = createEffect({\r\n  async handler() {\r\n    const res = await fetch(API_MANAGERS)\r\n    return res.json()\r\n  }\r\n})\r\n\r\nexport const filterManagersFx = createEffect({\r\n  async handler(dates) {\r\n    const data = dates\r\n\r\n    const res = await fetch(API_MANAGERS + '/filter', {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      method: 'POST',\r\n      body: JSON.stringify(data)\r\n    })\r\n\r\n    return res.json()\r\n  }\r\n})\r\n\r\nexport const $managers = createStore([])\r\n  .on(fetchManagersFx.doneData, (_, managers) => [...managers])\r\n  .on(filterManagersFx.doneData, (_, managers) => [...managers])\r\n\r\nexport const $marginOrdered = createStore(false)\r\n    .on(clickMargin, (_) => !_)\r\n    .on(clickTurnover, (_) => false)\r\n\r\nexport const $turnoverOrdered = createStore(false)\r\n    .on(clickTurnover, (_) => !_)\r\n    .on(clickMargin, (_) => false)\r\n\r\n\r\nexport const $orderedManagers = combine(\r\n    $managers,\r\n    $marginOrdered,\r\n    $turnoverOrdered,\r\n    (managers, margin, turnover) => [...managers\r\n        .sort((a, b) => {\r\n          if(margin) return b.margin - a.margin\r\n          if(turnover) return b.sum - a.sum\r\n          return 0\r\n        })]\r\n)\r\n\r\n\r\n\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {useStore} from \"effector-react\";\r\nimport {\r\n    $orderedManagers,\r\n    clickMargin,\r\n    clickTurnover,\r\n    fetchManagersFx,\r\n    filterManagersFx\r\n} from \"../../models/manager/manager.store\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport {KeyboardDatePicker, MuiPickersUtilsProvider} from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nexport const ManagerList = () => {\r\n  const classes = useStyles()\r\n\r\n  const [startDate, setStartDate] = useState(null)\r\n  const [endDate, setEndDate] = useState(null)\r\n\r\n  const managers = useStore($orderedManagers)\r\n\r\n  const searchHandler = () => {\r\n    filterManagersFx({startDate, endDate})\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchManagersFx()\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <FormControl className={classes.formControl}>\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n          <KeyboardDatePicker\r\n            disableToolbar\r\n            variant='inline'\r\n            format='dd/MM/yyyy'\r\n            margin='normal'\r\n            label='Дата с'\r\n            value={startDate}\r\n            onChange={event => setStartDate(event)}\r\n            KeyboardButtonProps={{\r\n              'aria-label': 'change date',\r\n            }}\r\n          />\r\n        </MuiPickersUtilsProvider>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n          <KeyboardDatePicker\r\n            disableToolbar\r\n            variant='inline'\r\n            format='dd/MM/yyyy'\r\n            margin='normal'\r\n            label='Дата по'\r\n            value={endDate}\r\n            onChange={event => setEndDate(event)}\r\n            KeyboardButtonProps={{\r\n              'aria-label': 'change date',\r\n            }}\r\n          />\r\n        </MuiPickersUtilsProvider>\r\n      </FormControl>\r\n      <Button\r\n        onClick={searchHandler}\r\n      >\r\n        Поиск\r\n      </Button>\r\n      <TableContainer>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Имя</TableCell>\r\n              <TableCell onClick={() => clickMargin()}>Маржа</TableCell>\r\n              <TableCell onClick={() => clickTurnover()}>Оборот</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {managers.map(row => (\r\n              <TableRow key={row.id}>\r\n                <TableCell>{row.name}</TableCell>\r\n                <TableCell>{row.margin}</TableCell>\r\n                <TableCell>{row.sum}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </>\r\n  )\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));","import {Constants} from \"../../const\";\r\nimport {createEffect, createStore} from \"effector\";\r\n\r\nconst API_URL = Constants.API\r\nconst API_DELETED_SALES = API_URL + 'api/deletedSales'\r\n\r\nexport const fetchDeletedSalesFx = createEffect({\r\n  async handler() {\r\n    const res = await fetch(API_DELETED_SALES)\r\n    return res.json()\r\n  }\r\n})\r\n\r\nexport const $deletedSales = createStore([])\r\n  .on(fetchDeletedSalesFx.doneData, (state, deletedSales) => [...deletedSales])","import React, {useState} from \"react\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport {Box} from \"@material-ui/core\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nexport const ArchiveSaleListItem = props => {\r\n  const {sale} = props\r\n  const [open, setOpen] = useState(false)\r\n\r\n  const detailOpen = () => {\r\n    setOpen(!open)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <TableRow>\r\n        <TableCell>{sale.number}</TableCell>\r\n        <TableCell>{sale.date}</TableCell>\r\n        <TableCell>{sale.sum}</TableCell>\r\n        <TableCell>{sale.margin}</TableCell>\r\n        <TableCell>{sale.procurementCost}</TableCell>\r\n        <TableCell>{sale.shopTitle}</TableCell>\r\n        <TableCell>{sale.saleType}</TableCell>\r\n        <TableCell>{sale.discount}</TableCell>\r\n        <TableCell>{sale.buyer}</TableCell>\r\n        <TableCell>\r\n          <IconButton aria-lavel=\"expand row\" size='small' onClick={detailOpen}>\r\n            {open ? <KeyboardArrowUpIcon/> : <KeyboardArrowDownIcon/>}\r\n          </IconButton>\r\n        </TableCell>\r\n      </TableRow>\r\n      <TableRow>\r\n        <TableCell style={{paddingBottom: 0, paddingTop: 0}} colSpan={10}>\r\n          <Collapse in={open} timeout={'auto'} unmountOnExit>\r\n            <Box margin={1}>\r\n              <Grid container>\r\n                <Grid item xs={3}>\r\n                  {sale.payments.map(payment => (\r\n                    <>\r\n                      <span>Счёт: {payment.account} | </span>\r\n                      <span>Сумма: {payment.sum}</span>\r\n                      <br/>\r\n                    </>\r\n                  ))}\r\n                  <span>\r\n                    Дата удаления: {sale.deletedDate !== null ? sale.deletedDate : \"Не указана\" }\r\n                  </span>\r\n                  <br/>\r\n                </Grid>\r\n                <Grid item xs={9}>\r\n                  {sale.products.map(product => (\r\n                    <>\r\n                      <span>Название: {product.title} | </span>\r\n                      <span>Код: {product.code} | </span>\r\n                      <span>Кол-во: {product.amount} | </span>\r\n                      <span>Цена: {product.price} | </span>\r\n                      <span>Закупочная: {product.procurementCost} | </span>\r\n                      <span>Поставщик: {product.supplierName}</span>\r\n                      <br/>\r\n                    </>\r\n                  ))}\r\n                </Grid>\r\n              </Grid>\r\n            </Box>\r\n          </Collapse>\r\n        </TableCell>\r\n      </TableRow>\r\n    </>\r\n  )\r\n}","import React, {useEffect} from \"react\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport {useStore} from \"effector-react\";\r\nimport {$deletedSales, fetchDeletedSalesFx} from \"../../models/archive-sale/archive-sale.store\";\r\nimport {ArchiveSaleListItem} from \"./archive-sale-list-item\";\r\n\r\nexport const ArchiveSalesList = () => {\r\n\r\n  const sales = useStore($deletedSales)\r\n\r\n  useEffect(() => {\r\n    fetchDeletedSalesFx()\r\n  }, [])\r\n\r\n  return (\r\n    <TableContainer>\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Номер</TableCell>\r\n            <TableCell>Дата</TableCell>\r\n            <TableCell>Сумма</TableCell>\r\n            <TableCell>Маржа</TableCell>\r\n            <TableCell>Себестоимость</TableCell>\r\n            <TableCell>Магазин</TableCell>\r\n            <TableCell>Тип</TableCell>\r\n            <TableCell>Скидка</TableCell>\r\n            <TableCell>Покупатель</TableCell>\r\n            <TableCell></TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {sales\r\n            .map(row => (\r\n              <ArchiveSaleListItem\r\n                key={row.number}\r\n                sale={row}\r\n              />\r\n            ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  )\r\n}","import React from 'react'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Button from '@material-ui/core/Button'\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\n\r\nexport const ProductsList = () => {\r\n  return (\r\n    <>\r\n      <TextField label='Поиск товара' variant='outlined'/>\r\n      <List>\r\n        <ListItem>\r\n          <Button>Product</Button>\r\n        </ListItem>\r\n        <ListItem>\r\n          <Button>Product</Button>\r\n        </ListItem>\r\n        <ListItem>\r\n          <Button>Product</Button>\r\n        </ListItem>\r\n        <ListItem>\r\n          <Button>Product</Button>\r\n        </ListItem>\r\n      </List>\r\n    </>\r\n  )\r\n}","import { Constants } from \"../../../const\";\r\nimport { createEffect, createStore } from \"effector\";\r\nimport { setError } from \"../../../shared/store/error-store\";\r\n\r\nconst API_URL = Constants.API\r\nconst API_PRODUCT_INFO = API_URL + 'не забудь вписать url'\r\n\r\nexport const fetchProductInfoFx = createEffect({\r\n  async handler() {\r\n    //const res = await fetch(API_PRODUCT_INFO);\r\n\r\n    const zaglushka = new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        resolve({\r\n          id: 1,\r\n          title: 'Тайтл',\r\n          code: 'Код',\r\n          price: 150,\r\n          category: 'категория',\r\n          supplies: [{ id: 1, title: 'test', amount: 1, supplierId: 1, supplierTitle: 'Поставщик', shopId: 1, shopTitle: 'Магазин' }],\r\n          understaffed: [{ id: 2, title: 'test', shopId: 1, shopTitle: 'Магазин' }]\r\n        })\r\n      }, 100)\r\n    })\r\n\r\n    return zaglushka\r\n  }\r\n})\r\n\r\nfetchProductInfoFx.finally.watch(data => {\r\n  if(data.error)\r\n    setError(`При загрузке подробной информации о товаре, произошла ошибка: ${data.error}`)\r\n})\r\n\r\nexport const createUnderstaffedProductFx = createEffect(\r\n  {\r\n    async handler(product) {\r\n      const data = product\r\n\r\n      const res = await fetch(API_PRODUCT_INFO, {\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        method: 'POST',\r\n        body: JSON.stringify(data)\r\n      })\r\n\r\n      return res.json()\r\n    }\r\n  }\r\n)\r\n\r\ncreateUnderstaffedProductFx.finally.watch(data => {\r\n  if(data.error)\r\n    setError(`При создании некомплектного товара, произошла ошибка: ${data.error}`)\r\n})\r\n\r\nexport const $currentProduct = createStore({})\r\n  .on(fetchProductInfoFx.doneData, (state, productInfo) => productInfo)\r\n  .on(createUnderstaffedProductFx.doneData, (state, product) => {\r\n    return {\r\n      ...state,\r\n      understaffed: [...state.understaffed, product]\r\n    }\r\n  })","import React, { useEffect, createRef } from 'react'\r\nimport Card from '@material-ui/core/Card'\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport {makeStyles} from '@material-ui/core/styles'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport { $currentProduct, fetchProductInfoFx } from '../models/product-info-store'\r\nimport { useStore } from 'effector-react'\r\nimport { fetchShopsFx } from '../../../store/shop-store'\r\n\r\nexport const ProductInfo = () => {\r\n\r\n  useEffect(() => {\r\n    fetchProductInfoFx()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    fetchShopsFx()\r\n  }, [])\r\n  \r\n\r\n  const product = useStore($currentProduct)\r\n\r\n  const classes = useStyles()\r\n\r\n  return(\r\n    <Card>\r\n      <CardContent>\r\n        <Typography color={'textSecondary'} gutterBottom className={classes.title}>\r\n          <strong>Подробно о товаре: {product.title}</strong>\r\n        </Typography>\r\n        <Divider/>\r\n        <Typography className={classes.title} color={'textSecondary'} gutterBottom>\r\n          <strong>Id: {product.id}</strong>\r\n          <br/>\r\n          <strong>Название: {product.title}</strong>\r\n          <br/>\r\n          <strong>Артикул: {product.code}</strong>\r\n          <br/>\r\n          <strong>Цена: {product.price}</strong>\r\n          <br/>\r\n          <strong>Категория: {product.category}</strong>\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  )\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  title: {\r\n    fontSize: 14\r\n  }\r\n})","import React, { useEffect } from 'react'\r\n\r\n\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { useStore } from 'effector-react';\r\nimport { $currentProduct } from '../models/product-info-store';\r\n\r\nexport const ProductSupplies = () => {\r\n\r\n  const supplies = useStore($currentProduct).supplies || [];\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Название</TableCell>\r\n            <TableCell align=\"right\">Количество</TableCell>\r\n            <TableCell align=\"right\">Поставщик</TableCell>\r\n            <TableCell align=\"right\">Магазин</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {supplies.map((row) => (\r\n            <TableRow key={row.id}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {row.title}\r\n              </TableCell>\r\n              <TableCell align=\"right\">{row.amount}</TableCell>\r\n              <TableCell align=\"right\">{row.supplierTitle}</TableCell>\r\n              <TableCell align=\"right\">{row.shopTitle}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  )\r\n}","import React, { createRef, useEffect, useState } from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { useStore } from 'effector-react';\r\nimport { $currentProduct, createUnderstaffedProductFx } from '../models/product-info-store';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\n\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Select from '@material-ui/core/Select';\r\nimport { fetchShopsFx, shops } from '../../../store/shop-store';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    width: '100%',\r\n  },\r\n}));\r\n\r\nexport const ProductsUnderstaffed = () => {\r\n  const classes = useStyles();\r\n\r\n  const shopsList = useStore(shops);\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const currentProduct = useStore($currentProduct);\r\n\r\n  const [newProductAmount, setNewProductAmount] = useState(0);\r\n  const [newProductShopId, setNewProductShopId] = useState(0);  \r\n\r\n  const createNewProduct = () => {\r\n    const newProduct = {\r\n      id: currentProduct.id,\r\n      shopId: newProductShopId,\r\n      amount: +newProductAmount\r\n    }\r\n\r\n    createUnderstaffedProductFx(newProduct);\r\n\r\n    setNewProductAmount(0);\r\n    setNewProductShopId(0);\r\n\r\n    handleClose();\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        Добавить некомплект\r\n      </Button>\r\n      <Dialog open={open} onClose={handleClose}>\r\n        <DialogTitle id=\"form-dialog-title\">Создание некомплекта</DialogTitle>\r\n        <DialogContent>\r\n          <FormControl className={classes.formControl}>\r\n            <InputLabel id=\"demo-simple-select-label\">Магазин</InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-label\"\r\n              id=\"demo-simple-select\"\r\n              value={newProductShopId}\r\n              onChange={event => setNewProductShopId(event.target.value)}\r\n            >\r\n              {shopsList.map((row) => (\r\n                <MenuItem value={row.id}>{row.title}</MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n          <TextField\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"Количество\"\r\n            type=\"number\"\r\n            value={newProductAmount}\r\n            onChange={event => setNewProductAmount(event.target.value)}\r\n            fullWidth\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Отмена\r\n          </Button>\r\n          <Button onClick={createNewProduct} color=\"primary\">\r\n            Сохранить\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <TableContainer component={Paper}>\r\n        <Table aria-label=\"simple table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Id</TableCell>\r\n              <TableCell align=\"right\">Название</TableCell>\r\n              <TableCell align=\"right\">Магазин</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {currentProduct.understaffed.map((row) => (\r\n              <TableRow key={row.id}>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {row.id}\r\n                </TableCell>\r\n                <TableCell align=\"right\">{row.title}</TableCell>\r\n                <TableCell align=\"right\">{row.shopTitle}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </div>\r\n  )\r\n}","import React from 'react'\r\nimport Tabs from '@material-ui/core/Tabs'\r\nimport Tab from '@material-ui/core/Tab'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport { ProductSupplies } from './product-supplies'\r\nimport { ProductsUnderstaffed } from './products-understaffed'\r\n\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <div>\r\n          {children}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport const ProductTabs = () => {\r\n\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return(\r\n    <Paper>\r\n      <Tabs\r\n        indicatorColor={'primary'}\r\n        textColor={'primary'}\r\n        variant={'fullWidth'}\r\n        onChange={handleChange}\r\n        centered\r\n      >\r\n        <Tab label={'Поставки'}/>\r\n        <Tab label={'Некомплект'}/>\r\n      </Tabs>\r\n      <TabPanel value={value} index={0}>\r\n          <ProductSupplies />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={1}>\r\n          <ProductsUnderstaffed />\r\n      </TabPanel>\r\n    </Paper>\r\n  )\r\n}","import React from 'react'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport {ProductsList} from './products-list.components'\r\nimport {ProductInfo} from './product-info'\r\nimport {ProductTabs} from './product-tabs.component'\r\n\r\nexport const Product = () => {\r\n\r\n  return(\r\n    <Grid container>\r\n      <Grid item xs={10}>\r\n        <ProductInfo/>\r\n        <ProductTabs/>\r\n      </Grid>\r\n      <Grid item xs={2}>\r\n        <ProductsList/>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}","import {createEffect, createStore, createEvent, sample, combine} from \"effector\";\r\nimport { Constants } from \"../../../../const\";\r\nimport { setError } from \"../../../../shared/store/error-store\";\r\n\r\nconst API_URL = Constants.API\r\nconst API_SALE_CREATE = API_URL + 'не забудь вписать url'\r\n\r\nexport const addProductToSale = createEvent()\r\nexport const removeProductFromSale = createEvent()\r\nexport const changeProductPrice = createEvent()\r\nexport const changeProductAmount = createEvent()\r\n\r\nexport const activateCashPayment = createEvent()\r\nexport const deactivateCashPayment = createEvent()\r\nexport const changeCashSum = createEvent()\r\n\r\nexport const activateCashlessPayment = createEvent()\r\nexport const deactivateCashlessPayment = createEvent()\r\nexport const changeCashlessSum = createEvent()\r\nexport const selectMoneyWorkerId = createEvent()\r\n\r\nexport const selectManagerId = createEvent()\r\nexport const changeDiscount = createEvent()\r\nexport const changeDeferred = createEvent()\r\nexport const changeForRussia = createEvent()\r\nexport const selectBuyerId = createEvent()\r\n\r\nexport const addError = createEvent()\r\nexport const removeError = createEvent()\r\n\r\nexport const updateSaleInfo = createEvent();\r\nexport const resetSelectedMoneyWorker = createEvent();\r\nexport const changeSaleCost = createEvent();\r\n\r\nconst notEnoughMoney = 'Не достаточно средств внесено'\r\nconst notSelectedManager = 'Не выбран менеджер'\r\nconst incorrectProductPrice = 'Некорректная стоимость товара'\r\n\r\n\r\nexport const $saleInfo = createStore({\r\n  managerId: 0,\r\n  discount: 0,\r\n  deferred: false,\r\n  forRussia: false,\r\n  buyerId: 0\r\n})\r\n  .on(selectManagerId,\r\n    (state, id) => ({...state, managerId: id}))\r\n  .on(changeDiscount,\r\n    (state, discount) => ({...state, discount: discount}))\r\n  .on(changeDeferred,\r\n    (state, value) => ({...state, deferred: value}))\r\n  .on(changeForRussia,\r\n    (state, value) => ({...state, forRussia: value}))\r\n  .on(selectBuyerId,\r\n    (state, value) => ({...state, buyerId: value}))\r\n\r\nexport const $saleProducts = createStore([])\r\n  .on(addProductToSale, (state, product) => {\r\n    const index = state.findIndex(x => x.id === product.id)\r\n    if(index !== (-1)) {\r\n      const curProduct = state.find(x => x.id === product.id)\r\n\r\n      return [\r\n        ...state.slice(0, index),\r\n        {...curProduct, amount: curProduct.amount + 1},\r\n        ...state.slice(index + 1)\r\n      ]\r\n    }\r\n    else return [...state, {...product, amount: 1}]\r\n  })\r\n  .on(removeProductFromSale,\r\n    (state, product) => state.filter(x => x.id !== product.id))\r\n  .on(changeProductPrice,(state, product) => {\r\n    const index = state.findIndex(x => x.id === product.id)\r\n    const curProduct = state.find(x => x.id === product.id)\r\n\r\n    return [\r\n      ...state.slice(0, index),\r\n      {...curProduct, price: product.price},\r\n      ...state.slice(index + 1)\r\n    ]\r\n  })\r\n  .on(changeProductAmount, (state, product) => {\r\n    const index = state.findIndex(x => x.id === product.id)\r\n    const curProduct = state.find(x => x.id === product.id)\r\n\r\n    return [\r\n      ...state.slice(0, index),\r\n      {...curProduct, amount: product.amount},\r\n      ...state.slice(index + 1)\r\n    ]\r\n  })\r\n\r\nexport const $cost = sample({\r\n  source: $saleProducts,\r\n  fn: (products) => (\r\n    products.length > 0\r\n      ? products.map(x => x.price * x.amount).reduce((acc, value) => (acc + value))\r\n      : 0\r\n  )\r\n})\r\n\r\nexport const $cashPayment = createStore({\r\n  active: false,\r\n  sum: 0\r\n})\r\n  .on(activateCashPayment,\r\n    (state, _) => ({...state, active: true}))\r\n  .on(deactivateCashPayment,\r\n    (state, _) => ({...state, active: false}))\r\n  .on(changeCashSum,\r\n    (state, sum) => ({...state, sum: sum}))\r\n\r\nexport const $cashlessPayment = createStore({\r\n  active: false,\r\n  sum: 0,\r\n  moneyWorkerId: 0\r\n})\r\n  .on(activateCashlessPayment,\r\n    (state, _) => ({...state, active: true}))\r\n  .on(deactivateCashlessPayment,\r\n    (state, _) => ({...state, active: false}))\r\n  .on(changeCashlessSum,\r\n    (state, sum) => ({...state, sum: sum}))\r\n  .on(selectMoneyWorkerId,\r\n    (state, id) => ({...state, moneyWorkerId: id}))\r\n\r\nexport const $erIncorrectProductPrice = sample({\r\n  source: $saleProducts,\r\n  fn: (products) => (products.length > 0 && products.map(x => +(x.price)).some(x => x <= 0))\r\n})\r\n\r\nexport const $errors = combine(\r\n  $saleProducts,\r\n  $cashPayment,\r\n  $cashlessPayment,\r\n  $saleInfo,\r\n  $cost,\r\n  (saleProducts, cash, cashless, sale, cost) => {\r\n    let result = []\r\n\r\n    if(saleProducts.length > 0 && saleProducts.map(x => +(x.price)).some(x => x <= 0))\r\n      result.push(incorrectProductPrice)\r\n\r\n    if(sale.managerId === 0)\r\n      result.push(notSelectedManager)\r\n\r\n    if(((cash.active ? +cash.sum : 0) + (cashless.active ? +cashless.sum : 0)) < (cost - sale.discount))\r\n      result.push(notEnoughMoney)\r\n\r\n    return result\r\n  }\r\n)\r\n\r\n$saleInfo\r\n  .on(addProductToSale,\r\n    (state, product) => ({...state, cost: state.cost + product.price}))\r\n  .on(removeProductFromSale,\r\n    (state, product) => ({...state, cost: state.cost - product.price}))\r\n  .on(updateSaleInfo, (state, event) => {\r\n    return {\r\n      ...state,\r\n      [event.name]: event.value\r\n    }\r\n  })\r\n  .on(resetSelectedMoneyWorker, (state) => {\r\n    return {\r\n      ...state,\r\n      moneyWorkerId: 0\r\n    }\r\n  })\r\n\r\n\r\nexport const fxCreateSale = createEffect(\r\n  {\r\n    async handler(sale) {\r\n      const data = sale\r\n\r\n      const res = await fetch(API_SALE_CREATE, {\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        method: 'POST',\r\n        body: JSON.stringify(data)\r\n      })\r\n\r\n      return res.json()\r\n    }\r\n  }\r\n)\r\n\r\nfxCreateSale.finally.watch(data => {\r\n  if(data.error)\r\n    setError(`При создании продажи, произошла ошибка: ${data.error}`)\r\n})\r\n","import {combine, createEffect, createEvent, createStore} from \"effector\";\r\nimport {Constants} from \"../../../../const\";\r\n\r\nexport const changeFilterProductTitle = createEvent()\r\nexport const selectProductCategory = createEvent()\r\n\r\nexport const fxFetchAvailableProducts = createEffect()\r\n\r\nexport const $availableProducts = createStore([])\r\n  .on(fxFetchAvailableProducts.doneData,\r\n    (_, data) => [...data.map(x => ({...x, availableAmount: x.stockAmount, id: x.productId}))])\r\n/*combine(\r\n  $productsInStock,\r\n  (products) => products\r\n    .map(x => ({...x, availableAmount: x.stockAmount - x.incompleteAmount - x.bookingAmount}))\r\n    .filter(x => x.availableAmount > 0)\r\n)*/\r\n\r\nexport const $filterProductTitle = createStore('')\r\n  .on(changeFilterProductTitle, (_, value) => value)\r\n\r\nexport const $filterProductCategory = createStore(0)\r\n  .on(selectProductCategory, (_, value) => value)\r\n\r\nexport const $filteredProducts = combine(\r\n  $availableProducts,\r\n  $filterProductTitle,\r\n  $filterProductCategory,\r\n  (products, title, category) => products\r\n    .filter(x => title !== ''\r\n      ? x.title.toLowerCase().includes(title.toLowerCase())\r\n      : true)\r\n    .filter(x => +(category) !== 0\r\n      ? x.categoryId === +(category)\r\n      : true)\r\n)\r\n\r\nconst API_AVAILABLE_PRODUCTS = Constants.API + 'api/products/availableForSaleOld'\r\n\r\nfxFetchAvailableProducts.use(async () => {\r\n  const res = await fetch(API_AVAILABLE_PRODUCTS)\r\n  return res.json()\r\n})","import React, {useEffect} from 'react'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { addProductToSale } from \"../model/sale-create\";\r\nimport {makeStyles} from '@material-ui/core';\r\nimport { useStore } from 'effector-react';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { FixedSizeList } from 'react-window';\r\nimport {\r\n  $filteredProducts,\r\n  $filterProductCategory,\r\n  $filterProductTitle,\r\n  changeFilterProductTitle, fxFetchAvailableProducts, selectProductCategory\r\n} from \"../model/store\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport {$categoriesFilter, fetchCategoriesFx} from \"../../../../models/filter/filter.store\";\r\n\r\nexport const SelectProducts = () => {\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    fxFetchAvailableProducts()\r\n    fetchCategoriesFx()\r\n  }, [])\r\n\r\n  const products = useStore($filteredProducts)\r\n  const categories = useStore($categoriesFilter)\r\n  const filterTitle = useStore($filterProductTitle)\r\n  const filterCategory = useStore($filterProductCategory)\r\n\r\n  const handleMouseOverSelectProducts = event => {\r\n    event.target.style.marginRight = 0;\r\n  }\r\n\r\n  const handleMouseOutSelectProducts = event => {\r\n    var e = event.toElement || event.relatedTarget;\r\n    if (e.parentNode == this || e == this) {\r\n      return;\r\n    }\r\n    else {\r\n      event.target.style.marginRight = '-460px'\r\n    }\r\n  }\r\n\r\n\r\n  function renderRow(props) {\r\n    const { index, style } = props;\r\n\r\n    const product = products[index];\r\n\r\n    const addProduct = (e) => {\r\n      e.preventDefault();\r\n      addProductToSale(product);\r\n    };\r\n\r\n    return (\r\n      <ListItem button key={index} style={style} onClick={addProduct}>\r\n        <ListItemText primary={`${product.availableAmount} / ${product.title}`} />\r\n      </ListItem>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={classes.selectProducts} onMouseEnter={(event) => handleMouseOverSelectProducts(event)} onMouseLeave={event => handleMouseOutSelectProducts(event)}>\r\n      <div className={classes.sectionTitle}>Товары</div>\r\n      <Grid container spacing={5}>\r\n        <Grid item xs={5}>\r\n          <TextField\r\n            id=\"standard-required\"\r\n            label=\"Поиск товара\"\r\n            value={filterTitle}\r\n            onChange={e => changeFilterProductTitle(e.target.value)}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={5}>\r\n          <FormControl className={classes.formControl}>\r\n            <span>Категория</span>\r\n            <select\r\n              value={filterCategory}\r\n              onChange={e => selectProductCategory(e.target.value)}\r\n            >\r\n              <option value={0}>Все категории</option>\r\n              {categories.map(category => (\r\n                <option value={category.id}>{category.title}</option>\r\n              ))}\r\n            </select>\r\n          </FormControl>\r\n        </Grid>\r\n      </Grid>\r\n      <FixedSizeList className={classes.productList} height={780} width={480} itemSize={46} itemCount={products.length}>\r\n        {renderRow}\r\n      </FixedSizeList>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  formControl: {\r\n    width: '100%'\r\n  },\r\n  selectProducts: {\r\n    position: \"fixed\",\r\n    right: 0,\r\n    bottom: 0,\r\n    top: 0,\r\n    paddingLeft: '3%',\r\n    width: '520px',\r\n    boxSizing: 'border-box',\r\n    zIndex: 99999,\r\n    backgroundColor: '#fff',\r\n    boxShadow: '0px 6px 16px 5px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 1px 3px 0px rgba(0,0,0,0.12)',\r\n    marginRight: '-460px',\r\n    transition: '0.3s',\r\n  },\r\n\r\n  sectionTitle: {\r\n    fontWeight: 'bold',\r\n    transform: 'rotate(-90deg)',\r\n    display: 'block',\r\n    position: \"absolute\",\r\n    top: '50%',\r\n    left: '-5px',\r\n    fontSize: '18px',\r\n  },\r\n  productList: {\r\n    marginTop: 20\r\n  }\r\n\r\n}))\r\n","import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {changeProductAmount, changeProductPrice, removeProductFromSale} from \"../model/sale-create\";\r\n\r\nexport const SelectedProductItem = (props) => {\r\n  const classes = useStyles()\r\n\r\n  const {product} = props\r\n\r\n  const removeProductHandler = () => {\r\n    removeProductFromSale(product)\r\n  }\r\n\r\n  const changePrice = e => {\r\n    changeProductPrice({id: product.id, price: e.target.value})\r\n  }\r\n\r\n  const changeAmount = e => {\r\n    changeProductAmount({id: product.id, amount: e.target.value})\r\n  }\r\n\r\n  return (\r\n    <Grid container spacing={1} className={classes.productItem}>\r\n      <Grid item xs={2}>\r\n        <b>{product.title}</b>\r\n      </Grid>\r\n      <Grid item xs={2}>\r\n        <TextField\r\n          required\r\n          id=\"standard-required\"\r\n          label=\"Количество\"\r\n          value={product.amount}\r\n          onChange={changeAmount}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={3}>\r\n        <TextField\r\n          id=\"standard-required\"\r\n          label=\"Цена за шт.\"\r\n          value={product.price}\r\n          onChange={changePrice}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={2}>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          startIcon={<DeleteIcon />}\r\n          onClick={removeProductHandler}\r\n        >\r\n          Удалить\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  productItem: {\r\n    padding: theme.spacing(1),\r\n    display: \"flex\",\r\n    border: '1px solid #eee',\r\n    alignItems: 'center',\r\n    fontSize: 18\r\n  },\r\n}))","import React from \"react\";\r\nimport {useStore} from \"effector-react\";\r\nimport {$saleProducts} from \"../model/sale-create\";\r\nimport {SelectedProductItem} from \"./selected-product-item\";\r\n\r\nexport const SelectedProductsList = () => {\r\n\r\n  const saleProducts = useStore($saleProducts)\r\n\r\n  return (\r\n    <>\r\n      {saleProducts.map(product => (\r\n        <SelectedProductItem key={product.id} product={product}/>\r\n      ))}\r\n    </>\r\n  )\r\n}","import React from \"react\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {useStore} from \"effector-react\";\r\nimport {$cashPayment, activateCashPayment, changeCashSum, deactivateCashPayment} from \"../model/sale-create\";\r\n\r\nexport const CashPayment = () => {\r\n  const classes = useStyles()\r\n\r\n  const state = useStore($cashPayment)\r\n\r\n  const changeActive = e => {\r\n    if(e.target.checked) activateCashPayment()\r\n    else deactivateCashPayment()\r\n  }\r\n\r\n  const changeSum = e => {\r\n    changeCashSum(e.target.value)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <FormControlLabel\r\n        className={classes.marginDefault}\r\n        control={<Checkbox name=\"cash\" />}\r\n        onChange={changeActive}\r\n        label=\"Наличный платеж\"\r\n        labelPlacement=\"start\"\r\n      />\r\n      {state.active && (\r\n        <Grid container spacing={1}>\r\n          <Grid item xs={4}>\r\n            <TextField\r\n              className={classes.formControl}\r\n              required\r\n              id=\"standard-required\"\r\n              label=\"Сумма\"\r\n              name=\"cashSum\"\r\n              value={state.sum}\r\n              onChange={changeSum} />\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  marginDefault: {\r\n    margin: theme.spacing(1),\r\n    marginLeft: 0,\r\n    display: 'block'\r\n  },\r\n}))","import { createEffect, createStore } from \"effector\"\r\nimport { Constants } from \"../../../../const\"\r\nimport { setError } from \"../../../../shared/store/error-store\"\r\n\r\nconst API_URL = Constants.API\r\nconst API_FETCH_MONEYWORKERS = API_URL + 'не забудь вписать url'\r\n\r\nexport const fetchMoneyWorkersFx = createEffect(\r\n  {\r\n    async handler(value) {\r\n      //const res = await fetch(`${API_FETCH_MONEYWORKERS}/${value}`)\r\n\r\n      const zaglushka = new Promise((resolve, reject) => {\r\n        setTimeout(() => {\r\n          resolve([{\r\n              id: 1,\r\n              title: 'Первый счёт',\r\n            },\r\n            {\r\n              id: 2,\r\n              title: 'Второй счёт',\r\n            },\r\n            {\r\n              id: 3,\r\n              title: 'Третий счёт',\r\n            },\r\n          ])\r\n        }, 100)\r\n      })\r\n\r\n      return zaglushka\r\n    }\r\n  }\r\n)\r\n\r\nfetchMoneyWorkersFx.finally.watch(data => {\r\n  if (data.error)\r\n    setError(`При загрузке безналичных счетов, произошла ошибка: ${data.error}`)\r\n})\r\n\r\nexport const $moneyWorkers = createStore([]);\r\n\r\n\r\n$moneyWorkers.on(fetchMoneyWorkersFx.doneData, (state, moneyWorkers) => [...moneyWorkers]);","import React, {useEffect} from \"react\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {useStore} from \"effector-react\";\r\nimport {\r\n  $cashlessPayment,\r\n  activateCashlessPayment, changeCashlessSum,\r\n  deactivateCashlessPayment, selectMoneyWorkerId,\r\n} from \"../model/sale-create\";\r\nimport {$moneyWorkers, fetchMoneyWorkersFx} from \"../model/money-workers-store\";\r\n\r\nexport const CashlessPayment = () => {\r\n  const classes = useStyles()\r\n\r\n  const state = useStore($cashlessPayment)\r\n  const moneyWorkers = useStore($moneyWorkers)\r\n\r\n  const changeActive = e => {\r\n    if(e.target.checked) activateCashlessPayment()\r\n    else deactivateCashlessPayment()\r\n  }\r\n\r\n  const selectMoneyWorker = e => {\r\n    selectMoneyWorkerId(e.target.value)\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchMoneyWorkersFx()\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <FormControlLabel\r\n        className={classes.marginDefault}\r\n        control={<Checkbox name=\"cashless\" />}\r\n        onChange={changeActive}\r\n        label=\"Безналичный платеж\"\r\n        labelPlacement=\"start\"\r\n      />\r\n      {state.active && (\r\n        <Grid container spacing={1}>\r\n          <Grid item xs={6}>\r\n            <FormControl className={classes.formControl}>\r\n              <InputLabel id=\"demo-simple-select-label\">Тип счета</InputLabel>\r\n              <Select\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"demo-simple-select\"\r\n                defaultValue={0}\r\n              >\r\n                <MenuItem value={1}>Держатель карты</MenuItem>\r\n                <MenuItem value={2}>Рассчетный счет</MenuItem>\r\n                <MenuItem value={3}>Магазин</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <FormControl className={classes.formControl}>\r\n              <InputLabel id=\"demo-simple-select-label\">Счет</InputLabel>\r\n              <Select\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"demo-simple-select\"\r\n                name=\"moneyWorkerId\"\r\n                onChange={selectMoneyWorker}\r\n                value={state.moneyWorkerId}\r\n              >\r\n                {moneyWorkers.map((moneyWorker) => (\r\n                  <MenuItem key={moneyWorker.id} value={moneyWorker.id}>{moneyWorker.title}</MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              className={classes.formControl}\r\n              required\r\n              id=\"standard-required\"\r\n              label=\"Сумма\"\r\n              name=\"cashlessSum\"\r\n              value={state.sum}\r\n              onChange={e => changeCashlessSum(e.target.value)} />\r\n          </Grid>\r\n        </Grid>)}\r\n    </>\r\n  )\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    width: '100%'\r\n  },\r\n  marginDefault: {\r\n    margin: theme.spacing(1),\r\n    marginLeft: 0,\r\n    display: 'block'\r\n  },\r\n}))","import React from \"react\";\r\nimport {CashPayment} from \"./cash-payment\";\r\nimport {CashlessPayment} from \"./cashless-payment\";\r\n\r\nexport const PaymentMethods = () => {\r\n  return (\r\n    <>\r\n      <h3>Информация по платежам</h3>\r\n      <CashPayment/>\r\n      <CashlessPayment/>\r\n    </>\r\n  )\r\n}","import React, {useEffect} from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {useStore} from \"effector-react\";\r\nimport {$managers, fetchManagersFx} from \"../../../../models/manager/manager.store\";\r\nimport {\r\n  $cost,\r\n  $saleInfo,\r\n  changeDeferred,\r\n  changeDiscount,\r\n  changeForRussia, selectBuyerId,\r\n  selectManagerId\r\n} from \"../model/sale-create\";\r\n\r\nexport const SaleInfo = () => {\r\n  const classes = useStyles()\r\n\r\n  const managers = useStore($managers)\r\n  const state = useStore($saleInfo)\r\n  const cost = useStore($cost)\r\n\r\n  useEffect(() => {\r\n    fetchManagersFx()\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <Grid container spacing={1}>\r\n        <Grid item xs={12}>\r\n          <FormControl className={classes.formControl}>\r\n            <InputLabel id=\"demo-simple-select-label\">Менеджер</InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-label\"\r\n              id=\"demo-simple-select\"\r\n              name=\"managerId\"\r\n              value={state.managerId}\r\n              onChange={e => selectManagerId(e.target.value)}\r\n            >\r\n              {managers.map(manager => (\r\n                <MenuItem key={manager.id} value={manager.id}>{manager.name}</MenuItem>\r\n              ))}\r\n              <MenuItem value={20}>Менеджер 2</MenuItem>\r\n              <MenuItem value={30}>Менеджер 3</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n          <FormControl className={classes.formControl}>\r\n            <InputLabel id='label-select-buyer'>Покупатель</InputLabel>\r\n            <Select\r\n              labelId={'label-select-buyer'}\r\n              id={'select-buyer'}\r\n              name={'buyerId'}\r\n              value={state.buyerId}\r\n              onChange={e => selectBuyerId(e.target.value)}\r\n            >\r\n              <MenuItem key={0} value={0}>Обычный покупатель</MenuItem>\r\n              <MenuItem key={1} value={1}>Необычный покупатель 1</MenuItem>\r\n              <MenuItem key={2} value={2}>Необычный покупатель 2</MenuItem>\r\n              <MenuItem key={3} value={3}>Необычный покупатель 3</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <TextField\r\n            className={classes.formControl}\r\n            name=\"discount\"\r\n            value={state.discount}\r\n            required\r\n            id=\"standard-required\"\r\n            label=\"Скидка\"\r\n            onChange={e => changeDiscount(e.target.value)}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <TextField\r\n            required\r\n            InputProps={{readOnly: true}}\r\n            className={classes.formControl}\r\n            id=\"standard-required\"\r\n            label=\"Стоимость\"\r\n            name=\"cost\"\r\n            value={cost}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <FormControlLabel\r\n            control={<Checkbox name=\"deferred\" />}\r\n            label=\"Отложенная\"\r\n            value={state.deferred}\r\n            onChange={e => changeDeferred(e.target.value)}\r\n            labelPlacement=\"start\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <FormControlLabel\r\n            control={<Checkbox />}\r\n            label=\"По России\"\r\n            name=\"forRussia\"\r\n            value={state.forRussia}\r\n            onChange={e => changeForRussia(e.target.value)}\r\n            labelPlacement=\"start\"\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  )\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    width: '100%'\r\n  },\r\n}))","import React from \"react\";\r\nimport {useStore} from \"effector-react\";\r\nimport {$errors} from \"../model/sale-create\";\r\n\r\nexport const Errors = () => {\r\n\r\n  const errors = useStore($errors)\r\n\r\n  return (\r\n    <>\r\n      {errors.length > 0 && <span style={{color: \"red\"}}>Ошибки:</span>}\r\n      {errors.map(error => (\r\n        <p>{error}</p>\r\n      ))}\r\n    </>\r\n  )\r\n}","import React, { useEffect } from 'react'\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Button from '@material-ui/core/Button';\r\nimport { useStore } from 'effector-react';\r\nimport {$saleInfo, updateSaleInfo, fxCreateSale, $errors} from '../model/sale-create';\r\nimport { $managers, fetchManagersFx } from '../../../../models/manager/manager.store';\r\nimport { SelectProducts } from './select-products';\r\nimport {SelectedProductsList} from \"./selected-products-list\";\r\nimport {PaymentMethods} from \"./payment-methods\";\r\nimport {SaleInfo} from \"./sale-info\";\r\nimport {Errors} from \"./errors\";\r\n\r\n\r\nexport const SaleCreate = () => {\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    fetchManagersFx()\r\n  }, [])\r\n\r\n  const saleCreateForm = useStore($saleInfo);\r\n  const errors = useStore($errors)\r\n\r\n  const handleSaleFormChange = (event) => {\r\n    updateSaleInfo(event);\r\n  }\r\n\r\n  const handleCreateSale = () => {\r\n    fxCreateSale(saleCreateForm);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Paper className={classes.root}>\r\n        <div >\r\n          <h2>Новая продажа</h2>\r\n        </div>\r\n        <hr />\r\n        <Errors/>\r\n        <Grid container spacing={4}>\r\n          <Grid item xs={5}>\r\n            <h3>Основная информация по продаже</h3>\r\n            <SaleInfo/>\r\n            <PaymentMethods/>\r\n          </Grid>\r\n          <Grid item xs={7}>\r\n            <h3>Выбранные товары</h3>\r\n            <Grid container spacing={1}>\r\n              <SelectedProductsList/>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Button\r\n          className={classes.marginDefault}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={() => handleCreateSale()}\r\n          disabled={errors.length > 0}\r\n        >\r\n          Создать\r\n        </Button>\r\n      </Paper>\r\n      <SelectProducts />\r\n    </>\r\n  )\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    width: '100%'\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n  marginDefault: {\r\n    margin: theme.spacing(1),\r\n    marginLeft: 0,\r\n    display: 'block'\r\n  },\r\n  productItem: {\r\n    padding: theme.spacing(1),\r\n    display: \"flex\",\r\n    border: '1px solid #eee',\r\n    alignItems: 'center',\r\n    fontSize: 18\r\n  },\r\n}));","import {createContext} from 'react'\r\n\r\n\r\nexport const AuthContext = createContext({\r\n  userId: null,\r\n  userRole: '',\r\n  isAuth: false\r\n})","import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Menu } from \"../menu/menu\";\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\nimport { useStore } from \"effector-react\";\r\nimport { $errorStore, clearError } from \"../../shared/store/error-store\";\r\nimport clsx from 'clsx';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { Link } from \"react-router-dom\";\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nexport const mainListItems = (\r\n  <div>\r\n    <ListItem button component={Link} to=\"/admin/import\">\r\n      <ListItemText primary=\"Импорт\" />\r\n    </ListItem>\r\n    <ListItem button component={Link} to=\"/admin/products\">\r\n      <ListItemText primary=\"Все товары\" />\r\n    </ListItem>\r\n    <ListItem button component={Link} to=\"/admin/supplyProductsList\">\r\n      <ListItemText primary=\"Список поставок\" />\r\n    </ListItem>\r\n    <ListItem button component={Link} to=\"/admin/managers\">\r\n      <ListItemText primary=\"Менеджеры\" />\r\n    </ListItem>\r\n    <ListItem button component={Link} to=\"/admin/archiveSales\">\r\n      <ListItemText primary=\"Архивные продажи\" />\r\n    </ListItem>\r\n  \r\n  </div>\r\n);\r\n\r\nexport const secondListItems = (\r\n  <div>\r\n      <ListItem button component={Link} to=\"/manager/saleCreate\">\r\n        <ListItemText primary=\"Продажа\" />\r\n      </ListItem>\r\n      <button><a href={'/'}>Старый интерфейс</a></button>\r\n  </div>\r\n);\r\n\r\n\r\n\r\nexport const AdminLayout = props => {\r\n  const classes = useStyles();\r\n  const errors = useStore($errorStore);\r\n\r\n  const [openSidebar, setOpenSidebar] = React.useState(true);\r\n  const handleDrawerOpen = () => {\r\n    setOpenSidebar(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpenSidebar(false);\r\n  };\r\n\r\n  const open = errors.length ? true : false;\r\n\r\n  const handleClose = () => {\r\n    clearError();\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Dialog open={open} onClose={handleClose}>\r\n        <DialogTitle id=\"form-dialog-title\">Ошибки</DialogTitle>\r\n        <DialogContent>\r\n          <ol>\r\n            {errors.map(error => (\r\n              <li>{error}</li>\r\n            ))}\r\n          </ol>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Ок\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, openSidebar && classes.appBarShift)}>\r\n        <Toolbar className={classes.toolbar}>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            className={clsx(classes.menuButton, openSidebar && classes.menuButtonHidden)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n            BVD\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: clsx(classes.drawerPaper, !openSidebar && classes.drawerPaperClose),\r\n        }}\r\n        open={openSidebar}\r\n      >\r\n        <div className={classes.toolbarIcon}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>{mainListItems}</List>\r\n        <Divider />\r\n        <List>{secondListItems}</List>\r\n\r\n      </Drawer>\r\n\r\n\r\n      <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n        <Container maxWidth=\"false\" className={classes.container}>\r\n              {props.page}   \r\n        </Container>\r\n      </main>\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, \r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: 0,\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: 0,\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n}));","import React, {useCallback, useState} from 'react';\nimport {BrowserRouter} from 'react-router-dom'\nimport {useRoutes} from \"./routes\";\nimport {AuthContext} from \"./contexts/auth.context\";\nimport {useCookies} from \"react-cookie\";\nimport {AdminLayout} from \"./components/layouts/admin.layout\";\n\nfunction App() {\n  const routes = useRoutes()\n  const [cookie] = useCookies()\n\n  const userId = cookie.userId\n  const userRole = 'Administrator'//cookie.userRole\n  const isAuth = !!userId\n\n  if(userRole === 'Administrator')\n    return (\n      <AuthContext.Provider value={{\n        userId, userRole, isAuth\n      }}>\n        <BrowserRouter>\n          <AdminLayout page={routes} />\n        </BrowserRouter>\n      </AuthContext.Provider>\n    )\n\n  if(userRole === 'Manager')\n    return (\n      <h1>Manager</h1>\n    )\n\n  return (\n    <h1>Нет авторизации</h1>\n  )\n\n}\n\nexport default App;\n","import React from \"react\";\r\nimport {Switch, Route, Redirect} from 'react-router-dom'\r\nimport {ImportPage} from \"./pages/admin/import.page\";\r\nimport {ProductsPage} from \"./pages/admin/products.page\";\r\nimport {ProductsHistory} from \"./pages/admin/products-history.page\";\r\nimport {SupplyProductForm} from \"./components/supply-product/form/supply-product-form\";\r\nimport {ShopsList} from \"./components/shop/shops-list\";\r\nimport {SuppliersList} from \"./components/supplier/suppliers-list\";\r\nimport { CategoriesList } from \"./components/categories/categories-list\";\r\nimport {SupplyProductsList} from \"./components/supply-product/list/supply-products-list\";\r\nimport {ManagerList} from \"./components/manager/manager-list\";\r\nimport {ArchiveSalesList} from \"./components/archive-sale/archive-sales-list\";\r\nimport {Product} from './features/product/components/product.page'\r\nimport { SaleCreate } from \"./features/sale/sale-create/components/sale-create\";\r\n\r\nexport const useRoutes = () => {\r\n\r\n  return (\r\n    <Switch>\r\n      <Route path='/admin/product' exact>\r\n        <Product/>\r\n      </Route>\r\n      <Route path='/admin/import' exact>\r\n        <ImportPage/>\r\n      </Route>\r\n      <Route path='/admin/supply' exact>\r\n        <SupplyProductForm/>\r\n      </Route>\r\n      <Route path='/admin/products' exact>\r\n        <ProductsPage/>\r\n      </Route>\r\n      <Route path='/admin/productsHistory' exact>\r\n        <ProductsHistory/>\r\n      </Route>\r\n      <Route path='/admin/managers' exact>\r\n        <ManagerList/>\r\n      </Route>\r\n      <Route path='/admin/shops' exact>\r\n        <ShopsList/>\r\n      </Route>\r\n      <Route path='/admin/suppliers' exact>\r\n        <SuppliersList/>\r\n      </Route>\r\n      <Route path='/admin/categories' exact>\r\n        <CategoriesList/>\r\n      </Route>\r\n      <Route path='/admin/supplyProductsList' exact>\r\n        <SupplyProductsList/>\r\n      </Route>\r\n      <Route path='/admin/archiveSales' exact>\r\n        <ArchiveSalesList/>\r\n      </Route>\r\n      <Route path='/manager/saleCreate' exact>\r\n        <SaleCreate/>\r\n      </Route>\r\n      <Redirect to='/admin/product'/>\r\n    </Switch>\r\n  )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}