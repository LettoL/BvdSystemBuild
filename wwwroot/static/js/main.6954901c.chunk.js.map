{"version":3,"sources":["hooks/http.hook.js","const.js","components/import-form/product-item.js","components/import-form/form.js","pages/admin/import.page.js","models/product-table/product.store.js","models/filter/filter.store.js","components/admin-products/product-table-filters.js","components/admin-products/products-table.js","components/admin-products/products-table-paginator.js","components/admin-products/products.js","pages/admin/products.page.js","pages/admin/products-history.page.js","components/supply-product/form/supply-product-item.js","components/supply-product/form/supply-product-form.js","store/shop-store.js","components/shop/shop-create.js","components/shop/shops-list.js","store/supplier-store.js","components/supplier/supplier-create.js","components/supplier/suppliers-list.js","store/category-store.js","components/categories/category-create.js","components/categories/categories-list.js","store/supply-product-store.js","components/supply-product/list/supply-products-list.js","models/manager/manager.store.js","components/manager/manager-list.js","models/archive-sale/archive-sale.store.js","components/archive-sale/archive-sale-list-item.js","components/archive-sale/archive-sales-list.js","features/product/components/products-list.components.js","features/product/components/product-info.js","features/product/components/product-tabs.component.js","features/product/components/product.page.js","contexts/auth.context.js","components/menu/menu.js","components/layouts/admin.layout.js","App.js","routes.js","index.js"],"names":["useHttp","useState","loading","setLoading","error","setError","request","useCallback","url","a","method","body","headers","JSON","stringify","fetch","response","json","data","ok","Error","errors","message","clearError","Constants","ProductItem","props","classes","useStyles","product","editProduct","changeHandler","event","newProduct","target","name","value","Grid","container","ListItem","key","number","item","xs","Typography","variant","TextField","title","label","size","onChange","className","maxWidth","code","amount","price","Divider","component","makeStyles","theme","width","padding","Form","shops","suppliers","categories","saveForm","success","productsText","shop","supplier","supplyType","category","form","setForm","products","setProducts","disabled","setDisabled","changeFormHandler","productIndex","findIndex","x","slice","FormControl","formControl","InputLabel","id","Select","labelId","MenuItem","map","multiline","rows","fullWidth","Button","color","onClick","length","split","replace","sum","productsForSave","CircularProgress","List","margin","spacing","minWidth","API","ImportPage","setShops","setCategories","setSuppliers","saveSuccess","setSaveSuccess","getShops","getCategories","getSuppliers","useEffect","API_PRODUCTS","setShopFilter","createEvent","setCategoryFilter","setTitleFilter","setMinAmountFilter","fetchProductsFx","createEffect","handler","res","$products","createStore","on","doneData","state","$filterShopId","_","shopId","$filterCategoryId","categoryId","$filterTitle","$filterMinAmount","$filteredProducts","combine","minAmount","filter","toLowerCase","includes","API_SHOPS","API_CATEGORIES","API_SUPPLIERS","fetchShopsFx","fetchCategoriesFx","fetchSupplierFx","$shopsFilter","$categoriesFilter","ProductTableFilters","useStore","ProductsTable","page","rowsPerPage","handleOpenDialog","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","row","bind","ProductsTablePaginator","handleChangePage","handleChangeRowsPerPage","TablePagination","rowsPerPageOptions","count","onChangePage","onChangeRowsPerPage","Products","setPage","setRowsPerPage","openDialog","setOpenDialog","setDetailProduct","separator","newPage","Dialog","open","onClose","DialogTitle","DialogContent","autoFocus","type","ProductsPage","ProductsHistory","setShop","startDate","setStartDate","endDate","setEndDate","getProducts","date","Date","dateTime","defaultValue","textField","InputLabelProps","shrink","utils","DateFnsUtils","disableToolbar","format","KeyboardButtonProps","toLocaleDateString","productTitle","supplierName","shopTitle","selectEmpty","marginTop","SupplyProductItem","index","supplyProduct","productId","supplierId","procurementCost","changeProduct","SupplyProductForm","supplyProducts","setSupplyProducts","changeItemState","console","log","saveShopFx","ShopCreate","setTitle","ShopsList","shopsData","fetchSuppliersFx","createSupplierFx","phone","email","SupplierCreate","setName","setPhone","setEmail","SuppliersList","suppliersData","createCategoryFx","CategoryCreate","CategoriesList","categoriesData","API_SUPPLYPRODUCTS","fetchSupplyProductsFx","SupplyProductsList","minProcurementCost","setMinProcurementCost","supplyProductId","shopAmount","suppliedAmount","API_MANAGERS","clickMargin","clickTurnover","fetchManagersFx","filterManagersFx","dates","$managers","managers","$marginOrdered","$turnoverOrdered","$orderedManagers","turnover","sort","b","ManagerList","API_DELETED_SALES","fetchDeletedSalesFx","$deletedSales","deletedSales","ArchiveSaleListItem","sale","setOpen","saleType","discount","buyer","IconButton","aria-lavel","style","paddingBottom","paddingTop","colSpan","Collapse","in","timeout","unmountOnExit","Box","payments","payment","account","ArchiveSalesList","sales","ProductsList","ProductInfo","Card","CardContent","gutterBottom","fontSize","ProductTabs","Paper","Tabs","indicatorColor","textColor","centered","Tab","Product","AuthContext","createContext","userId","userRole","isAuth","Menu","href","button","to","ListItemText","primary","root","flexGrow","AdminLayout","App","routes","path","exact","useCookies","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6954901c.chunk.js","sourcesContent":["import {useCallback, useState} from \"react\";\r\n\r\nexport const useHttp = () => {\r\n  const [loading, setLoading] = useState(false)\r\n  const [error, setError] = useState(null)\r\n  \r\n  const request = useCallback(async (url, method = 'GET', body = null, headers = {}) => {\r\n    setLoading(true)\r\n    try {\r\n      if(body) {\r\n        body = JSON.stringify(body)\r\n        headers['Content-Type'] = 'application/json'\r\n      }\r\n      \r\n      const response = await fetch(url, {method, body, headers})\r\n      const data = await response.json()\r\n      \r\n      if(!response.ok) {\r\n        throw new Error(data.errors[0] || 'Что-то не так')\r\n      }\r\n      \r\n      setLoading(false)\r\n      \r\n      return data;\r\n    } \r\n    catch (e) {\r\n      setLoading(false)\r\n      setError(e.message)\r\n      throw e\r\n    }\r\n  }, [])\r\n  \r\n  const clearError = useCallback(() => setError(null), [])\r\n  return {loading, request, error, clearError}\r\n}","export const Constants = {\r\n  API: 'http://68.183.78.15/'\r\n  //API: 'http://localhost:5000/'\r\n}","import React from \"react\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nexport const ProductItem = props => {\r\n  const classes = useStyles()\r\n  const {product, editProduct} = props\r\n\r\n  const changeHandler = event => {\r\n    const newProduct = {...product, [event.target.name]: [event.target.value]}\r\n    editProduct(newProduct)\r\n  }\r\n\r\n  return (\r\n    <Grid container>\r\n      <ListItem key={product.number}>\r\n        <Grid item xs={1}>\r\n          <Typography variant='h6'>{product.number}</Typography>\r\n        </Grid>\r\n        <Grid item container xs={11}>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              value={product.title}\r\n              variant='outlined'\r\n              label='Название'\r\n              size='small'\r\n              name='title'\r\n              onChange={changeHandler}\r\n              className={classes.maxWidth}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <TextField\r\n              value={product.code}\r\n              variant='outlined'\r\n              label='Артикул'\r\n              size='small'\r\n              name='code'\r\n              onChange={changeHandler}\r\n              className={classes.maxWidth}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <TextField\r\n              className={classes.maxWidth}\r\n              value={product.amount}\r\n              variant='outlined'\r\n              label='Количество'\r\n              size='small'\r\n              name='amount'\r\n              onChange={changeHandler}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <TextField\r\n              value={product.price}\r\n              variant='outlined'\r\n              label='Закупочная стоимость'\r\n              size='small'\r\n              name='price'\r\n              onChange={changeHandler}\r\n              className={classes.maxWidth}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </ListItem>\r\n      <Divider variant='inset' component='li'/>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  maxWidth: {\r\n    width: '100%',\r\n    padding: 5\r\n  }\r\n}))","import React, {Fragment, useState} from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {ProductItem} from \"./product-item\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nexport const Form = (props) => {\r\n  const classes = useStyles()\r\n  const {shops, suppliers, categories, saveForm, loading, error, success} = props\r\n\r\n  const [form, setForm] = useState({\r\n    productsText: '',\r\n    shop: null,\r\n    supplier: null,\r\n    supplyType: null,\r\n    category: null\r\n  })\r\n  const [products, setProducts] = useState([])\r\n  const [disabled, setDisabled] = useState(false)\r\n\r\n  const changeFormHandler = event => {\r\n    setForm({...form, [event.target.name]: event.target.value})\r\n  }\r\n\r\n  const productsTextHandle = () => {\r\n    if(form.productsText.length <= 0)\r\n      return\r\n\r\n    const productsText = form.productsText.split('\\n');\r\n    const productsProperties = productsText.map(x => x.split('\\t'));\r\n\r\n    const products = productsProperties.map(x => {\r\n      return {\r\n        number: +(x[0].replace(',', '.').replace(/\\s+/g,'')),\r\n        code: x[1],\r\n        title: x[2],\r\n        amount: +(x[3].replace(',', '.').replace(/\\s+/g,'')),\r\n        price: +(x[5].replace(',', '.').replace(/\\s+/g,'')),\r\n        sum: +(x[6].replace(',', '.').replace(/\\s+/g,''))\r\n      }\r\n    });\r\n\r\n    setProducts(products)\r\n  }\r\n\r\n  const editProduct = (product) => {\r\n    const productIndex = products.findIndex(x => x.number === product.number)\r\n    setProducts([...products.slice(0, productIndex), product, ...products.slice(productIndex + 1)])\r\n  }\r\n\r\n  const saveHandler = () => {\r\n    setDisabled(true)\r\n\r\n    const productsForSave = products.map(product => ({\r\n      ...product, ['price']: product.price + ''\r\n    }))\r\n\r\n    saveForm({...form, products: productsForSave})\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Grid item xs={4}>\r\n        <FormControl className={classes.formControl}>\r\n          <InputLabel id='shop-select'>Магазин</InputLabel>\r\n          <Select\r\n            labelId='shop-select'\r\n            value={form.shop}\r\n            onChange={changeFormHandler}\r\n            name='shop'\r\n          >\r\n            <MenuItem value={0}>Выбрать магазин</MenuItem>\r\n            {shops.map(shop => (\r\n              <MenuItem key={shop.id} value={shop.id}>{shop.title}</MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n        <FormControl className={classes.formControl}>\r\n          <InputLabel id='shop-select'>Поставщика</InputLabel>\r\n          <Select\r\n            labelId='shop-select'\r\n            value={form.supplier}\r\n            onChange={changeFormHandler}\r\n            name='supplier'\r\n          >\r\n            <MenuItem value={0}>Выбрать поставщика</MenuItem>\r\n            {suppliers.map(supplier => (\r\n              <MenuItem key={supplier.id} value={supplier.id}>{supplier.name}</MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n        <FormControl className={classes.formControl}>\r\n          <InputLabel id='shop-select'>Тип товара</InputLabel>\r\n          <Select\r\n            labelId='shop-select'\r\n            value={form.supplyType}\r\n            onChange={changeFormHandler}\r\n            name='supplyType'\r\n          >\r\n            <MenuItem value={0}>Выбрать тип товара</MenuItem>\r\n            <MenuItem value={1}>Оплаченный товар</MenuItem>\r\n            <MenuItem value={2}>Товар под реализацию</MenuItem>\r\n            <MenuItem value={3}>Отсроченый платёж</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n        <FormControl className={classes.formControl}>\r\n          <InputLabel id='shop-select'>Категория</InputLabel>\r\n          <Select\r\n            labelId='shop-select'\r\n            value={form.category}\r\n            onChange={changeFormHandler}\r\n            name='category'\r\n          >\r\n            <MenuItem value={0}>Выбрать категорию</MenuItem>\r\n            {categories.map(category => (\r\n              <MenuItem key={category.id} value={category.id}>{category.title}</MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n        <br/>\r\n        <TextField\r\n          label=\"Внесите товары\"\r\n          multiline\r\n          rows={10}\r\n          variant=\"outlined\"\r\n          value={form.productsText}\r\n          onChange={changeFormHandler}\r\n          name=\"productsText\"\r\n          fullWidth\r\n        />\r\n        <br/>\r\n        <Button\r\n          variant=\"contained\"\r\n          color='primary'\r\n          onClick={productsTextHandle}\r\n        >\r\n          Обработать\r\n        </Button>\r\n        <br/>\r\n        <br/>\r\n        <br/>\r\n        <br/>\r\n        <br/>\r\n        <Button\r\n          variant='contained'\r\n          color='primary'\r\n          onClick={saveHandler}\r\n          disabled={disabled}\r\n        >\r\n          Сохранить\r\n        </Button>\r\n        <br/>\r\n        <br/>\r\n        {loading && <CircularProgress/>}\r\n        {error && <p>Ошибка: {error}</p>}\r\n        {success && <p>Успех!</p>}\r\n      </Grid>\r\n      <Grid item xs={7}>\r\n        <List>\r\n          {products.map(product => (\r\n            <ProductItem\r\n              key={product.number}\r\n              product={product}\r\n              editProduct={editProduct}\r\n            />\r\n          ))}\r\n        </List>\r\n      </Grid>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  }\r\n}));","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport {useHttp} from \"../../hooks/http.hook\";\r\nimport {Constants} from \"../../const\";\r\nimport {Form} from \"../../components/import-form/form\";\r\n\r\nconst API = Constants.API\r\n\r\nexport const ImportPage = () => {\r\n  const {request, loading, error} = useHttp()\r\n\r\n  const [shops, setShops] = useState([])\r\n  const [categories, setCategories] = useState([])\r\n  const [suppliers, setSuppliers] = useState([])\r\n  const [saveSuccess, setSaveSuccess] = useState(false)\r\n\r\n  const getShops = useCallback(async () => {\r\n    try {\r\n      const data = await request(API + 'api/shops')\r\n      setShops(data)\r\n    }\r\n    catch (e) {}\r\n  }, [request])\r\n\r\n  const getCategories = useCallback(async () => {\r\n    try {\r\n      const data = await request(API + 'api/categories')\r\n      setCategories(data)\r\n    }\r\n    catch (e) {}\r\n  }, [request])\r\n\r\n  const getSuppliers = useCallback(async () => {\r\n    try {\r\n      const data = await request(API + 'api/suppliers')\r\n      setSuppliers(data)\r\n    }\r\n    catch (e) {}\r\n  }, [request])\r\n\r\n  useEffect(() => {\r\n    getShops()\r\n    getCategories()\r\n    getSuppliers()\r\n  }, [getShops, getCategories, getSuppliers])\r\n\r\n  const saveForm = async (data) => {\r\n    try {\r\n      const response = await request(API + 'api/supplyProducts/import', 'POST', {...data})\r\n      setSaveSuccess(true)\r\n    }\r\n    catch (e) { }\r\n  }\r\n  \r\n  return (\r\n    <Form\r\n      shops={shops}\r\n      suppliers={suppliers}\r\n      categories={categories}\r\n      saveForm={saveForm}\r\n      loading={loading}\r\n      error={error}\r\n      success={saveSuccess}\r\n    />\r\n  )\r\n}","import {Constants} from \"../../const\";\r\nimport {combine, createEffect, createEvent, createStore} from \"effector\";\r\n\r\nconst API_URL = Constants.API\r\nconst API_PRODUCTS = API_URL + 'api/products'\r\n\r\nexport const setShopFilter = createEvent()\r\nexport const setCategoryFilter = createEvent()\r\nexport const setTitleFilter = createEvent()\r\nexport const setMinAmountFilter = createEvent()\r\n\r\nexport const fetchProductsFx = createEffect({\r\n  async handler() {\r\n    const res = await fetch(API_PRODUCTS)\r\n    return res.json()\r\n  }\r\n})\r\n\r\nexport const $products = createStore([])\r\n  .on(fetchProductsFx.doneData, (state, products) => [...products])\r\n\r\nexport const $filterShopId = createStore(0)\r\n  .on(setShopFilter, (_, shopId) => shopId)\r\n\r\nexport const $filterCategoryId = createStore(0)\r\n  .on(setCategoryFilter, (_, categoryId) => categoryId)\r\n\r\nexport const $filterTitle = createStore('')\r\n  .on(setTitleFilter, (_, title) => title)\r\n\r\nexport const $filterMinAmount = createStore(0)\r\n  .on(setMinAmountFilter, (_, amount) => amount)\r\n\r\nexport const $filteredProducts = combine(\r\n  $products,\r\n  $filterShopId,\r\n  $filterCategoryId,\r\n  $filterTitle,\r\n  $filterMinAmount,\r\n  (products, shopId, categoryId, title, minAmount) => products\r\n    .filter(product => shopId !== 0\r\n      ? product.shopId === shopId\r\n      : true)\r\n    .filter(product => categoryId !== 0\r\n      ? product.categoryId === categoryId\r\n      : true)\r\n    .filter(product => title !== ''\r\n      ? product.title.toLowerCase().includes(title.toLowerCase())\r\n      : true)\r\n    .filter(product => product.amount >= minAmount)\r\n)","import {Constants} from \"../../const\";\r\nimport {createEffect, createStore} from \"effector\";\r\n\r\nconst API_URL = Constants.API\r\nconst API_SHOPS = API_URL + 'api/shops'\r\nconst API_CATEGORIES = API_URL + 'api/categories'\r\nconst API_SUPPLIERS = API_URL + 'api/suppliers'\r\n\r\nexport const fetchShopsFx = createEffect({\r\n  async handler() {\r\n    const res = await fetch(API_SHOPS)\r\n    return res.json()\r\n  }\r\n})\r\n\r\nexport const fetchCategoriesFx = createEffect({\r\n  async handler() {\r\n    const res = await fetch(API_CATEGORIES)\r\n    return res.json()\r\n  }\r\n})\r\n\r\nexport const fetchSupplierFx = createEffect({\r\n  async handler() {\r\n    const res = await fetch(API_SUPPLIERS)\r\n    return res.json()\r\n  }\r\n})\r\n\r\nexport const $shopsFilter = createStore([])\r\n  .on(fetchShopsFx.doneData, (_, shops) => [...shops])\r\n\r\nexport const $categoriesFilter = createStore([])\r\n  .on(fetchCategoriesFx.doneData, (_, categories) => [...categories])\r\n\r\nexport const $suppliersFilter = createStore([])\r\n  .on(fetchSupplierFx.doneData, (_, suppliers) => [...suppliers])","import React, {useEffect} from \"react\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {useStore} from \"effector-react\";\r\nimport {\r\n  $filterCategoryId, $filterMinAmount,\r\n  $filterShopId,\r\n  setCategoryFilter, setMinAmountFilter,\r\n  setShopFilter,\r\n  setTitleFilter\r\n} from \"../../models/product-table/product.store\";\r\nimport {$categoriesFilter, $shopsFilter, fetchCategoriesFx, fetchShopsFx} from \"../../models/filter/filter.store\";\r\n\r\nexport const ProductTableFilters = () => {\r\n  const classes = useStyles()\r\n\r\n  const shopId = useStore($filterShopId)\r\n  const categoryId = useStore($filterCategoryId)\r\n  const shops = useStore($shopsFilter)\r\n  const categories = useStore($categoriesFilter)\r\n  const minAmount = useStore($filterMinAmount)\r\n\r\n  const handleChangeMinAmount = event => {\r\n    setMinAmountFilter(event.target.value)\r\n  }\r\n\r\n  const handleChangeShop = (event) => {\r\n    setShopFilter(event.target.value)\r\n  };\r\n\r\n  const handleChangeCategory = (event) => {\r\n    setCategoryFilter(event.target.value)\r\n  };\r\n\r\n  const handleChangeTitle = (event) => {\r\n    setTitleFilter(event.target.value)\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchCategoriesFx()\r\n    fetchShopsFx()\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel id=\"demo-simple-select-label\">Магазин</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-label\"\r\n          id=\"demo-simple-select\"\r\n          value={shopId}\r\n          onChange={handleChangeShop}\r\n        >\r\n          <MenuItem value={0}>Выбрать магазин</MenuItem>\r\n          {shops.map(shop => (\r\n            <MenuItem key={shop.id} value={shop.id}>{shop.title}</MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel id=\"demo-simple-select-label\">Категория</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-label\"\r\n          id=\"demo-simple-select\"\r\n          value={categoryId}\r\n          onChange={handleChangeCategory}\r\n        >\r\n          <MenuItem value={0}>Выбрать категорию</MenuItem>\r\n          {categories.map(category => (\r\n            <MenuItem key={category.id} value={category.id}>{category.title}</MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <TextField\r\n          label=\"Поиск по названию\"\r\n          onChange={handleChangeTitle}\r\n        />\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <TextField\r\n          label=\"Минимальное кол-во\"\r\n          onChange={handleChangeMinAmount}\r\n          value={minAmount}\r\n        />\r\n      </FormControl>\r\n    </>\r\n  )\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  }\r\n}));","import React from \"react\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\n\r\nexport const ProductsTable = props => {\r\n  const {products, page, rowsPerPage, handleOpenDialog} = props\r\n\r\n  return (\r\n    <TableContainer>\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Артикул</TableCell>\r\n            <TableCell>Название</TableCell>\r\n            <TableCell>Количество</TableCell>\r\n            <TableCell>Цена</TableCell>\r\n            <TableCell>Магазин</TableCell>\r\n            <TableCell>Категория</TableCell>\r\n            <TableCell>Действия</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {products\r\n          .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n          .map(row => (\r\n            <TableRow key={row.id}>\r\n              <TableCell>{row.code}</TableCell>\r\n              <TableCell>{row.title}</TableCell>\r\n              <TableCell>{row.amount}</TableCell>\r\n              <TableCell>{row.price}</TableCell>\r\n              <TableCell>{row.shop}</TableCell>\r\n              <TableCell>{row.category}</TableCell>\r\n              <TableCell>\r\n                <Button variant=\"contained\" onClick={handleOpenDialog.bind(this, row)}>\r\n                  Detail\r\n                </Button>\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  )\r\n}","import React from \"react\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\n\r\nexport const ProductsTablePaginator = props => {\r\n  const {products, rowsPerPage, page, handleChangePage, handleChangeRowsPerPage} = props\r\n\r\n  return (\r\n    <TablePagination\r\n      rowsPerPageOptions={[10, 25, 50, 100]}\r\n      component='div'\r\n      count={products.length}\r\n      rowsPerPage={rowsPerPage}\r\n      page={page}\r\n      onChangePage={handleChangePage}\r\n      onChangeRowsPerPage={handleChangeRowsPerPage}\r\n    />\r\n  )\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport {ProductTableFilters} from \"./product-table-filters\";\r\nimport {ProductsTable} from \"./products-table\";\r\nimport {ProductsTablePaginator} from \"./products-table-paginator\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport {\r\n  $filteredProducts,\r\n  fetchProductsFx\r\n} from \"../../models/product-table/product.store\";\r\nimport {useStore} from \"effector-react\";\r\nimport {CSVLink} from \"react-csv\";\r\n\r\nexport const Products = () => {\r\n  const classes = useStyles()\r\n\r\n  const products = useStore($filteredProducts)\r\n\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n\r\n  const [openDialog, setOpenDialog] = useState(false)\r\n  const [detailProduct, setDetailProduct] = useState(null)\r\n\r\n  const handleOpenDialog = (product) => {\r\n    setDetailProduct(product)\r\n    setOpenDialog(true)\r\n  }\r\n\r\n  const handleCloseDialog = () => {\r\n    setOpenDialog(false)\r\n  }\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchProductsFx()\r\n  }, [])\r\n\r\n  const headers = [\r\n    {label: \"Артикул\", key: 'code'},\r\n    {label: \"Наименование\", key: 'title'},\r\n    {label: \"Кол-во\", key: 'amount'},\r\n    {label: \"Цена\", key: 'price'},\r\n    {label: \"Магазин\", key: 'shop'},\r\n    {label: \"Категория\", key: 'category'}\r\n  ]\r\n\r\n  const data = products.map(product => (\r\n    {\r\n      code: product.code,\r\n      title: product.title,\r\n      amount: product.amount,\r\n      price: product.price,\r\n      shop: product.shop,\r\n      category: product.category\r\n    }\r\n  ));\r\n\r\n  return (\r\n    <>\r\n      <CSVLink data={data} headers={headers} separator={';'}>\r\n        Download me\r\n      </CSVLink>;\r\n      <ProductTableFilters/>\r\n      <ProductsTable\r\n        products={products}\r\n        page={page}\r\n        rowsPerPage={rowsPerPage}\r\n        handleOpenDialog={handleOpenDialog}\r\n      />\r\n      <ProductsTablePaginator\r\n        products={products}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        handleChangePage={handleChangePage}\r\n        handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n      />\r\n      <Dialog open={openDialog} onClose={handleCloseDialog}>\r\n        <DialogTitle>Product</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            label='Название'\r\n            type='text'\r\n            margin='dense'\r\n          />\r\n          <TextField\r\n            label='Артикул'\r\n            type='text'\r\n            margin='dense'\r\n          />\r\n          <TextField\r\n            label='Стоимость для продажи'\r\n            type='number'\r\n            margin='dense'\r\n          />\r\n          <FormControl className={classes.formControl}>\r\n            <InputLabel id='category-select'>Категория</InputLabel>\r\n            <Select\r\n              labelId='category-select'\r\n            >\r\n              <MenuItem>1111</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n          <FormControl className={classes.formControl}>\r\n            <InputLabel id='shop-select'>Магазин</InputLabel>\r\n            <Select\r\n              labelId='shop-select'\r\n            >\r\n              <MenuItem>1111</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </>\r\n  )\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  }\r\n}));","import React, {useCallback, useEffect, useState} from 'react'\r\nimport {useHttp} from \"../../hooks/http.hook\";\r\nimport {Constants} from \"../../const\";\r\nimport {Products} from \"../../components/admin-products/products\";\r\nimport {useStore} from \"effector-react\";\r\nimport {$filteredProducts, fetchProductsFx} from \"../../models/product-table/product.store\";\r\n\r\nconst API = Constants.API\r\n\r\nexport const ProductsPage = () => {\r\n  const {loading, request} = useHttp()\r\n  const products = useStore($filteredProducts)\r\n\r\n  useEffect(() => {\r\n    fetchProductsFx()\r\n  }, [])\r\n\r\n  if(loading)\r\n    return <div>Загрузка...</div>\r\n  else\r\n    return <Products/>\r\n}","import React, {useCallback, useEffect, useState} from 'react'\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {useHttp} from \"../../hooks/http.hook\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {Constants} from \"../../const\";\r\nimport {KeyboardDatePicker, MuiPickersUtilsProvider} from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\n\r\nconst API = Constants.API\r\n\r\nexport const ProductsHistory = () => {\r\n  const classes = useStyles()\r\n  const [products, setProducts] = useState([])\r\n  const [shops, setShops] = useState([])\r\n  const [shop, setShop] = useState(0)\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const {loading, request} = useHttp()\r\n  const [startDate, setStartDate] = useState(null)\r\n  const [endDate, setEndDate] = useState(null)\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeShop = (event) => {\r\n    setShop(event.target.value);\r\n  };\r\n\r\n  const getProducts = useCallback(async () => {\r\n    try {\r\n      const data = await request(API + 'api/productsHistory')\r\n      setProducts(data.map(product => (\r\n        {...product, date: new Date(product.dateTime)}\r\n      )))\r\n    }\r\n    catch (e) {}\r\n  }, [request])\r\n\r\n  const getShops = useCallback(async () => {\r\n    try {\r\n      const data = await request(API + 'api/shops')\r\n      setShops(data)\r\n    }\r\n    catch (e) {}\r\n  }, [request])\r\n\r\n  useEffect(() => {\r\n    getProducts()\r\n    getShops()\r\n  }, [getProducts, getShops])\r\n\r\n  return(\r\n    <>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel id=\"demo-simple-select-label\">Магазин</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-label\"\r\n          id=\"demo-simple-select\"\r\n          value={shop}\r\n          onChange={handleChangeShop}\r\n        >\r\n          <MenuItem value={0}>Выбрать магазин</MenuItem>\r\n          {shops.map(shop => (\r\n            <MenuItem key={shop.id} value={shop.id}>{shop.title}</MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <TextField\r\n          label=\"Дата с\"\r\n          type=\"date\"\r\n          defaultValue=\"\"\r\n          className={classes.textField}\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n          onChange={event => setStartDate(new Date(event.target.value))}\r\n        />\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n          <KeyboardDatePicker\r\n            disableToolbar\r\n            variant='inline'\r\n            format='MM/dd/yyyy'\r\n            margin='normal'\r\n            label='Дата с'\r\n            value={startDate}\r\n            onChange={event => setStartDate(event)}\r\n            KeyboardButtonProps={{\r\n              'aria-label': 'change date',\r\n            }}\r\n          />\r\n        </MuiPickersUtilsProvider>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <TextField\r\n          label=\"Дата по\"\r\n          type=\"date\"\r\n          defaultValue=\"\"\r\n          className={classes.textField}\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n          onChange={event => setEndDate(new Date(event.target.value))}\r\n        />\r\n      </FormControl>\r\n      <TableContainer>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Дата</TableCell>\r\n              <TableCell>Товар</TableCell>\r\n              <TableCell>Количество</TableCell>\r\n              <TableCell>Поставщик</TableCell>\r\n              <TableCell>Тип</TableCell>\r\n              <TableCell>Магазин</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {products\r\n              .filter(row => shop !== 0\r\n                ? row.shopId === shop\r\n                : true)\r\n              .filter(row => startDate\r\n                ? row.date >= startDate\r\n                : true)\r\n              .filter(row => endDate\r\n                ? row.date <= endDate\r\n                : true)\r\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n              .map(row => (\r\n              <TableRow key={row.id}>\r\n                <TableCell>{row.date.toLocaleDateString()}</TableCell>\r\n                <TableCell>{row.productTitle}</TableCell>\r\n                <TableCell>{row.amount}</TableCell>\r\n                <TableCell>{row.supplierName}</TableCell>\r\n                <TableCell>{row.type}</TableCell>\r\n                <TableCell>{row.shopTitle}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 50, 100]}\r\n        component='div'\r\n        count={products\r\n          .filter(row => shop !== 0\r\n            ? row.shopId === shop\r\n            : true)\r\n          .filter(row => startDate\r\n            ? row.date >= startDate\r\n            : true)\r\n          .filter(row => endDate\r\n            ? row.date <= endDate\r\n            : true)\r\n          .length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));","import React from \"react\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nexport const SupplyProductItem = props => {\r\n  const classes = useStyles()\r\n\r\n  const {index, changeFormHandler} = props\r\n  const {productId, amount, shopId, supplierId, procurementCost} = props.supplyProduct\r\n\r\n  const products = [{id: 1, title: 'product1'}, {id: 2, title: 'product2'}]\r\n  const shops = [{id: 2, title: 'shop1'}]\r\n  const suppliers = [{id: 1, title: 'supplier1'}]\r\n\r\n  const changeProduct = event => {\r\n    changeFormHandler(index, event)\r\n  }\r\n\r\n  return(\r\n    <>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel id='product-select'>Товар</InputLabel>\r\n        <Select\r\n          labelId='product-select'\r\n          name='productId'\r\n          value={productId}\r\n          onChange={changeProduct}\r\n        >\r\n          <MenuItem value={0}>Выбрать товар</MenuItem>\r\n          {products.map(product => (\r\n            <MenuItem key={product.id} value={product.id}>{product.title}</MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <TextField\r\n          label='Количество'\r\n          value={amount}\r\n          onChange={changeProduct}\r\n          name='amount'\r\n        />\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel id='shop-select'>Магазин</InputLabel>\r\n        <Select\r\n          labelId='shop-select'\r\n          name='shopId'\r\n          value={shopId}\r\n          onChange={changeProduct}\r\n        >\r\n          <MenuItem value={0}>Выбрать магазин</MenuItem>\r\n          {shops.map(shop => (\r\n            <MenuItem key={shop.id} value={shop.id}>{shop.title}</MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel id='supplier-select'>Поставщик</InputLabel>\r\n        <Select\r\n          labelId='supplier-select'\r\n          name='supplierId'\r\n          value={supplierId}\r\n          onChange={changeProduct}\r\n        >\r\n          <MenuItem value={0}>Выбрать поставшика</MenuItem>\r\n          {suppliers.map(supplier => (\r\n            <MenuItem key={supplier.id} value={supplier.id}>{supplier.title}</MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <TextField\r\n          label='Закупочная стоимость'\r\n          value={procurementCost}\r\n          onChange={changeProduct}\r\n          name='procurementCost'\r\n        />\r\n      </FormControl>\r\n    </>\r\n  )\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  }\r\n}));","import React, {useState} from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport {SupplyProductItem} from \"./supply-product-item\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nexport const SupplyProductForm = () => {\r\n  const classes = useStyles()\r\n\r\n  const [supplyProducts, setSupplyProducts] = useState([\r\n    {\r\n      productId: 0,\r\n      amount: 0,\r\n      shopId: 0,\r\n      supplierId: 0,\r\n      procurementCost: 0\r\n    }\r\n  ])\r\n\r\n  const changeFormHandler = (index, event) => {\r\n    const supplyProduct = supplyProducts[index]\r\n    const changeItemState = {...supplyProduct, [event.target.name]: event.target.value}\r\n\r\n    setSupplyProducts([\r\n      ...supplyProducts.slice(0, index),\r\n      changeItemState,\r\n      ...supplyProducts.slice(index + 1)\r\n    ])\r\n  }\r\n\r\n  const addSupplyProduct = () => {\r\n    setSupplyProducts([...supplyProducts, {\r\n      productId: 0,\r\n      amount: 0,\r\n      shopId: 0,\r\n      supplierId: 0,\r\n      procurementCost: 0\r\n    }])\r\n  }\r\n\r\n  const saveForm = () => {\r\n    console.log(supplyProducts)\r\n  }\r\n\r\n  return(\r\n    <>\r\n      {supplyProducts.map((supplyProduct, index) => (\r\n        <SupplyProductItem\r\n          key={index}\r\n          supplyProduct={supplyProduct}\r\n          changeFormHandler={changeFormHandler}\r\n          index={index}\r\n        />\r\n      ))}\r\n      <Button\r\n        onClick={addSupplyProduct}\r\n      >\r\n        Добавить товар\r\n      </Button>\r\n      <Button\r\n        onClick={saveForm}\r\n      >\r\n        Сохранить\r\n      </Button>\r\n    </>\r\n  )\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  }\r\n}));","import {createEffect, createStore} from \"effector\";\r\nimport {Constants} from \"../const\";\r\n\r\nconst API_URL = Constants.API\r\nconst API_SHOPS = API_URL + 'api/shops'\r\n\r\nexport const fetchShopsFx = createEffect({\r\n  async handler() {\r\n    const res = await fetch(API_SHOPS)\r\n    return res.json()\r\n  }\r\n})\r\n\r\nexport const saveShopFx = createEffect({\r\n  async handler(title) {\r\n    const data = {title}\r\n\r\n    const res = await fetch(API_SHOPS, {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      method: 'POST',\r\n      body: JSON.stringify(data)\r\n    })\r\n\r\n    return res.json()\r\n  }\r\n})\r\n\r\nexport const shops = createStore([])\r\n  .on(fetchShopsFx.doneData, (state, shops) => [...shops])\r\n  .on(saveShopFx.doneData, (state, shop) => [...state, shop])","import React, {useState} from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {saveShopFx} from \"../../store/shop-store\";\r\n\r\nexport const ShopCreate = () => {\r\n\r\n  const [title, setTitle] = useState('')\r\n  const [disabled, setDisabled] = useState(false)\r\n\r\n  const saveHandler = () => {\r\n    setDisabled(true)\r\n    saveShopFx(title)\r\n\r\n    setTitle('')\r\n    setDisabled(false)\r\n  }\r\n\r\n  return(\r\n    <>\r\n      <TextField\r\n        label='Название'\r\n        value={title}\r\n        onChange={event => setTitle(event.target.value)}\r\n        name='title'\r\n      />\r\n      <Button\r\n        onClick={saveHandler}\r\n        variant='contained'\r\n        color='primary'\r\n        disabled={disabled}\r\n      >\r\n        Сохранить\r\n      </Button>\r\n    </>\r\n  )\r\n}","import React, {useEffect} from \"react\";\r\nimport {fetchShopsFx, shops} from \"../../store/shop-store\";\r\nimport {useStore} from \"effector-react\";\r\nimport {ShopCreate} from \"./shop-create\";\r\n\r\nexport const ShopsList = () => {\r\n\r\n  useEffect(() => {\r\n    fetchShopsFx()\r\n  }, [])\r\n\r\n  const shopsData = useStore(shops)\r\n\r\n  return(\r\n    <>\r\n      <ShopCreate/>\r\n      <ul>\r\n        {shopsData.map(shop => (\r\n          <li>{shop.id} / {shop.title}</li>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  )\r\n}","import {Constants} from \"../const\";\r\nimport {createEffect, createStore} from \"effector\";\r\n\r\nconst API_URL = Constants.API\r\nconst API_SUPPLIERS = API_URL + 'api/suppliers'\r\n\r\nexport const fetchSuppliersFx = createEffect({\r\n  async handler() {\r\n    const res = await fetch(API_SUPPLIERS)\r\n    return res.json()\r\n  }\r\n})\r\n\r\nexport const createSupplierFx = createEffect({\r\n  async handler(name, phone, email) {\r\n    const data = {name, phone, email}\r\n\r\n    const res = await fetch(API_SUPPLIERS, {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      method: 'POST',\r\n      body: JSON.stringify(data)\r\n    })\r\n\r\n    return res.json()\r\n  }\r\n})\r\n\r\nexport const suppliers = createStore([])\r\n  .on(fetchSuppliersFx.doneData, (state, suppliers) => [...suppliers])\r\n  .on(createSupplierFx.doneData, (state, supplier) => [...state, supplier])","import React, {useState} from \"react\";\r\nimport {createSupplierFx} from \"../../store/supplier-store\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nexport const SupplierCreate = () => {\r\n\r\n  const [name, setName] = useState('')\r\n  const [phone, setPhone] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [disabled, setDisabled] = useState(false)\r\n\r\n  const saveHandler = () => {\r\n    setDisabled(true)\r\n    createSupplierFx(name, phone, email)\r\n\r\n    setName('')\r\n    setDisabled(false)\r\n  }\r\n\r\n  return(\r\n    <>\r\n      <TextField\r\n        label='Имя поставщика'\r\n        value={name}\r\n        onChange={event => setName(event.target.value)}\r\n        name='name'\r\n      />\r\n      <TextField\r\n        label='Телефон'\r\n        value={phone}\r\n        onChange={event => setPhone(event.target.value)}\r\n        name='phone'\r\n      />\r\n      <TextField\r\n        label='Почта'\r\n        value={email}\r\n        onChange={event => setEmail(event.target.value)}\r\n        name='email'\r\n      />\r\n      <Button\r\n       onClick={saveHandler}\r\n       variant='contained'\r\n       color='primary'\r\n       disabled={disabled}\r\n      >\r\n        Сохранить\r\n      </Button>\r\n    </>\r\n  )\r\n}","import React, {useEffect} from \"react\";\r\nimport {fetchSuppliersFx, suppliers} from \"../../store/supplier-store\";\r\nimport {useStore} from \"effector-react\";\r\nimport {SupplierCreate} from \"./supplier-create\";\r\n\r\nexport const SuppliersList = () => {\r\n\r\n  useEffect(() => {\r\n    fetchSuppliersFx()\r\n  }, [])\r\n\r\n  const suppliersData = useStore(suppliers)\r\n\r\n  return(\r\n    <>\r\n      <SupplierCreate/>\r\n      <ul>\r\n        {suppliersData.map(supplier => (\r\n          <li>{supplier.id} / {supplier.name}</li>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  )\r\n}","import {Constants} from \"../const\";\r\nimport {createEffect, createStore} from \"effector\";\r\n\r\nconst API_URL = Constants.API\r\nconst API_CATEGORIES = API_URL + 'api/categories'\r\n\r\nexport const fetchCategoriesFx = createEffect({\r\n  async handler() {\r\n    const res = await fetch(API_CATEGORIES)\r\n    return res.json()\r\n  }\r\n})\r\n\r\nexport const createCategoryFx = createEffect({\r\n  async handler(title) {\r\n    const data = {title}\r\n\r\n    const res = await fetch(API_CATEGORIES, {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      method: 'POST',\r\n      body: JSON.stringify(data)\r\n    })\r\n\r\n    return res.json()\r\n  }\r\n})\r\n\r\nexport const categories = createStore([])\r\n  .on(fetchCategoriesFx.doneData, (state, categories) => [...categories])\r\n  .on(createCategoryFx.doneData, (state, category) => [...state, category])","import React, {useState} from \"react\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { createCategoryFx } from \"../../store/category-store\";\r\n\r\nexport const CategoryCreate = () => {\r\n\r\n  const [title, setTitle] = useState('')\r\n  const [disabled, setDisabled] = useState(false)\r\n\r\n  const saveHandler = () => {\r\n    setDisabled(true);\r\n    createCategoryFx(title);\r\n\r\n    setTitle('');\r\n    setDisabled(false);\r\n  }\r\n\r\n  return(\r\n    <>\r\n      <TextField\r\n        label='Название'\r\n        value={title}\r\n        onChange={event => setTitle(event.target.value)}\r\n        name='title'\r\n      />\r\n      <Button\r\n       onClick={saveHandler}\r\n       variant='contained'\r\n       color='primary'\r\n       disabled={disabled}\r\n      >\r\n        Сохранить\r\n      </Button>\r\n    </>\r\n  )\r\n}","import React, {useEffect} from \"react\";\r\n\r\nimport {useStore} from \"effector-react\";\r\nimport { fetchCategoriesFx, categories } from \"../../store/category-store\";\r\nimport { CategoryCreate } from './category-create';\r\n\r\nexport const CategoriesList = () => {\r\n\r\n  useEffect(() => {\r\n    fetchCategoriesFx()\r\n  }, [])\r\n\r\n  const categoriesData = useStore(categories)\r\n\r\n  return(\r\n    <>\r\n      <CategoryCreate />\r\n      <ul>\r\n        {categoriesData.map(category => (\r\n          <li>{category.id} / {category.title}</li>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  )\r\n}","import {Constants} from \"../const\";\r\nimport {createEffect, createStore} from \"effector\";\r\n\r\nconst API_URL = Constants.API\r\nconst API_SUPPLYPRODUCTS = API_URL + 'api/supplyProducts'\r\n\r\nexport const fetchSupplyProductsFx = createEffect({\r\n  async handler() {\r\n    const res = await fetch(API_SUPPLYPRODUCTS)\r\n    return res.json()\r\n  }\r\n})\r\n\r\nexport const supplyProducts = createStore([])\r\n  .on(fetchSupplyProductsFx.doneData, (state, supplyProducts) => [...supplyProducts])","import React, {useEffect, useState} from \"react\";\r\nimport {fetchSupplyProductsFx, supplyProducts} from \"../../../store/supply-product-store\";\r\nimport {useStore} from \"effector-react\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nexport const SupplyProductsList = () => {\r\n\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const [minProcurementCost, setMinProcurementCost] = useState(0)\r\n\r\n  useEffect(() => {\r\n    fetchSupplyProductsFx()\r\n  }, [])\r\n\r\n  const data = useStore(supplyProducts)\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  return(\r\n    <>\r\n      <FormControl>\r\n        <TextField\r\n          label=\"Закупочная стоимость\"\r\n          defaultValue=\"0\"\r\n          onChange={event => setMinProcurementCost(event.target.value)}\r\n        />\r\n      </FormControl>\r\n      <TableContainer>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Id</TableCell>\r\n              <TableCell>Товар</TableCell>\r\n              <TableCell>Закупочная цена</TableCell>\r\n              <TableCell>Кол-во на складе</TableCell>\r\n              <TableCell>Поставленное кол-во</TableCell>\r\n              <TableCell>Магазин</TableCell>\r\n              <TableCell>Поставщик</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {data\r\n              .filter(row => row.procurementCost >= minProcurementCost)\r\n              //.sort((a, b) => (b.procurementCost - a.procurementCost))\r\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n              .map(row => (\r\n                <TableRow key={row.supplyProductId}>\r\n                  <TableCell>{row.supplyProductId}</TableCell>\r\n                  <TableCell>{row.productTitle}</TableCell>\r\n                  <TableCell>{row.procurementCost}</TableCell>\r\n                  <TableCell>{row.shopAmount}</TableCell>\r\n                  <TableCell>{row.suppliedAmount}</TableCell>\r\n                  <TableCell>{row.shopTitle}</TableCell>\r\n                  <TableCell>{row.supplierName}</TableCell>\r\n                </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 50, 100]}\r\n        component='div'\r\n        count={data\r\n          .filter(row => row.procurementCost >= minProcurementCost)\r\n          .length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n      />\r\n    </>\r\n  )\r\n}","import {combine, createEffect, createEvent, createStore} from \"effector\";\r\nimport {Constants} from \"../../const\";\r\n\r\nconst API_URL = Constants.API\r\nconst API_MANAGERS = API_URL + 'api/managers'\r\n\r\nexport const clickMargin = createEvent()\r\nexport const clickTurnover = createEvent()\r\n\r\nexport const fetchManagersFx = createEffect({\r\n  async handler() {\r\n    const res = await fetch(API_MANAGERS)\r\n    return res.json()\r\n  }\r\n})\r\n\r\nexport const filterManagersFx = createEffect({\r\n  async handler(dates) {\r\n    const data = dates\r\n\r\n    const res = await fetch(API_MANAGERS + '/filter', {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      method: 'POST',\r\n      body: JSON.stringify(data)\r\n    })\r\n\r\n    return res.json()\r\n  }\r\n})\r\n\r\nexport const $managers = createStore([])\r\n  .on(fetchManagersFx.doneData, (_, managers) => [...managers])\r\n  .on(filterManagersFx.doneData, (_, managers) => [...managers])\r\n\r\nexport const $marginOrdered = createStore(false)\r\n    .on(clickMargin, (_) => !_)\r\n    .on(clickTurnover, (_) => false)\r\n\r\nexport const $turnoverOrdered = createStore(false)\r\n    .on(clickTurnover, (_) => !_)\r\n    .on(clickMargin, (_) => false)\r\n\r\n\r\nexport const $orderedManagers = combine(\r\n    $managers,\r\n    $marginOrdered,\r\n    $turnoverOrdered,\r\n    (managers, margin, turnover) => [...managers\r\n        .sort((a, b) => {\r\n          if(margin) return b.margin - a.margin\r\n          if(turnover) return b.sum - a.sum\r\n          return 0\r\n        })]\r\n)\r\n\r\n\r\n\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {useStore} from \"effector-react\";\r\nimport {\r\n    $orderedManagers,\r\n    clickMargin,\r\n    clickTurnover,\r\n    fetchManagersFx,\r\n    filterManagersFx\r\n} from \"../../models/manager/manager.store\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport {KeyboardDatePicker, MuiPickersUtilsProvider} from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nexport const ManagerList = () => {\r\n  const classes = useStyles()\r\n\r\n  const [startDate, setStartDate] = useState(null)\r\n  const [endDate, setEndDate] = useState(null)\r\n\r\n  const managers = useStore($orderedManagers)\r\n\r\n  const searchHandler = () => {\r\n    filterManagersFx({startDate, endDate})\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchManagersFx()\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <FormControl className={classes.formControl}>\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n          <KeyboardDatePicker\r\n            disableToolbar\r\n            variant='inline'\r\n            format='dd/MM/yyyy'\r\n            margin='normal'\r\n            label='Дата с'\r\n            value={startDate}\r\n            onChange={event => setStartDate(event)}\r\n            KeyboardButtonProps={{\r\n              'aria-label': 'change date',\r\n            }}\r\n          />\r\n        </MuiPickersUtilsProvider>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n          <KeyboardDatePicker\r\n            disableToolbar\r\n            variant='inline'\r\n            format='dd/MM/yyyy'\r\n            margin='normal'\r\n            label='Дата по'\r\n            value={endDate}\r\n            onChange={event => setEndDate(event)}\r\n            KeyboardButtonProps={{\r\n              'aria-label': 'change date',\r\n            }}\r\n          />\r\n        </MuiPickersUtilsProvider>\r\n      </FormControl>\r\n      <Button\r\n        onClick={searchHandler}\r\n      >\r\n        Поиск\r\n      </Button>\r\n      <TableContainer>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Имя</TableCell>\r\n              <TableCell onClick={() => clickMargin()}>Маржа</TableCell>\r\n              <TableCell onClick={() => clickTurnover()}>Оборот</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {managers.map(row => (\r\n              <TableRow key={row.id}>\r\n                <TableCell>{row.name}</TableCell>\r\n                <TableCell>{row.margin}</TableCell>\r\n                <TableCell>{row.sum}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </>\r\n  )\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));","import {Constants} from \"../../const\";\r\nimport {createEffect, createStore} from \"effector\";\r\n\r\nconst API_URL = Constants.API\r\nconst API_DELETED_SALES = API_URL + 'api/deletedSales'\r\n\r\nexport const fetchDeletedSalesFx = createEffect({\r\n  async handler() {\r\n    const res = await fetch(API_DELETED_SALES)\r\n    return res.json()\r\n  }\r\n})\r\n\r\nexport const $deletedSales = createStore([])\r\n  .on(fetchDeletedSalesFx.doneData, (state, deletedSales) => [...deletedSales])","import React, {useState} from \"react\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport {Box} from \"@material-ui/core\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nexport const ArchiveSaleListItem = props => {\r\n  const {sale} = props\r\n  const [open, setOpen] = useState(false)\r\n\r\n  const detailOpen = () => {\r\n    setOpen(!open)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <TableRow>\r\n        <TableCell>{sale.number}</TableCell>\r\n        <TableCell>{sale.date}</TableCell>\r\n        <TableCell>{sale.sum}</TableCell>\r\n        <TableCell>{sale.margin}</TableCell>\r\n        <TableCell>{sale.procurementCost}</TableCell>\r\n        <TableCell>{sale.shopTitle}</TableCell>\r\n        <TableCell>{sale.saleType}</TableCell>\r\n        <TableCell>{sale.discount}</TableCell>\r\n        <TableCell>{sale.buyer}</TableCell>\r\n        <TableCell>\r\n          <IconButton aria-lavel=\"expand row\" size='small' onClick={detailOpen}>\r\n            {open ? <KeyboardArrowUpIcon/> : <KeyboardArrowDownIcon/>}\r\n          </IconButton>\r\n        </TableCell>\r\n      </TableRow>\r\n      <TableRow>\r\n        <TableCell style={{paddingBottom: 0, paddingTop: 0}} colSpan={10}>\r\n          <Collapse in={open} timeout={'auto'} unmountOnExit>\r\n            <Box margin={1}>\r\n              <Grid container>\r\n                <Grid item xs={3}>\r\n                  {sale.payments.map(payment => (\r\n                    <>\r\n                      <span>Счёт: {payment.account} | </span>\r\n                      <span>Сумма: {payment.sum}</span>\r\n                      <br/>\r\n                    </>\r\n                  ))}\r\n                </Grid>\r\n                <Grid item xs={9}>\r\n                  {sale.products.map(product => (\r\n                    <>\r\n                      <span>Название: {product.title} | </span>\r\n                      <span>Код: {product.code} | </span>\r\n                      <span>Кол-во: {product.amount} | </span>\r\n                      <span>Цена: {product.price} | </span>\r\n                      <span>Закупочная: {product.procurementCost} | </span>\r\n                      <span>Поставщик: {product.supplierName}</span>\r\n                      <br/>\r\n                    </>\r\n                  ))}\r\n                </Grid>\r\n              </Grid>\r\n            </Box>\r\n          </Collapse>\r\n        </TableCell>\r\n      </TableRow>\r\n    </>\r\n  )\r\n}","import React, {useEffect} from \"react\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport {useStore} from \"effector-react\";\r\nimport {$deletedSales, fetchDeletedSalesFx} from \"../../models/archive-sale/archive-sale.store\";\r\nimport {ArchiveSaleListItem} from \"./archive-sale-list-item\";\r\n\r\nexport const ArchiveSalesList = () => {\r\n\r\n  const sales = useStore($deletedSales)\r\n\r\n  useEffect(() => {\r\n    fetchDeletedSalesFx()\r\n  }, [])\r\n\r\n  return (\r\n    <TableContainer>\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Номер</TableCell>\r\n            <TableCell>Дата</TableCell>\r\n            <TableCell>Сумма</TableCell>\r\n            <TableCell>Маржа</TableCell>\r\n            <TableCell>Себестоимость</TableCell>\r\n            <TableCell>Магазин</TableCell>\r\n            <TableCell>Тип</TableCell>\r\n            <TableCell>Скидка</TableCell>\r\n            <TableCell>Покупатель</TableCell>\r\n            <TableCell></TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {sales\r\n            .map(row => (\r\n              <ArchiveSaleListItem\r\n                key={row.number}\r\n                sale={row}\r\n              />\r\n            ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  )\r\n}","import React from 'react'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Button from '@material-ui/core/Button'\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\n\r\nexport const ProductsList = () => {\r\n  return (\r\n    <>\r\n      <TextField label='Поиск товара' variant='outlined'/>\r\n      <List>\r\n        <ListItem>\r\n          <Button>Product</Button>\r\n        </ListItem>\r\n        <ListItem>\r\n          <Button>Product</Button>\r\n        </ListItem>\r\n        <ListItem>\r\n          <Button>Product</Button>\r\n        </ListItem>\r\n        <ListItem>\r\n          <Button>Product</Button>\r\n        </ListItem>\r\n      </List>\r\n    </>\r\n  )\r\n}","import React from 'react'\r\nimport Card from '@material-ui/core/Card'\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport {makeStyles} from '@material-ui/core/styles'\r\nimport Divider from '@material-ui/core/Divider'\r\n\r\nexport const ProductInfo = () => {\r\n  const classes = useStyles()\r\n\r\n  return(\r\n    <Card>\r\n      <CardContent>\r\n        <Typography color={'textSecondary'} gutterBottom className={classes.title}>\r\n          <strong>Подробно о товаре: (Название товара)</strong>\r\n        </Typography>\r\n        <Divider/>\r\n        <Typography className={classes.title} color={'textSecondary'} gutterBottom>\r\n          <strong>Id: 1</strong>\r\n          <br/>\r\n          <strong>Название: Name</strong>\r\n          <br/>\r\n          <strong>Артикул: Code</strong>\r\n          <br/>\r\n          <strong>Цена: Price</strong>\r\n          <br/>\r\n          <strong>Категория: Category</strong>\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  )\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  title: {\r\n    fontSize: 14\r\n  }\r\n})","import React from 'react'\r\nimport Tabs from '@material-ui/core/Tabs'\r\nimport Tab from '@material-ui/core/Tab'\r\nimport Paper from '@material-ui/core/Paper'\r\n\r\nexport const ProductTabs = () => {\r\n  return(\r\n    <Paper>\r\n      <Tabs\r\n        indicatorColor={'primary'}\r\n        textColor={'primary'}\r\n        variant={'fullWidth'}\r\n        centered\r\n      >\r\n        <Tab label={'One'}/>\r\n        <Tab label={'Two'}/>\r\n      </Tabs>\r\n    </Paper>\r\n  )\r\n}","import React from 'react'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport {ProductsList} from './products-list.components'\r\nimport {ProductInfo} from './product-info'\r\nimport {ProductTabs} from './product-tabs.component'\r\n\r\nexport const Product = () => {\r\n\r\n  return(\r\n    <Grid container>\r\n      <Grid item xs={10}>\r\n        <ProductInfo/>\r\n        <ProductTabs/>\r\n      </Grid>\r\n      <Grid item xs={2}>\r\n        <ProductsList/>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}","import {createContext} from 'react'\r\n\r\n\r\nexport const AuthContext = createContext({\r\n  userId: null,\r\n  userRole: '',\r\n  isAuth: false\r\n})","import React from \"react\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport List from \"@material-ui/core/List\";\r\n\r\nexport const Menu = () => {\r\n\r\n  return (\r\n    <List>\r\n      <ListItem>\r\n        <a href='/'>\r\n          Старый интерфейс\r\n        </a>\r\n      </ListItem>\r\n      <ListItem button>\r\n        <NavLink to={'/admin/product'}>\r\n          <ListItemText primary={'Товар'}/>\r\n        </NavLink>\r\n      </ListItem>\r\n      <ListItem button>\r\n        <NavLink to={'/admin/import'}>\r\n          <ListItemText primary={'Импорт'}/>\r\n        </NavLink>\r\n      </ListItem>\r\n      <ListItem button>\r\n        <NavLink to={'/admin/products'}>\r\n          <ListItemText primary={'Все товары'}/>\r\n        </NavLink>\r\n      </ListItem>\r\n      <ListItem button>\r\n        <NavLink to={'/admin/supplyProductsList'}>\r\n          <ListItemText primary={'Список поставок'}/>\r\n        </NavLink>\r\n      </ListItem>\r\n      <ListItem button>\r\n        <NavLink to={'/admin/managers'}>\r\n          <ListItemText primary={'Менеджеры'}/>\r\n        </NavLink>\r\n      </ListItem>\r\n      <ListItem button>\r\n        <NavLink to={'/admin/archiveSales'}>\r\n          <ListItemText primary={'Архивные продажи'}/>\r\n        </NavLink>\r\n      </ListItem>\r\n    </List>\r\n  )\r\n\r\n  /*return (\r\n    <List>\r\n      <ListItem>\r\n        <a href='/'>\r\n          Старый интерфейс\r\n        </a>\r\n      </ListItem>\r\n      <ListItem button>\r\n        <NavLink to={'/admin/import'}>\r\n          <ListItemText primary={'Импорт'}/>\r\n        </NavLink>\r\n      </ListItem>\r\n      <ListItem button>\r\n        <NavLink to={'/admin/supply'}>\r\n          <ListItemText primary={'Поставка'}/>\r\n        </NavLink>\r\n      </ListItem>\r\n      <ListItem button>\r\n        <NavLink to={'/admin/supplyProductsList'}>\r\n          <ListItemText primary={'Список поставок'}/>\r\n        </NavLink>\r\n      </ListItem>\r\n      <ListItem button>\r\n        <NavLink to={'/admin/managers'}>\r\n          <ListItemText primary={'Менеджеры'}/>\r\n        </NavLink>\r\n      </ListItem>\r\n      <ListItem button>\r\n        <NavLink to={'/admin/productsHistory'}>\r\n          <ListItemText primary={'История товаров'}/>\r\n        </NavLink>\r\n      </ListItem>\r\n      <ListItem button>\r\n        <NavLink to={'/admin/shops'}>\r\n          <ListItemText primary={'Магазины'}/>\r\n        </NavLink>\r\n      </ListItem>\r\n      <ListItem button>\r\n        <NavLink to={'/admin/suppliers'}>\r\n          <ListItemText primary={'Поставщики'}/>\r\n        </NavLink>\r\n      </ListItem>\r\n      <ListItem button>\r\n        <NavLink to={'/admin/categories'}>\r\n          <ListItemText primary={'Категории'}/>\r\n        </NavLink>\r\n      </ListItem>\r\n    </List>\r\n  )*/\r\n}","import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Menu} from \"../menu/menu\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  }\r\n}));\r\n\r\nexport const AdminLayout = props => {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={1}>\r\n          <Menu/>\r\n        </Grid>\r\n        <Grid container item xs={11}>\r\n          {props.page}\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  )\r\n}","import React, {useCallback, useState} from 'react';\nimport {BrowserRouter} from 'react-router-dom'\nimport {useRoutes} from \"./routes\";\nimport {AuthContext} from \"./contexts/auth.context\";\nimport {useCookies} from \"react-cookie\";\nimport {AdminLayout} from \"./components/layouts/admin.layout\";\n\nfunction App() {\n  const routes = useRoutes()\n  const [cookie] = useCookies()\n\n  const userId = cookie.userId\n  const userRole = 'Administrator'//cookie.userRole\n  const isAuth = !!userId\n\n  if(userRole === 'Administrator')\n    return (\n      <AuthContext.Provider value={{\n        userId, userRole, isAuth\n      }}>\n        <BrowserRouter>\n          <AdminLayout page={routes} />\n        </BrowserRouter>\n      </AuthContext.Provider>\n    )\n\n  if(userRole === 'Manager')\n    return (\n      <h1>Manager</h1>\n    )\n\n  return (\n    <h1>Нет авторизации</h1>\n  )\n\n}\n\nexport default App;\n","import React from \"react\";\r\nimport {Switch, Route, Redirect} from 'react-router-dom'\r\nimport {ImportPage} from \"./pages/admin/import.page\";\r\nimport {ProductsPage} from \"./pages/admin/products.page\";\r\nimport {ProductsHistory} from \"./pages/admin/products-history.page\";\r\nimport {SupplyProductForm} from \"./components/supply-product/form/supply-product-form\";\r\nimport {ShopsList} from \"./components/shop/shops-list\";\r\nimport {SuppliersList} from \"./components/supplier/suppliers-list\";\r\nimport { CategoriesList } from \"./components/categories/categories-list\";\r\nimport {SupplyProductsList} from \"./components/supply-product/list/supply-products-list\";\r\nimport {ManagerList} from \"./components/manager/manager-list\";\r\nimport {ArchiveSalesList} from \"./components/archive-sale/archive-sales-list\";\r\nimport {Product} from './features/product/components/product.page'\r\n\r\nexport const useRoutes = () => {\r\n\r\n  return (\r\n    <Switch>\r\n      <Route path='/admin/product' exact>\r\n        <Product/>\r\n      </Route>\r\n      <Route path='/admin/import' exact>\r\n        <ImportPage/>\r\n      </Route>\r\n      <Route path='/admin/supply' exact>\r\n        <SupplyProductForm/>\r\n      </Route>\r\n      <Route path='/admin/products' exact>\r\n        <ProductsPage/>\r\n      </Route>\r\n      <Route path='/admin/productsHistory' exact>\r\n        <ProductsHistory/>\r\n      </Route>\r\n      <Route path='/admin/managers' exact>\r\n        <ManagerList/>\r\n      </Route>\r\n      <Route path='/admin/shops' exact>\r\n        <ShopsList/>\r\n      </Route>\r\n      <Route path='/admin/suppliers' exact>\r\n        <SuppliersList/>\r\n      </Route>\r\n      <Route path='/admin/categories' exact>\r\n        <CategoriesList/>\r\n      </Route>\r\n      <Route path='/admin/supplyProductsList' exact>\r\n        <SupplyProductsList/>\r\n      </Route>\r\n      <Route path='/admin/archiveSales' exact>\r\n        <ArchiveSalesList/>\r\n      </Route>\r\n      <Redirect to='/admin/product'/>\r\n    </Switch>\r\n  )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}