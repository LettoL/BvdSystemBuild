{"version":3,"sources":["hooks/http.hook.js","const.js","components/import-form/product-item.js","components/import-form/form.js","pages/admin/import.page.js","models/product/product.store.js","models/filter/filter.store.js","components/admin-products/product-table-filters.js","components/admin-products/products-table.js","components/admin-products/products-table-paginator.js","components/admin-products/products.js","pages/admin/products.page.js","pages/admin/products-history.page.js","components/supply-product/form/supply-product-item.js","components/supply-product/form/supply-product-form.js","store/shop-store.js","components/shop/shop-create.js","components/shop/shops-list.js","store/supplier-store.js","components/supplier/supplier-create.js","components/supplier/suppliers-list.js","store/category-store.js","components/categories/category-create.js","components/categories/categories-list.js","store/supply-product-store.js","components/supply-product/list/supply-products-list.js","models/manager/manager.store.js","components/manager/manager-list.js","components/menu/menu.js","components/layouts/admin.layout.js","contexts/auth.context.js","App.js","routes.js","index.js"],"names":["useHttp","useState","loading","setLoading","error","setError","request","useCallback","url","a","method","body","headers","JSON","stringify","fetch","response","json","data","ok","Error","errors","message","clearError","Constants","ProductItem","props","classes","useStyles","product","editProduct","changeHandler","event","newProduct","target","name","value","Grid","container","ListItem","key","number","item","xs","Typography","variant","TextField","title","label","size","onChange","className","maxWidth","code","amount","price","Divider","component","makeStyles","theme","width","padding","Form","shops","suppliers","categories","saveForm","success","productsText","shop","supplier","supplyType","category","form","setForm","products","setProducts","disabled","setDisabled","changeFormHandler","productIndex","findIndex","x","slice","FormControl","formControl","InputLabel","id","Select","labelId","MenuItem","map","multiline","rows","fullWidth","Button","color","onClick","length","split","replace","sum","productsForSave","CircularProgress","List","margin","spacing","minWidth","API","ImportPage","setShops","setCategories","setSuppliers","saveSuccess","setSaveSuccess","getShops","getCategories","getSuppliers","useEffect","API_PRODUCTS","setShopFilter","createEvent","setCategoryFilter","setTitleFilter","fetchProductsFx","createEffect","handler","res","$products","createStore","on","doneData","state","$filterShopId","_","shopId","$filterCategoryId","categoryId","$filterTitle","$filteredProducts","combine","filter","toLowerCase","includes","API_SHOPS","API_CATEGORIES","fetchShopsFx","fetchCategoriesFx","$shopsFilter","$categoriesFilter","ProductTableFilters","useStore","ProductsTable","page","rowsPerPage","handleOpenDialog","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","row","bind","ProductsTablePaginator","handleChangePage","handleChangeRowsPerPage","TablePagination","rowsPerPageOptions","count","onChangePage","onChangeRowsPerPage","Products","setPage","setRowsPerPage","openDialog","setOpenDialog","setDetailProduct","separator","newPage","Dialog","open","onClose","DialogTitle","DialogContent","autoFocus","type","ProductsPage","ProductsHistory","setShop","startDate","setStartDate","endDate","setEndDate","getProducts","date","Date","dateTime","defaultValue","textField","InputLabelProps","shrink","utils","DateFnsUtils","disableToolbar","format","KeyboardButtonProps","toLocaleDateString","productTitle","supplierName","shopTitle","selectEmpty","marginTop","SupplyProductItem","index","supplyProduct","productId","supplierId","procurementCost","changeProduct","SupplyProductForm","supplyProducts","setSupplyProducts","changeItemState","console","log","saveShopFx","ShopCreate","setTitle","ShopsList","shopsData","API_SUPPLIERS","fetchSuppliersFx","createSupplierFx","phone","email","SupplierCreate","setName","setPhone","setEmail","SuppliersList","suppliersData","createCategoryFx","CategoryCreate","CategoriesList","categoriesData","API_SUPPLYPRODUCTS","fetchSupplyProductsFx","SupplyProductsList","minProcurementCost","setMinProcurementCost","supplyProductId","shopAmount","suppliedAmount","API_MANAGERS","fetchManagersFx","$managers","managers","ManagerList","Menu","href","button","to","ListItemText","primary","root","flexGrow","AdminLayout","AuthContext","createContext","userId","userRole","isAuth","App","routes","path","exact","useCookies","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b2ad9942.chunk.js","sourcesContent":["import {useCallback, useState} from \"react\";\r\n\r\nexport const useHttp = () => {\r\n  const [loading, setLoading] = useState(false)\r\n  const [error, setError] = useState(null)\r\n  \r\n  const request = useCallback(async (url, method = 'GET', body = null, headers = {}) => {\r\n    setLoading(true)\r\n    try {\r\n      if(body) {\r\n        body = JSON.stringify(body)\r\n        headers['Content-Type'] = 'application/json'\r\n      }\r\n      \r\n      const response = await fetch(url, {method, body, headers})\r\n      const data = await response.json()\r\n      \r\n      if(!response.ok) {\r\n        throw new Error(data.errors[0] || 'Что-то не так')\r\n      }\r\n      \r\n      setLoading(false)\r\n      \r\n      return data;\r\n    } \r\n    catch (e) {\r\n      setLoading(false)\r\n      setError(e.message)\r\n      throw e\r\n    }\r\n  }, [])\r\n  \r\n  const clearError = useCallback(() => setError(null), [])\r\n  return {loading, request, error, clearError}\r\n}","export const Constants = {\r\n  API: 'http://68.183.78.15/'\r\n  //API: 'http://localhost:5000/'\r\n}","import React from \"react\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nexport const ProductItem = props => {\r\n  const classes = useStyles()\r\n  const {product, editProduct} = props\r\n\r\n  const changeHandler = event => {\r\n    const newProduct = {...product, [event.target.name]: [event.target.value]}\r\n    editProduct(newProduct)\r\n  }\r\n\r\n  return (\r\n    <Grid container>\r\n      <ListItem key={product.number}>\r\n        <Grid item xs={1}>\r\n          <Typography variant='h6'>{product.number}</Typography>\r\n        </Grid>\r\n        <Grid item container xs={11}>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              value={product.title}\r\n              variant='outlined'\r\n              label='Название'\r\n              size='small'\r\n              name='title'\r\n              onChange={changeHandler}\r\n              className={classes.maxWidth}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <TextField\r\n              value={product.code}\r\n              variant='outlined'\r\n              label='Артикул'\r\n              size='small'\r\n              name='code'\r\n              onChange={changeHandler}\r\n              className={classes.maxWidth}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <TextField\r\n              className={classes.maxWidth}\r\n              value={product.amount}\r\n              variant='outlined'\r\n              label='Количество'\r\n              size='small'\r\n              name='amount'\r\n              onChange={changeHandler}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <TextField\r\n              value={product.price}\r\n              variant='outlined'\r\n              label='Закупочная стоимость'\r\n              size='small'\r\n              name='price'\r\n              onChange={changeHandler}\r\n              className={classes.maxWidth}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </ListItem>\r\n      <Divider variant='inset' component='li'/>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  maxWidth: {\r\n    width: '100%',\r\n    padding: 5\r\n  }\r\n}))","import React, {Fragment, useState} from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {ProductItem} from \"./product-item\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nexport const Form = (props) => {\r\n  const classes = useStyles()\r\n  const {shops, suppliers, categories, saveForm, loading, error, success} = props\r\n\r\n  const [form, setForm] = useState({\r\n    productsText: '',\r\n    shop: null,\r\n    supplier: null,\r\n    supplyType: null,\r\n    category: null\r\n  })\r\n  const [products, setProducts] = useState([])\r\n  const [disabled, setDisabled] = useState(false)\r\n\r\n  const changeFormHandler = event => {\r\n    setForm({...form, [event.target.name]: event.target.value})\r\n  }\r\n\r\n  const productsTextHandle = () => {\r\n    if(form.productsText.length <= 0)\r\n      return\r\n\r\n    const productsText = form.productsText.split('\\n');\r\n    const productsProperties = productsText.map(x => x.split('\\t'));\r\n\r\n    const products = productsProperties.map(x => {\r\n      return {\r\n        number: +(x[0].replace(',', '.').replace(/\\s+/g,'')),\r\n        code: x[1],\r\n        title: x[2],\r\n        amount: +(x[3].replace(',', '.').replace(/\\s+/g,'')),\r\n        price: +(x[5].replace(',', '.').replace(/\\s+/g,'')),\r\n        sum: +(x[6].replace(',', '.').replace(/\\s+/g,''))\r\n      }\r\n    });\r\n\r\n    setProducts(products)\r\n  }\r\n\r\n  const editProduct = (product) => {\r\n    const productIndex = products.findIndex(x => x.number === product.number)\r\n    setProducts([...products.slice(0, productIndex), product, ...products.slice(productIndex + 1)])\r\n  }\r\n\r\n  const saveHandler = () => {\r\n    setDisabled(true)\r\n\r\n    const productsForSave = products.map(product => ({\r\n      ...product, ['price']: product.price + ''\r\n    }))\r\n\r\n    saveForm({...form, products: productsForSave})\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Grid item xs={4}>\r\n        <FormControl className={classes.formControl}>\r\n          <InputLabel id='shop-select'>Магазин</InputLabel>\r\n          <Select\r\n            labelId='shop-select'\r\n            value={form.shop}\r\n            onChange={changeFormHandler}\r\n            name='shop'\r\n          >\r\n            <MenuItem value={0}>Выбрать магазин</MenuItem>\r\n            {shops.map(shop => (\r\n              <MenuItem key={shop.id} value={shop.id}>{shop.title}</MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n        <FormControl className={classes.formControl}>\r\n          <InputLabel id='shop-select'>Поставщика</InputLabel>\r\n          <Select\r\n            labelId='shop-select'\r\n            value={form.supplier}\r\n            onChange={changeFormHandler}\r\n            name='supplier'\r\n          >\r\n            <MenuItem value={0}>Выбрать поставщика</MenuItem>\r\n            {suppliers.map(supplier => (\r\n              <MenuItem key={supplier.id} value={supplier.id}>{supplier.name}</MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n        <FormControl className={classes.formControl}>\r\n          <InputLabel id='shop-select'>Тип товара</InputLabel>\r\n          <Select\r\n            labelId='shop-select'\r\n            value={form.supplyType}\r\n            onChange={changeFormHandler}\r\n            name='supplyType'\r\n          >\r\n            <MenuItem value={0}>Выбрать тип товара</MenuItem>\r\n            <MenuItem value={1}>Оплаченный товар</MenuItem>\r\n            <MenuItem value={2}>Товар под реализацию</MenuItem>\r\n            <MenuItem value={3}>Отсроченый платёж</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n        <FormControl className={classes.formControl}>\r\n          <InputLabel id='shop-select'>Категория</InputLabel>\r\n          <Select\r\n            labelId='shop-select'\r\n            value={form.category}\r\n            onChange={changeFormHandler}\r\n            name='category'\r\n          >\r\n            <MenuItem value={0}>Выбрать категорию</MenuItem>\r\n            {categories.map(category => (\r\n              <MenuItem key={category.id} value={category.id}>{category.title}</MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n        <br/>\r\n        <TextField\r\n          label=\"Внесите товары\"\r\n          multiline\r\n          rows={10}\r\n          variant=\"outlined\"\r\n          value={form.productsText}\r\n          onChange={changeFormHandler}\r\n          name=\"productsText\"\r\n          fullWidth\r\n        />\r\n        <br/>\r\n        <Button\r\n          variant=\"contained\"\r\n          color='primary'\r\n          onClick={productsTextHandle}\r\n        >\r\n          Обработать\r\n        </Button>\r\n        <br/>\r\n        <br/>\r\n        <br/>\r\n        <br/>\r\n        <br/>\r\n        <Button\r\n          variant='contained'\r\n          color='primary'\r\n          onClick={saveHandler}\r\n          disabled={disabled}\r\n        >\r\n          Сохранить\r\n        </Button>\r\n        <br/>\r\n        <br/>\r\n        {loading && <CircularProgress/>}\r\n        {error && <p>Ошибка: {error}</p>}\r\n        {success && <p>Успех!</p>}\r\n      </Grid>\r\n      <Grid item xs={7}>\r\n        <List>\r\n          {products.map(product => (\r\n            <ProductItem\r\n              key={product.number}\r\n              product={product}\r\n              editProduct={editProduct}\r\n            />\r\n          ))}\r\n        </List>\r\n      </Grid>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  }\r\n}));","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport {useHttp} from \"../../hooks/http.hook\";\r\nimport {Constants} from \"../../const\";\r\nimport {Form} from \"../../components/import-form/form\";\r\n\r\nconst API = Constants.API\r\n\r\nexport const ImportPage = () => {\r\n  const {request, loading, error} = useHttp()\r\n\r\n  const [shops, setShops] = useState([])\r\n  const [categories, setCategories] = useState([])\r\n  const [suppliers, setSuppliers] = useState([])\r\n  const [saveSuccess, setSaveSuccess] = useState(false)\r\n\r\n  const getShops = useCallback(async () => {\r\n    try {\r\n      const data = await request(API + 'api/shops')\r\n      setShops(data)\r\n    }\r\n    catch (e) {}\r\n  }, [request])\r\n\r\n  const getCategories = useCallback(async () => {\r\n    try {\r\n      const data = await request(API + 'api/categories')\r\n      setCategories(data)\r\n    }\r\n    catch (e) {}\r\n  }, [request])\r\n\r\n  const getSuppliers = useCallback(async () => {\r\n    try {\r\n      const data = await request(API + 'api/suppliers')\r\n      setSuppliers(data)\r\n    }\r\n    catch (e) {}\r\n  }, [request])\r\n\r\n  useEffect(() => {\r\n    getShops()\r\n    getCategories()\r\n    getSuppliers()\r\n  }, [getShops, getCategories, getSuppliers])\r\n\r\n  const saveForm = async (data) => {\r\n    try {\r\n      const response = await request(API + 'api/supplyProducts/import', 'POST', {...data})\r\n      setSaveSuccess(true)\r\n    }\r\n    catch (e) { }\r\n  }\r\n  \r\n  return (\r\n    <Form\r\n      shops={shops}\r\n      suppliers={suppliers}\r\n      categories={categories}\r\n      saveForm={saveForm}\r\n      loading={loading}\r\n      error={error}\r\n      success={saveSuccess}\r\n    />\r\n  )\r\n}","import {Constants} from \"../../const\";\r\nimport {combine, createEffect, createEvent, createStore} from \"effector\";\r\n\r\nconst API_URL = Constants.API\r\nconst API_PRODUCTS = API_URL + 'api/products'\r\n\r\nexport const setShopFilter = createEvent()\r\nexport const setCategoryFilter = createEvent()\r\nexport const setTitleFilter = createEvent()\r\n\r\nexport const fetchProductsFx = createEffect({\r\n  async handler() {\r\n    const res = await fetch(API_PRODUCTS)\r\n    return res.json()\r\n  }\r\n})\r\n\r\nexport const $products = createStore([])\r\n  .on(fetchProductsFx.doneData, (state, products) => [...products])\r\n\r\nexport const $filterShopId = createStore(0)\r\n  .on(setShopFilter, (_, shopId) => shopId)\r\n\r\nexport const $filterCategoryId = createStore(0)\r\n  .on(setCategoryFilter, (_, categoryId) => categoryId)\r\n\r\nexport const $filterTitle = createStore('')\r\n  .on(setTitleFilter, (_, title) => title)\r\n\r\nexport const $filteredProducts = combine(\r\n  $products,\r\n  $filterShopId,\r\n  $filterCategoryId,\r\n  $filterTitle,\r\n  (products, shopId, categoryId, title) => products\r\n    .filter(product => shopId !== 0\r\n      ? product.shopId === shopId\r\n      : true)\r\n    .filter(product => categoryId !== 0\r\n      ? product.categoryId === categoryId\r\n      : true)\r\n    .filter(product => title !== ''\r\n      ? product.title.toLowerCase().includes(title.toLowerCase())\r\n      : true)\r\n)","import {Constants} from \"../../const\";\r\nimport {createEffect, createStore} from \"effector\";\r\n\r\nconst API_URL = Constants.API\r\nconst API_SHOPS = API_URL + 'api/shops'\r\nconst API_CATEGORIES = API_URL + 'api/categories'\r\n\r\nexport const fetchShopsFx = createEffect({\r\n  async handler() {\r\n    const res = await fetch(API_SHOPS)\r\n    return res.json()\r\n  }\r\n})\r\n\r\nexport const fetchCategoriesFx = createEffect({\r\n  async handler() {\r\n    const res = await fetch(API_CATEGORIES)\r\n    return res.json()\r\n  }\r\n})\r\n\r\nexport const $shopsFilter = createStore([])\r\n  .on(fetchShopsFx.doneData, (_, shops) => [...shops])\r\n\r\nexport const $categoriesFilter = createStore([])\r\n  .on(fetchCategoriesFx.doneData, (_, categories) => [...categories])","import React, {useEffect} from \"react\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {useStore} from \"effector-react\";\r\nimport {\r\n  $filterCategoryId,\r\n  $filterShopId,\r\n  setCategoryFilter,\r\n  setShopFilter,\r\n  setTitleFilter\r\n} from \"../../models/product/product.store\";\r\nimport {$categoriesFilter, $shopsFilter, fetchCategoriesFx, fetchShopsFx} from \"../../models/filter/filter.store\";\r\n\r\nexport const ProductTableFilters = () => {\r\n  const classes = useStyles()\r\n\r\n  const shopId = useStore($filterShopId)\r\n  const categoryId = useStore($filterCategoryId)\r\n  const shops = useStore($shopsFilter)\r\n  const categories = useStore($categoriesFilter)\r\n\r\n  const handleChangeShop = (event) => {\r\n    setShopFilter(event.target.value)\r\n  };\r\n\r\n  const handleChangeCategory = (event) => {\r\n    setCategoryFilter(event.target.value)\r\n  };\r\n\r\n  const handleChangeTitle = (event) => {\r\n    setTitleFilter(event.target.value)\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchCategoriesFx()\r\n    fetchShopsFx()\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel id=\"demo-simple-select-label\">Магазин</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-label\"\r\n          id=\"demo-simple-select\"\r\n          value={shopId}\r\n          onChange={handleChangeShop}\r\n        >\r\n          <MenuItem value={0}>Выбрать магазин</MenuItem>\r\n          {shops.map(shop => (\r\n            <MenuItem key={shop.id} value={shop.id}>{shop.title}</MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel id=\"demo-simple-select-label\">Категория</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-label\"\r\n          id=\"demo-simple-select\"\r\n          value={categoryId}\r\n          onChange={handleChangeCategory}\r\n        >\r\n          <MenuItem value={0}>Выбрать категорию</MenuItem>\r\n          {categories.map(category => (\r\n            <MenuItem key={category.id} value={category.id}>{category.title}</MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <TextField\r\n          label=\"Поиск по названию\"\r\n          onChange={handleChangeTitle}\r\n        />\r\n      </FormControl>\r\n    </>\r\n  )\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  }\r\n}));","import React from \"react\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\n\r\nexport const ProductsTable = props => {\r\n  const {products, page, rowsPerPage, handleOpenDialog} = props\r\n\r\n  return (\r\n    <TableContainer>\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Артикул</TableCell>\r\n            <TableCell>Название</TableCell>\r\n            <TableCell>Количество</TableCell>\r\n            <TableCell>Цена</TableCell>\r\n            <TableCell>Магазин</TableCell>\r\n            <TableCell>Категория</TableCell>\r\n            <TableCell>Действия</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {products\r\n          .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n          .map(row => (\r\n            <TableRow key={row.id}>\r\n              <TableCell>{row.code}</TableCell>\r\n              <TableCell>{row.title}</TableCell>\r\n              <TableCell>{row.amount}</TableCell>\r\n              <TableCell>{row.price}</TableCell>\r\n              <TableCell>{row.shop}</TableCell>\r\n              <TableCell>{row.category}</TableCell>\r\n              <TableCell>\r\n                <Button variant=\"contained\" onClick={handleOpenDialog.bind(this, row)}>\r\n                  Detail\r\n                </Button>\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  )\r\n}","import React from \"react\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\n\r\nexport const ProductsTablePaginator = props => {\r\n  const {products, rowsPerPage, page, handleChangePage, handleChangeRowsPerPage} = props\r\n\r\n  return (\r\n    <TablePagination\r\n      rowsPerPageOptions={[10, 25, 50, 100]}\r\n      component='div'\r\n      count={products.length}\r\n      rowsPerPage={rowsPerPage}\r\n      page={page}\r\n      onChangePage={handleChangePage}\r\n      onChangeRowsPerPage={handleChangeRowsPerPage}\r\n    />\r\n  )\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport {ProductTableFilters} from \"./product-table-filters\";\r\nimport {ProductsTable} from \"./products-table\";\r\nimport {ProductsTablePaginator} from \"./products-table-paginator\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport {\r\n  $filteredProducts,\r\n  fetchProductsFx\r\n} from \"../../models/product/product.store\";\r\nimport {useStore} from \"effector-react\";\r\nimport {CSVLink} from \"react-csv\";\r\n\r\nexport const Products = () => {\r\n  const classes = useStyles()\r\n\r\n  const products = useStore($filteredProducts)\r\n\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n\r\n  const [openDialog, setOpenDialog] = useState(false)\r\n  const [detailProduct, setDetailProduct] = useState(null)\r\n\r\n  const handleOpenDialog = (product) => {\r\n    setDetailProduct(product)\r\n    setOpenDialog(true)\r\n  }\r\n\r\n  const handleCloseDialog = () => {\r\n    setOpenDialog(false)\r\n  }\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchProductsFx()\r\n  }, [])\r\n\r\n  const headers = [\r\n    {label: \"Артикул\", key: 'code'},\r\n    {label: \"Наименование\", key: 'name'},\r\n    {label: \"Кол-во\", key: 'amount'},\r\n    {label: \"Цена\", key: 'price'},\r\n    {label: \"Магазин\", key: 'shop'},\r\n    {label: \"Категория\", key: 'category'}\r\n  ]\r\n\r\n  const data = products.map(product => (\r\n    {\r\n      code: product.code,\r\n      name: product.name,\r\n      amount: product.amount,\r\n      price: product.price,\r\n      shop: product.shop,\r\n      category: product.category\r\n    }\r\n  ));\r\n\r\n  return (\r\n    <>\r\n      <CSVLink data={data} headers={headers} separator={';'}>\r\n        Download me\r\n      </CSVLink>;\r\n      <ProductTableFilters/>\r\n      <ProductsTable\r\n        products={products}\r\n        page={page}\r\n        rowsPerPage={rowsPerPage}\r\n        handleOpenDialog={handleOpenDialog}\r\n      />\r\n      <ProductsTablePaginator\r\n        products={products}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        handleChangePage={handleChangePage}\r\n        handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n      />\r\n      <Dialog open={openDialog} onClose={handleCloseDialog}>\r\n        <DialogTitle>Product</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            label='Название'\r\n            type='text'\r\n            margin='dense'\r\n          />\r\n          <TextField\r\n            label='Артикул'\r\n            type='text'\r\n            margin='dense'\r\n          />\r\n          <TextField\r\n            label='Стоимость для продажи'\r\n            type='number'\r\n            margin='dense'\r\n          />\r\n          <FormControl className={classes.formControl}>\r\n            <InputLabel id='category-select'>Категория</InputLabel>\r\n            <Select\r\n              labelId='category-select'\r\n            >\r\n              <MenuItem>1111</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n          <FormControl className={classes.formControl}>\r\n            <InputLabel id='shop-select'>Магазин</InputLabel>\r\n            <Select\r\n              labelId='shop-select'\r\n            >\r\n              <MenuItem>1111</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </>\r\n  )\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  }\r\n}));","import React, {useCallback, useEffect, useState} from 'react'\r\nimport {useHttp} from \"../../hooks/http.hook\";\r\nimport {Constants} from \"../../const\";\r\nimport {Products} from \"../../components/admin-products/products\";\r\nimport {useStore} from \"effector-react\";\r\nimport {$filteredProducts, fetchProductsFx} from \"../../models/product/product.store\";\r\n\r\nconst API = Constants.API\r\n\r\nexport const ProductsPage = () => {\r\n  const {loading, request} = useHttp()\r\n  const products = useStore($filteredProducts)\r\n\r\n  useEffect(() => {\r\n    fetchProductsFx()\r\n  }, [])\r\n\r\n  if(loading)\r\n    return <div>Загрузка...</div>\r\n  else\r\n    return <Products/>\r\n}","import React, {useCallback, useEffect, useState} from 'react'\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {useHttp} from \"../../hooks/http.hook\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {Constants} from \"../../const\";\r\nimport {KeyboardDatePicker, MuiPickersUtilsProvider} from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\n\r\nconst API = Constants.API\r\n\r\nexport const ProductsHistory = () => {\r\n  const classes = useStyles()\r\n  const [products, setProducts] = useState([])\r\n  const [shops, setShops] = useState([])\r\n  const [shop, setShop] = useState(0)\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const {loading, request} = useHttp()\r\n  const [startDate, setStartDate] = useState(null)\r\n  const [endDate, setEndDate] = useState(null)\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeShop = (event) => {\r\n    setShop(event.target.value);\r\n  };\r\n\r\n  const getProducts = useCallback(async () => {\r\n    try {\r\n      const data = await request(API + 'api/productsHistory')\r\n      setProducts(data.map(product => (\r\n        {...product, date: new Date(product.dateTime)}\r\n      )))\r\n    }\r\n    catch (e) {}\r\n  }, [request])\r\n\r\n  const getShops = useCallback(async () => {\r\n    try {\r\n      const data = await request(API + 'api/shops')\r\n      setShops(data)\r\n    }\r\n    catch (e) {}\r\n  }, [request])\r\n\r\n  useEffect(() => {\r\n    getProducts()\r\n    getShops()\r\n  }, [getProducts, getShops])\r\n\r\n  return(\r\n    <>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel id=\"demo-simple-select-label\">Магазин</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-label\"\r\n          id=\"demo-simple-select\"\r\n          value={shop}\r\n          onChange={handleChangeShop}\r\n        >\r\n          <MenuItem value={0}>Выбрать магазин</MenuItem>\r\n          {shops.map(shop => (\r\n            <MenuItem key={shop.id} value={shop.id}>{shop.title}</MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <TextField\r\n          label=\"Дата с\"\r\n          type=\"date\"\r\n          defaultValue=\"\"\r\n          className={classes.textField}\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n          onChange={event => setStartDate(new Date(event.target.value))}\r\n        />\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n          <KeyboardDatePicker\r\n            disableToolbar\r\n            variant='inline'\r\n            format='MM/dd/yyyy'\r\n            margin='normal'\r\n            label='Дата с'\r\n            value={startDate}\r\n            onChange={event => setStartDate(event)}\r\n            KeyboardButtonProps={{\r\n              'aria-label': 'change date',\r\n            }}\r\n          />\r\n        </MuiPickersUtilsProvider>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <TextField\r\n          label=\"Дата по\"\r\n          type=\"date\"\r\n          defaultValue=\"\"\r\n          className={classes.textField}\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n          onChange={event => setEndDate(new Date(event.target.value))}\r\n        />\r\n      </FormControl>\r\n      <TableContainer>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Дата</TableCell>\r\n              <TableCell>Товар</TableCell>\r\n              <TableCell>Количество</TableCell>\r\n              <TableCell>Поставщик</TableCell>\r\n              <TableCell>Тип</TableCell>\r\n              <TableCell>Магазин</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {products\r\n              .filter(row => shop !== 0\r\n                ? row.shopId === shop\r\n                : true)\r\n              .filter(row => startDate\r\n                ? row.date >= startDate\r\n                : true)\r\n              .filter(row => endDate\r\n                ? row.date <= endDate\r\n                : true)\r\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n              .map(row => (\r\n              <TableRow key={row.id}>\r\n                <TableCell>{row.date.toLocaleDateString()}</TableCell>\r\n                <TableCell>{row.productTitle}</TableCell>\r\n                <TableCell>{row.amount}</TableCell>\r\n                <TableCell>{row.supplierName}</TableCell>\r\n                <TableCell>{row.type}</TableCell>\r\n                <TableCell>{row.shopTitle}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 50, 100]}\r\n        component='div'\r\n        count={products\r\n          .filter(row => shop !== 0\r\n            ? row.shopId === shop\r\n            : true)\r\n          .filter(row => startDate\r\n            ? row.date >= startDate\r\n            : true)\r\n          .filter(row => endDate\r\n            ? row.date <= endDate\r\n            : true)\r\n          .length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));","import React from \"react\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nexport const SupplyProductItem = props => {\r\n  const classes = useStyles()\r\n\r\n  const {index, changeFormHandler} = props\r\n  const {productId, amount, shopId, supplierId, procurementCost} = props.supplyProduct\r\n\r\n  const products = [{id: 1, title: 'product1'}, {id: 2, title: 'product2'}]\r\n  const shops = [{id: 2, title: 'shop1'}]\r\n  const suppliers = [{id: 1, title: 'supplier1'}]\r\n\r\n  const changeProduct = event => {\r\n    changeFormHandler(index, event)\r\n  }\r\n\r\n  return(\r\n    <>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel id='product-select'>Товар</InputLabel>\r\n        <Select\r\n          labelId='product-select'\r\n          name='productId'\r\n          value={productId}\r\n          onChange={changeProduct}\r\n        >\r\n          <MenuItem value={0}>Выбрать товар</MenuItem>\r\n          {products.map(product => (\r\n            <MenuItem key={product.id} value={product.id}>{product.title}</MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <TextField\r\n          label='Количество'\r\n          value={amount}\r\n          onChange={changeProduct}\r\n          name='amount'\r\n        />\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel id='shop-select'>Магазин</InputLabel>\r\n        <Select\r\n          labelId='shop-select'\r\n          name='shopId'\r\n          value={shopId}\r\n          onChange={changeProduct}\r\n        >\r\n          <MenuItem value={0}>Выбрать магазин</MenuItem>\r\n          {shops.map(shop => (\r\n            <MenuItem key={shop.id} value={shop.id}>{shop.title}</MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel id='supplier-select'>Поставщик</InputLabel>\r\n        <Select\r\n          labelId='supplier-select'\r\n          name='supplierId'\r\n          value={supplierId}\r\n          onChange={changeProduct}\r\n        >\r\n          <MenuItem value={0}>Выбрать поставшика</MenuItem>\r\n          {suppliers.map(supplier => (\r\n            <MenuItem key={supplier.id} value={supplier.id}>{supplier.title}</MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <TextField\r\n          label='Закупочная стоимость'\r\n          value={procurementCost}\r\n          onChange={changeProduct}\r\n          name='procurementCost'\r\n        />\r\n      </FormControl>\r\n    </>\r\n  )\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  }\r\n}));","import React, {useState} from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport {SupplyProductItem} from \"./supply-product-item\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nexport const SupplyProductForm = () => {\r\n  const classes = useStyles()\r\n\r\n  const [supplyProducts, setSupplyProducts] = useState([\r\n    {\r\n      productId: 0,\r\n      amount: 0,\r\n      shopId: 0,\r\n      supplierId: 0,\r\n      procurementCost: 0\r\n    }\r\n  ])\r\n\r\n  const changeFormHandler = (index, event) => {\r\n    const supplyProduct = supplyProducts[index]\r\n    const changeItemState = {...supplyProduct, [event.target.name]: event.target.value}\r\n\r\n    setSupplyProducts([\r\n      ...supplyProducts.slice(0, index),\r\n      changeItemState,\r\n      ...supplyProducts.slice(index + 1)\r\n    ])\r\n  }\r\n\r\n  const addSupplyProduct = () => {\r\n    setSupplyProducts([...supplyProducts, {\r\n      productId: 0,\r\n      amount: 0,\r\n      shopId: 0,\r\n      supplierId: 0,\r\n      procurementCost: 0\r\n    }])\r\n  }\r\n\r\n  const saveForm = () => {\r\n    console.log(supplyProducts)\r\n  }\r\n\r\n  return(\r\n    <>\r\n      {supplyProducts.map((supplyProduct, index) => (\r\n        <SupplyProductItem\r\n          key={index}\r\n          supplyProduct={supplyProduct}\r\n          changeFormHandler={changeFormHandler}\r\n          index={index}\r\n        />\r\n      ))}\r\n      <Button\r\n        onClick={addSupplyProduct}\r\n      >\r\n        Добавить товар\r\n      </Button>\r\n      <Button\r\n        onClick={saveForm}\r\n      >\r\n        Сохранить\r\n      </Button>\r\n    </>\r\n  )\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  }\r\n}));","import {createEffect, createStore} from \"effector\";\r\nimport {Constants} from \"../const\";\r\n\r\nconst API_URL = Constants.API\r\nconst API_SHOPS = API_URL + 'api/shops'\r\n\r\nexport const fetchShopsFx = createEffect({\r\n  async handler() {\r\n    const res = await fetch(API_SHOPS)\r\n    return res.json()\r\n  }\r\n})\r\n\r\nexport const saveShopFx = createEffect({\r\n  async handler(title) {\r\n    const data = {title}\r\n\r\n    const res = await fetch(API_SHOPS, {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      method: 'POST',\r\n      body: JSON.stringify(data)\r\n    })\r\n\r\n    return res.json()\r\n  }\r\n})\r\n\r\nexport const shops = createStore([])\r\n  .on(fetchShopsFx.doneData, (state, shops) => [...shops])\r\n  .on(saveShopFx.doneData, (state, shop) => [...state, shop])","import React, {useState} from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {saveShopFx} from \"../../store/shop-store\";\r\n\r\nexport const ShopCreate = () => {\r\n\r\n  const [title, setTitle] = useState('')\r\n  const [disabled, setDisabled] = useState(false)\r\n\r\n  const saveHandler = () => {\r\n    setDisabled(true)\r\n    saveShopFx(title)\r\n\r\n    setTitle('')\r\n    setDisabled(false)\r\n  }\r\n\r\n  return(\r\n    <>\r\n      <TextField\r\n        label='Название'\r\n        value={title}\r\n        onChange={event => setTitle(event.target.value)}\r\n        name='title'\r\n      />\r\n      <Button\r\n        onClick={saveHandler}\r\n        variant='contained'\r\n        color='primary'\r\n        disabled={disabled}\r\n      >\r\n        Сохранить\r\n      </Button>\r\n    </>\r\n  )\r\n}","import React, {useEffect} from \"react\";\r\nimport {fetchShopsFx, shops} from \"../../store/shop-store\";\r\nimport {useStore} from \"effector-react\";\r\nimport {ShopCreate} from \"./shop-create\";\r\n\r\nexport const ShopsList = () => {\r\n\r\n  useEffect(() => {\r\n    fetchShopsFx()\r\n  }, [])\r\n\r\n  const shopsData = useStore(shops)\r\n\r\n  return(\r\n    <>\r\n      <ShopCreate/>\r\n      <ul>\r\n        {shopsData.map(shop => (\r\n          <li>{shop.id} / {shop.title}</li>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  )\r\n}","import {Constants} from \"../const\";\r\nimport {createEffect, createStore} from \"effector\";\r\n\r\nconst API_URL = Constants.API\r\nconst API_SUPPLIERS = API_URL + 'api/suppliers'\r\n\r\nexport const fetchSuppliersFx = createEffect({\r\n  async handler() {\r\n    const res = await fetch(API_SUPPLIERS)\r\n    return res.json()\r\n  }\r\n})\r\n\r\nexport const createSupplierFx = createEffect({\r\n  async handler(name, phone, email) {\r\n    const data = {name, phone, email}\r\n\r\n    const res = await fetch(API_SUPPLIERS, {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      method: 'POST',\r\n      body: JSON.stringify(data)\r\n    })\r\n\r\n    return res.json()\r\n  }\r\n})\r\n\r\nexport const suppliers = createStore([])\r\n  .on(fetchSuppliersFx.doneData, (state, suppliers) => [...suppliers])\r\n  .on(createSupplierFx.doneData, (state, supplier) => [...state, supplier])","import React, {useState} from \"react\";\r\nimport {createSupplierFx} from \"../../store/supplier-store\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nexport const SupplierCreate = () => {\r\n\r\n  const [name, setName] = useState('')\r\n  const [phone, setPhone] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [disabled, setDisabled] = useState(false)\r\n\r\n  const saveHandler = () => {\r\n    setDisabled(true)\r\n    createSupplierFx(name, phone, email)\r\n\r\n    setName('')\r\n    setDisabled(false)\r\n  }\r\n\r\n  return(\r\n    <>\r\n      <TextField\r\n        label='Имя поставщика'\r\n        value={name}\r\n        onChange={event => setName(event.target.value)}\r\n        name='name'\r\n      />\r\n      <TextField\r\n        label='Телефон'\r\n        value={phone}\r\n        onChange={event => setPhone(event.target.value)}\r\n        name='phone'\r\n      />\r\n      <TextField\r\n        label='Почта'\r\n        value={email}\r\n        onChange={event => setEmail(event.target.value)}\r\n        name='email'\r\n      />\r\n      <Button\r\n       onClick={saveHandler}\r\n       variant='contained'\r\n       color='primary'\r\n       disabled={disabled}\r\n      >\r\n        Сохранить\r\n      </Button>\r\n    </>\r\n  )\r\n}","import React, {useEffect} from \"react\";\r\nimport {fetchSuppliersFx, suppliers} from \"../../store/supplier-store\";\r\nimport {useStore} from \"effector-react\";\r\nimport {SupplierCreate} from \"./supplier-create\";\r\n\r\nexport const SuppliersList = () => {\r\n\r\n  useEffect(() => {\r\n    fetchSuppliersFx()\r\n  }, [])\r\n\r\n  const suppliersData = useStore(suppliers)\r\n\r\n  return(\r\n    <>\r\n      <SupplierCreate/>\r\n      <ul>\r\n        {suppliersData.map(supplier => (\r\n          <li>{supplier.id} / {supplier.name}</li>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  )\r\n}","import {Constants} from \"../const\";\r\nimport {createEffect, createStore} from \"effector\";\r\n\r\nconst API_URL = Constants.API\r\nconst API_CATEGORIES = API_URL + 'api/categories'\r\n\r\nexport const fetchCategoriesFx = createEffect({\r\n  async handler() {\r\n    const res = await fetch(API_CATEGORIES)\r\n    return res.json()\r\n  }\r\n})\r\n\r\nexport const createCategoryFx = createEffect({\r\n  async handler(title) {\r\n    const data = {title}\r\n\r\n    const res = await fetch(API_CATEGORIES, {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      method: 'POST',\r\n      body: JSON.stringify(data)\r\n    })\r\n\r\n    return res.json()\r\n  }\r\n})\r\n\r\nexport const categories = createStore([])\r\n  .on(fetchCategoriesFx.doneData, (state, categories) => [...categories])\r\n  .on(createCategoryFx.doneData, (state, category) => [...state, category])","import React, {useState} from \"react\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { createCategoryFx } from \"../../store/category-store\";\r\n\r\nexport const CategoryCreate = () => {\r\n\r\n  const [title, setTitle] = useState('')\r\n  const [disabled, setDisabled] = useState(false)\r\n\r\n  const saveHandler = () => {\r\n    setDisabled(true);\r\n    createCategoryFx(title);\r\n\r\n    setTitle('');\r\n    setDisabled(false);\r\n  }\r\n\r\n  return(\r\n    <>\r\n      <TextField\r\n        label='Название'\r\n        value={title}\r\n        onChange={event => setTitle(event.target.value)}\r\n        name='title'\r\n      />\r\n      <Button\r\n       onClick={saveHandler}\r\n       variant='contained'\r\n       color='primary'\r\n       disabled={disabled}\r\n      >\r\n        Сохранить\r\n      </Button>\r\n    </>\r\n  )\r\n}","import React, {useEffect} from \"react\";\r\n\r\nimport {useStore} from \"effector-react\";\r\nimport { fetchCategoriesFx, categories } from \"../../store/category-store\";\r\nimport { CategoryCreate } from './category-create';\r\n\r\nexport const CategoriesList = () => {\r\n\r\n  useEffect(() => {\r\n    fetchCategoriesFx()\r\n  }, [])\r\n\r\n  const categoriesData = useStore(categories)\r\n\r\n  return(\r\n    <>\r\n      <CategoryCreate />\r\n      <ul>\r\n        {categoriesData.map(category => (\r\n          <li>{category.id} / {category.title}</li>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  )\r\n}","import {Constants} from \"../const\";\r\nimport {createEffect, createStore} from \"effector\";\r\n\r\nconst API_URL = Constants.API\r\nconst API_SUPPLYPRODUCTS = API_URL + 'api/supplyProducts'\r\n\r\nexport const fetchSupplyProductsFx = createEffect({\r\n  async handler() {\r\n    const res = await fetch(API_SUPPLYPRODUCTS)\r\n    return res.json()\r\n  }\r\n})\r\n\r\nexport const supplyProducts = createStore([])\r\n  .on(fetchSupplyProductsFx.doneData, (state, supplyProducts) => [...supplyProducts])","import React, {useEffect, useState} from \"react\";\r\nimport {fetchSupplyProductsFx, supplyProducts} from \"../../../store/supply-product-store\";\r\nimport {useStore} from \"effector-react\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nexport const SupplyProductsList = () => {\r\n\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const [minProcurementCost, setMinProcurementCost] = useState(0)\r\n\r\n  useEffect(() => {\r\n    fetchSupplyProductsFx()\r\n  }, [])\r\n\r\n  const data = useStore(supplyProducts)\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  return(\r\n    <>\r\n      <FormControl>\r\n        <TextField\r\n          label=\"Закупочная стоимость\"\r\n          defaultValue=\"0\"\r\n          onChange={event => setMinProcurementCost(event.target.value)}\r\n        />\r\n      </FormControl>\r\n      <TableContainer>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Id</TableCell>\r\n              <TableCell>Товар</TableCell>\r\n              <TableCell>Закупочная цена</TableCell>\r\n              <TableCell>Кол-во на складе</TableCell>\r\n              <TableCell>Поставленное кол-во</TableCell>\r\n              <TableCell>Магазин</TableCell>\r\n              <TableCell>Поставщик</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {data\r\n              .filter(row => row.procurementCost >= minProcurementCost)\r\n              //.sort((a, b) => (b.procurementCost - a.procurementCost))\r\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n              .map(row => (\r\n                <TableRow key={row.supplyProductId}>\r\n                  <TableCell>{row.supplyProductId}</TableCell>\r\n                  <TableCell>{row.productTitle}</TableCell>\r\n                  <TableCell>{row.procurementCost}</TableCell>\r\n                  <TableCell>{row.shopAmount}</TableCell>\r\n                  <TableCell>{row.suppliedAmount}</TableCell>\r\n                  <TableCell>{row.shopTitle}</TableCell>\r\n                  <TableCell>{row.supplierName}</TableCell>\r\n                </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 50, 100]}\r\n        component='div'\r\n        count={data\r\n          .filter(row => row.procurementCost >= minProcurementCost)\r\n          .length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n      />\r\n    </>\r\n  )\r\n}","import {createEffect, createStore} from \"effector\";\r\nimport {Constants} from \"../../const\";\r\n\r\nconst API_URL = Constants.API\r\nconst API_MANAGERS = API_URL + 'api/managers'\r\n\r\nexport const fetchManagersFx = createEffect({\r\n  async handler() {\r\n    const res = await fetch(API_MANAGERS)\r\n    return res.json()\r\n  }\r\n})\r\n\r\nexport const $managers = createStore([])\r\n  .on(fetchManagersFx.doneData, (_, managers) => [...managers])","import React, {useEffect} from \"react\";\r\nimport {useStore} from \"effector-react\";\r\nimport {$managers, fetchManagersFx} from \"../../models/manager/manager.store\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\n\r\nexport const ManagerList = () => {\r\n\r\n  const managers = useStore($managers)\r\n\r\n  useEffect(() => {\r\n    fetchManagersFx()\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <TableContainer>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Имя</TableCell>\r\n              <TableCell>Маржа</TableCell>\r\n              <TableCell>Оборот</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {managers.map(row => (\r\n              <TableRow key={row.id}>\r\n                <TableCell>{row.name}</TableCell>\r\n                <TableCell>{row.margin}</TableCell>\r\n                <TableCell>{row.sum}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </>\r\n  )\r\n}","import React from \"react\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport List from \"@material-ui/core/List\";\r\n\r\nexport const Menu = () => {\r\n\r\n  return (\r\n    <List>\r\n      <ListItem>\r\n        <a href='/'>\r\n          Старый интерфейс\r\n        </a>\r\n      </ListItem>\r\n      <ListItem button>\r\n        <NavLink to={'/admin/import'}>\r\n          <ListItemText primary={'Импорт'}/>\r\n        </NavLink>\r\n      </ListItem>\r\n      <ListItem button>\r\n        <NavLink to={'/admin/supply'}>\r\n          <ListItemText primary={'Поставка'}/>\r\n        </NavLink>\r\n      </ListItem>\r\n      <ListItem button>\r\n        <NavLink to={'/admin/supplyProductsList'}>\r\n          <ListItemText primary={'Список поставок'}/>\r\n        </NavLink>\r\n      </ListItem>\r\n      <ListItem button>\r\n        <NavLink to={'/admin/managers'}>\r\n          <ListItemText primary={'Менеджеры'}/>\r\n        </NavLink>\r\n      </ListItem>\r\n      <ListItem button>\r\n        <NavLink to={'/admin/products'}>\r\n          <ListItemText primary={'Все товары'}/>\r\n        </NavLink>\r\n      </ListItem>\r\n      <ListItem button>\r\n        <NavLink to={'/admin/productsHistory'}>\r\n          <ListItemText primary={'История товаров'}/>\r\n        </NavLink>\r\n      </ListItem>\r\n      <ListItem button>\r\n        <NavLink to={'/admin/shops'}>\r\n          <ListItemText primary={'Магазины'}/>\r\n        </NavLink>\r\n      </ListItem>\r\n      <ListItem button>\r\n        <NavLink to={'/admin/suppliers'}>\r\n          <ListItemText primary={'Поставщики'}/>\r\n        </NavLink>\r\n      </ListItem>\r\n      <ListItem button>\r\n        <NavLink to={'/admin/categories'}>\r\n          <ListItemText primary={'Категории'}/>\r\n        </NavLink>\r\n      </ListItem>\r\n    </List>\r\n  )\r\n}","import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Menu} from \"../menu/menu\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  }\r\n}));\r\n\r\nexport const AdminLayout = props => {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={1}>\r\n          <Menu/>\r\n        </Grid>\r\n        <Grid container item xs={11}>\r\n          {props.page}\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  )\r\n}","import {createContext} from 'react'\r\n\r\n\r\nexport const AuthContext = createContext({\r\n  userId: null,\r\n  userRole: '',\r\n  isAuth: false\r\n})","import React, {useCallback, useState} from 'react';\nimport {BrowserRouter} from 'react-router-dom'\nimport {useRoutes} from \"./routes\";\nimport {AdminLayout} from \"./components/layouts/admin.layout\";\nimport {AuthContext} from \"./contexts/auth.context\";\nimport {useCookies} from \"react-cookie\";\n\nfunction App() {\n  const routes = useRoutes()\n  const [cookie] = useCookies()\n\n  const userId = cookie.userId\n  const userRole = 'Administrator'//cookie.userRole\n  const isAuth = !!userId\n\n  if(userRole === 'Administrator')\n    return (\n      <AuthContext.Provider value={{\n        userId, userRole, isAuth\n      }}>\n        <BrowserRouter>\n          <AdminLayout page={routes} />\n        </BrowserRouter>\n      </AuthContext.Provider>\n    )\n\n  if(userRole === 'Manager')\n    return (\n      <h1>Manager</h1>\n    )\n\n  return (\n    <h1>Нет авторизации</h1>\n  )\n\n}\n\nexport default App;\n","import React from \"react\";\r\nimport {Switch, Route, Redirect} from 'react-router-dom'\r\nimport {ImportPage} from \"./pages/admin/import.page\";\r\nimport {ProductsPage} from \"./pages/admin/products.page\";\r\nimport {ProductsHistory} from \"./pages/admin/products-history.page\";\r\nimport {ManagersPage} from \"./pages/admin/managers.page\";\r\nimport {SupplyProductForm} from \"./components/supply-product/form/supply-product-form\";\r\nimport {ShopsList} from \"./components/shop/shops-list\";\r\nimport {SuppliersList} from \"./components/supplier/suppliers-list\";\r\nimport { CategoriesList } from \"./components/categories/categories-list\";\r\nimport {SupplyProductsList} from \"./components/supply-product/list/supply-products-list\";\r\nimport {ManagerList} from \"./components/manager/manager-list\";\r\n\r\nexport const useRoutes = () => {\r\n\r\n  return (\r\n    <Switch>\r\n      <Route path='/admin/import' exact>\r\n        <ImportPage/>\r\n      </Route>\r\n      <Route path='/admin/supply' exact>\r\n        <SupplyProductForm/>\r\n      </Route>\r\n      <Route path='/admin/products' exact>\r\n        <ProductsPage/>\r\n      </Route>\r\n      <Route path='/admin/productsHistory' exact>\r\n        <ProductsHistory/>\r\n      </Route>\r\n      <Route path='/admin/managers' exact>\r\n        <ManagerList/>\r\n      </Route>\r\n      <Route path='/admin/shops' exact>\r\n        <ShopsList/>\r\n      </Route>\r\n      <Route path='/admin/suppliers' exact>\r\n        <SuppliersList/>\r\n      </Route>\r\n      <Route path='/admin/categories' exact>\r\n        <CategoriesList/>\r\n      </Route>\r\n      <Route path='/admin/supplyProductsList' exact>\r\n        <SupplyProductsList/>\r\n      </Route>\r\n      <Redirect to='/admin/import'/>\r\n    </Switch>\r\n  )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}