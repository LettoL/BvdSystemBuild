{"version":3,"sources":["hooks/http.hook.js","const.js","components/import-form/product-item.js","components/import-form/form.js","pages/admin/import.page.js","components/admin-products/product-table-filters.js","components/admin-products/products-table.js","components/admin-products/products-table-paginator.js","components/admin-products/products.js","pages/admin/products.page.js","pages/admin/products-history.page.js","pages/admin/managers.page.js","components/menu/menu.js","components/layouts/admin.layout.js","contexts/auth.context.js","App.js","routes.js","index.js"],"names":["useHttp","useState","loading","setLoading","error","setError","request","useCallback","url","a","method","body","headers","JSON","stringify","fetch","response","json","data","ok","Error","message","clearError","Constants","ProductItem","props","classes","useStyles","product","editProduct","changeHandler","event","newProduct","target","name","value","Grid","container","ListItem","key","number","item","xs","Typography","variant","TextField","title","label","size","onChange","className","maxWidth","code","amount","price","Divider","component","makeStyles","theme","width","padding","Form","shops","suppliers","categories","saveForm","productsText","shop","supplier","supplyType","category","form","setForm","products","setProducts","disabled","setDisabled","changeFormHandler","productIndex","findIndex","x","slice","FormControl","formControl","InputLabel","id","Select","labelId","MenuItem","map","multiline","rows","fullWidth","Button","color","onClick","length","split","replace","sum","productsForSave","List","margin","spacing","minWidth","API","ImportPage","setShops","setCategories","setSuppliers","getShops","getCategories","getSuppliers","useEffect","console","log","ProductTableFilters","handleChangeShop","handleChangeCategory","handleChangeTitle","ProductsTable","page","rowsPerPage","handleOpenDialog","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","filter","row","shopId","categoryId","toLowerCase","includes","bind","ProductsTablePaginator","handleChangePage","handleChangeRowsPerPage","TablePagination","rowsPerPageOptions","count","onChangePage","onChangeRowsPerPage","Products","setPage","setRowsPerPage","setShop","setCategory","setTitle","openDialog","setOpenDialog","setDetailProduct","newPage","Dialog","open","onClose","DialogTitle","DialogContent","autoFocus","type","ProductsPage","getProducts","ProductsHistory","startDate","setStartDate","endDate","setEndDate","date","Date","dateTime","defaultValue","textField","InputLabelProps","shrink","utils","DateFnsUtils","disableToolbar","format","KeyboardButtonProps","toLocaleDateString","productTitle","supplierName","shopTitle","selectEmpty","marginTop","ManagersPage","managers","setManagers","getManagers","Menu","href","button","to","ListItemText","primary","root","flexGrow","AdminLayout","AuthContext","createContext","userId","userRole","isAuth","App","routes","path","exact","useCookies","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.38d312b8.chunk.js","sourcesContent":["import {useCallback, useState} from \"react\";\r\n\r\nexport const useHttp = () => {\r\n  const [loading, setLoading] = useState(false)\r\n  const [error, setError] = useState(null)\r\n  \r\n  const request = useCallback(async (url, method = 'GET', body = null, headers = {}) => {\r\n    setLoading(true)\r\n    try {\r\n      if(body) {\r\n        body = JSON.stringify(body)\r\n        headers['Content-Type'] = 'application/json'\r\n      }\r\n      \r\n      const response = await fetch(url, {method, body, headers})\r\n      const data = await response.json()\r\n      \r\n      if(!response.ok) {\r\n        throw new Error(data.message || 'Что-то не так')\r\n      }\r\n      \r\n      setLoading(false)\r\n      \r\n      return data;\r\n    } \r\n    catch (e) {\r\n      setLoading(false)\r\n      setError(e.message)\r\n      throw e\r\n    }\r\n  }, [])\r\n  \r\n  const clearError = useCallback(() => setError(null), [])\r\n  return {loading, request, error, clearError}\r\n}","export const Constants = {\r\n  API: 'http://68.183.78.15/'\r\n  //API: 'http://localhost:5000/'\r\n}","import React from \"react\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nexport const ProductItem = props => {\r\n  const classes = useStyles()\r\n  const {product, editProduct} = props\r\n\r\n  const changeHandler = event => {\r\n    const newProduct = {...product, [event.target.name]: [event.target.value]}\r\n    editProduct(newProduct)\r\n  }\r\n\r\n  return (\r\n    <Grid container>\r\n      <ListItem key={product.number}>\r\n        <Grid item xs={1}>\r\n          <Typography variant='h6'>{product.number}</Typography>\r\n        </Grid>\r\n        <Grid item container xs={11}>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              value={product.title}\r\n              variant='outlined'\r\n              label='Название'\r\n              size='small'\r\n              name='title'\r\n              onChange={changeHandler}\r\n              className={classes.maxWidth}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <TextField\r\n              value={product.code}\r\n              variant='outlined'\r\n              label='Артикул'\r\n              size='small'\r\n              name='code'\r\n              onChange={changeHandler}\r\n              className={classes.maxWidth}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <TextField\r\n              className={classes.maxWidth}\r\n              value={product.amount}\r\n              variant='outlined'\r\n              label='Количество'\r\n              size='small'\r\n              name='amount'\r\n              onChange={changeHandler}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <TextField\r\n              value={product.price}\r\n              variant='outlined'\r\n              label='Закупочная стоимость'\r\n              size='small'\r\n              name='price'\r\n              onChange={changeHandler}\r\n              className={classes.maxWidth}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </ListItem>\r\n      <Divider variant='inset' component='li'/>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  maxWidth: {\r\n    width: '100%',\r\n    padding: 5\r\n  }\r\n}))","import React, {Fragment, useState} from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {ProductItem} from \"./product-item\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nexport const Form = (props) => {\r\n  const classes = useStyles()\r\n  const {shops, suppliers, categories, saveForm} = props\r\n\r\n  const [form, setForm] = useState({\r\n    productsText: '',\r\n    shop: null,\r\n    supplier: null,\r\n    supplyType: null,\r\n    category: null\r\n  })\r\n  const [products, setProducts] = useState([])\r\n  const [disabled, setDisabled] = useState(false)\r\n\r\n  const changeFormHandler = event => {\r\n    setForm({...form, [event.target.name]: event.target.value})\r\n  }\r\n\r\n  const productsTextHandle = () => {\r\n    if(form.productsText.length <= 0)\r\n      return\r\n\r\n    const productsText = form.productsText.split('\\n');\r\n    const productsProperties = productsText.map(x => x.split('\\t'));\r\n\r\n    const products = productsProperties.map(x => {\r\n      return {\r\n        number: +(x[0].replace(',', '.').replace(/\\s+/g,'')),\r\n        code: x[1],\r\n        title: x[2],\r\n        amount: +(x[3].replace(',', '.').replace(/\\s+/g,'')),\r\n        price: +(x[5].replace(',', '.').replace(/\\s+/g,'')),\r\n        sum: +(x[6].replace(',', '.').replace(/\\s+/g,''))\r\n      }\r\n    });\r\n\r\n    setProducts(products)\r\n  }\r\n\r\n  const editProduct = (product) => {\r\n    const productIndex = products.findIndex(x => x.number === product.number)\r\n    setProducts([...products.slice(0, productIndex), product, ...products.slice(productIndex + 1)])\r\n  }\r\n\r\n  const saveHandler = () => {\r\n    setDisabled(true)\r\n\r\n    const productsForSave = products.map(product => ({\r\n      ...product, ['price']: product.price + ''\r\n    }))\r\n\r\n    saveForm({...form, products: productsForSave})\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Grid item xs={4}>\r\n        <FormControl className={classes.formControl}>\r\n          <InputLabel id='shop-select'>Магазин</InputLabel>\r\n          <Select\r\n            labelId='shop-select'\r\n            value={form.shop}\r\n            onChange={changeFormHandler}\r\n            name='shop'\r\n          >\r\n            <MenuItem value={0}>Выбрать магазин</MenuItem>\r\n            {shops.map(shop => (\r\n              <MenuItem key={shop.id} value={shop.id}>{shop.title}</MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n        <FormControl className={classes.formControl}>\r\n          <InputLabel id='shop-select'>Поставщика</InputLabel>\r\n          <Select\r\n            labelId='shop-select'\r\n            value={form.supplier}\r\n            onChange={changeFormHandler}\r\n            name='supplier'\r\n          >\r\n            <MenuItem value={0}>Выбрать поставщика</MenuItem>\r\n            {suppliers.map(supplier => (\r\n              <MenuItem key={supplier.id} value={supplier.id}>{supplier.name}</MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n        <FormControl className={classes.formControl}>\r\n          <InputLabel id='shop-select'>Тип товара</InputLabel>\r\n          <Select\r\n            labelId='shop-select'\r\n            value={form.supplyType}\r\n            onChange={changeFormHandler}\r\n            name='supplyType'\r\n          >\r\n            <MenuItem value={0}>Выбрать тип товара</MenuItem>\r\n            <MenuItem value={1}>Оплаченный товар</MenuItem>\r\n            <MenuItem value={2}>Товар под реализацию</MenuItem>\r\n            <MenuItem value={3}>Отсроченый платёж</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n        <FormControl className={classes.formControl}>\r\n          <InputLabel id='shop-select'>Категория</InputLabel>\r\n          <Select\r\n            labelId='shop-select'\r\n            value={form.category}\r\n            onChange={changeFormHandler}\r\n            name='category'\r\n          >\r\n            <MenuItem value={0}>Выбрать категорию</MenuItem>\r\n            {categories.map(category => (\r\n              <MenuItem key={category.id} value={category.id}>{category.title}</MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n        <br/>\r\n        <TextField\r\n          label=\"Внесите товары\"\r\n          multiline\r\n          rows={10}\r\n          variant=\"outlined\"\r\n          value={form.productsText}\r\n          onChange={changeFormHandler}\r\n          name=\"productsText\"\r\n          fullWidth\r\n        />\r\n        <br/>\r\n        <Button\r\n          variant=\"contained\"\r\n          color='primary'\r\n          onClick={productsTextHandle}\r\n        >\r\n          Обработать\r\n        </Button>\r\n        <br/>\r\n        <br/>\r\n        <br/>\r\n        <br/>\r\n        <br/>\r\n        <Button\r\n          variant='contained'\r\n          color='primary'\r\n          onClick={saveHandler}\r\n          disabled={disabled}\r\n        >\r\n          Сохранить\r\n        </Button>\r\n      </Grid>\r\n      <Grid item xs={7}>\r\n        <List>\r\n          {products.map(product => (\r\n            <ProductItem\r\n              key={product.number}\r\n              product={product}\r\n              editProduct={editProduct}\r\n            />\r\n          ))}\r\n        </List>\r\n      </Grid>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  }\r\n}));","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport {useHttp} from \"../../hooks/http.hook\";\r\nimport {Constants} from \"../../const\";\r\nimport {Form} from \"../../components/import-form/form\";\r\n\r\nconst API = Constants.API\r\n\r\nexport const ImportPage = () => {\r\n  const {request} = useHttp()\r\n\r\n  const [shops, setShops] = useState([])\r\n  const [categories, setCategories] = useState([])\r\n  const [suppliers, setSuppliers] = useState([])\r\n\r\n  const getShops = useCallback(async () => {\r\n    try {\r\n      const data = await request(API + 'api/shops')\r\n      setShops(data)\r\n    }\r\n    catch (e) {}\r\n  }, [request])\r\n\r\n  const getCategories = useCallback(async () => {\r\n    try {\r\n      const data = await request(API + 'api/categories')\r\n      setCategories(data)\r\n    }\r\n    catch (e) {}\r\n  }, [request])\r\n\r\n  const getSuppliers = useCallback(async () => {\r\n    try {\r\n      const data = await request(API + 'api/suppliers')\r\n      setSuppliers(data)\r\n    }\r\n    catch (e) {}\r\n  }, [request])\r\n\r\n  useEffect(() => {\r\n    getShops()\r\n    getCategories()\r\n    getSuppliers()\r\n  }, [getShops, getCategories, getSuppliers])\r\n\r\n  const saveForm = async (data) => {\r\n    try {\r\n      const response = await request(API + 'api/supplyProducts/import', 'POST', {...data})\r\n      console.log({...data})\r\n      console.log(response)\r\n    }\r\n    catch (e) { }\r\n  }\r\n  \r\n  return (\r\n    <Form\r\n      shops={shops}\r\n      suppliers={suppliers}\r\n      categories={categories}\r\n      saveForm={saveForm}\r\n    />\r\n  )\r\n}","import React from \"react\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nexport const ProductTableFilters = props => {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel id=\"demo-simple-select-label\">Магазин</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-label\"\r\n          id=\"demo-simple-select\"\r\n          value={props.shop}\r\n          onChange={props.handleChangeShop}\r\n        >\r\n          <MenuItem value={0}>Выбрать магазин</MenuItem>\r\n          {props.shops.map(shop => (\r\n            <MenuItem key={shop.id} value={shop.id}>{shop.title}</MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel id=\"demo-simple-select-label\">Категория</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-label\"\r\n          id=\"demo-simple-select\"\r\n          value={props.category}\r\n          onChange={props.handleChangeCategory}\r\n        >\r\n          <MenuItem value={0}>Выбрать категорию</MenuItem>\r\n          {props.categories.map(category => (\r\n            <MenuItem key={category.id} value={category.id}>{category.title}</MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <TextField\r\n          label=\"Поиск по названию\"\r\n          onChange={props.handleChangeTitle}\r\n        />\r\n      </FormControl>\r\n    </>\r\n  )\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  }\r\n}));","import React from \"react\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\n\r\nexport const ProductsTable = props => {\r\n  const {products, shop, category,\r\n    title, page, rowsPerPage, handleOpenDialog} = props\r\n\r\n  return (\r\n    <TableContainer>\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Артикул</TableCell>\r\n            <TableCell>Название</TableCell>\r\n            <TableCell>Количество</TableCell>\r\n            <TableCell>Цена</TableCell>\r\n            <TableCell>Магазин</TableCell>\r\n            <TableCell>Категория</TableCell>\r\n            <TableCell>Действия</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {products\r\n          .filter(row => shop !== 0\r\n            ? row.shopId === shop\r\n            : true)\r\n          .filter(row => category !== 0\r\n            ? row.categoryId === category\r\n            : true)\r\n          .filter(row => title !== ''\r\n            ? row.title.toLowerCase().includes(title.toLowerCase())\r\n            : true)\r\n          .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n          .map(row => (\r\n            <TableRow key={row.id}>\r\n              <TableCell>{row.code}</TableCell>\r\n              <TableCell>{row.title}</TableCell>\r\n              <TableCell>{row.amount}</TableCell>\r\n              <TableCell>{row.price}</TableCell>\r\n              <TableCell>{row.shop}</TableCell>\r\n              <TableCell>{row.category}</TableCell>\r\n              <TableCell>\r\n                <Button variant=\"contained\" onClick={handleOpenDialog.bind(this, row)}>\r\n                  Detail\r\n                </Button>\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  )\r\n}","import React from \"react\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\n\r\nexport const ProductsTablePaginator = props => {\r\n  const {products, shop, category, title,\r\n    rowsPerPage, page, handleChangePage, handleChangeRowsPerPage} = props\r\n\r\n  return (\r\n    <TablePagination\r\n      rowsPerPageOptions={[10, 25, 50, 100]}\r\n      component='div'\r\n      count={products\r\n      .filter(row => shop !== 0\r\n        ? row.shopId === shop\r\n        : true)\r\n      .filter(row => category !== 0\r\n        ? row.categoryId === category\r\n        : true)\r\n      .filter(row => title !== ''\r\n        ? row.title.toLowerCase().includes(title.toLowerCase())\r\n        : true)\r\n        .length}\r\n      rowsPerPage={rowsPerPage}\r\n      page={page}\r\n      onChangePage={handleChangePage}\r\n      onChangeRowsPerPage={handleChangeRowsPerPage}\r\n    />\r\n  )\r\n}","import React, {useState} from \"react\";\r\nimport {ProductTableFilters} from \"./product-table-filters\";\r\nimport {ProductsTable} from \"./products-table\";\r\nimport {ProductsTablePaginator} from \"./products-table-paginator\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\n\r\nexport const Products = props => {\r\n  const classes = useStyles()\r\n\r\n  const {shops, categories, products} = props\r\n\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const [shop, setShop] = useState(0);\r\n  const [category, setCategory] = useState(0);\r\n  const [title, setTitle] = useState('');\r\n\r\n  const [openDialog, setOpenDialog] = useState(false)\r\n  const [detailProduct, setDetailProduct] = useState(null)\r\n\r\n  const handleOpenDialog = (product) => {\r\n    setDetailProduct(product)\r\n    setOpenDialog(true)\r\n  }\r\n\r\n  const handleCloseDialog = () => {\r\n    setOpenDialog(false)\r\n  }\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeShop = (event) => {\r\n    setShop(event.target.value);\r\n  };\r\n\r\n  const handleChangeCategory = event => {\r\n    setCategory(event.target.value)\r\n  }\r\n\r\n  const handleChangeTitle = event => {\r\n    setTitle(event.target.value)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ProductTableFilters\r\n        shops={shops}\r\n        shop={shop}\r\n        handleChangeShop={handleChangeShop}\r\n        categories={categories}\r\n        category={category}\r\n        handleChangeCategory={handleChangeCategory}\r\n        handleChangeTitle={handleChangeTitle}\r\n      />\r\n      <ProductsTable\r\n        products={products}\r\n        shop={shop}\r\n        category={category}\r\n        title={title}\r\n        page={page}\r\n        rowsPerPage={rowsPerPage}\r\n        handleOpenDialog={handleOpenDialog}\r\n      />\r\n      <ProductsTablePaginator\r\n        products={products}\r\n        shop={shop}\r\n        category={category}\r\n        title={title}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        handleChangePage={handleChangePage}\r\n        handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n      />\r\n      <Dialog open={openDialog} onClose={handleCloseDialog}>\r\n        <DialogTitle>Product</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            label='Название'\r\n            type='text'\r\n            margin='dense'\r\n          />\r\n          <TextField\r\n            label='Артикул'\r\n            type='text'\r\n            margin='dense'\r\n          />\r\n          <TextField\r\n            label='Стоимость для продажи'\r\n            type='number'\r\n            margin='dense'\r\n          />\r\n          <FormControl className={classes.formControl}>\r\n            <InputLabel id='category-select'>Категория</InputLabel>\r\n            <Select\r\n              labelId='category-select'\r\n            >\r\n              <MenuItem>1111</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n          <FormControl className={classes.formControl}>\r\n            <InputLabel id='shop-select'>Магазин</InputLabel>\r\n            <Select\r\n              labelId='shop-select'\r\n            >\r\n              <MenuItem>1111</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </>\r\n  )\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  }\r\n}));","import React, {useCallback, useEffect, useState} from 'react'\r\nimport {useHttp} from \"../../hooks/http.hook\";\r\nimport {Constants} from \"../../const\";\r\nimport {Products} from \"../../components/admin-products/products\";\r\n\r\nconst API = Constants.API\r\n\r\nexport const ProductsPage = () => {\r\n  const {loading, request} = useHttp()\r\n  const [products, setProducts] = useState([])\r\n  const [shops, setShops] = useState([])\r\n  const [categories, setCategories] = useState([])\r\n\r\n  const getProducts = useCallback(async () => {\r\n    try {\r\n      const data = await request(API + 'api/products')\r\n      setProducts(data)\r\n    }\r\n    catch (e) {}\r\n  }, [request])\r\n\r\n  const getShops = useCallback(async () => {\r\n    try {\r\n      const data = await request(API + 'api/shops')\r\n      setShops(data)\r\n    }\r\n    catch (e) {}\r\n  }, [request])\r\n\r\n  const getCategories = useCallback(async () => {\r\n    try {\r\n      const data = await request(API + 'api/categories')\r\n      setCategories(data)\r\n    }\r\n    catch (e) {\r\n    }\r\n  }, [request])\r\n\r\n  useEffect(() => {\r\n    getProducts()\r\n    getShops()\r\n    getCategories()\r\n  }, [getProducts, getShops, getCategories])\r\n\r\n  if(loading)\r\n    return (\r\n      <div>Загрузка...</div>\r\n    )\r\n  else\r\n    return (\r\n      <Products\r\n        shops={shops}\r\n        categories={categories}\r\n        products={products}\r\n      />\r\n    )\r\n}","import React, {useCallback, useEffect, useState} from 'react'\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {useHttp} from \"../../hooks/http.hook\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {Constants} from \"../../const\";\r\nimport {KeyboardDatePicker, MuiPickersUtilsProvider} from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\n\r\nconst API = Constants.API\r\n\r\nexport const ProductsHistory = () => {\r\n  const classes = useStyles()\r\n  const [products, setProducts] = useState([])\r\n  const [shops, setShops] = useState([])\r\n  const [shop, setShop] = useState(0)\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const {loading, request} = useHttp()\r\n  const [startDate, setStartDate] = useState(null)\r\n  const [endDate, setEndDate] = useState(null)\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeShop = (event) => {\r\n    setShop(event.target.value);\r\n  };\r\n\r\n  const getProducts = useCallback(async () => {\r\n    try {\r\n      const data = await request(API + 'api/productsHistory')\r\n      setProducts(data.map(product => (\r\n        {...product, date: new Date(product.dateTime)}\r\n      )))\r\n    }\r\n    catch (e) {}\r\n  }, [request])\r\n\r\n  const getShops = useCallback(async () => {\r\n    try {\r\n      const data = await request(API + 'api/shops')\r\n      setShops(data)\r\n    }\r\n    catch (e) {}\r\n  }, [request])\r\n\r\n  useEffect(() => {\r\n    getProducts()\r\n    getShops()\r\n  }, [getProducts, getShops])\r\n\r\n  return(\r\n    <>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel id=\"demo-simple-select-label\">Магазин</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-label\"\r\n          id=\"demo-simple-select\"\r\n          value={shop}\r\n          onChange={handleChangeShop}\r\n        >\r\n          <MenuItem value={0}>Выбрать магазин</MenuItem>\r\n          {shops.map(shop => (\r\n            <MenuItem key={shop.id} value={shop.id}>{shop.title}</MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <TextField\r\n          label=\"Дата с\"\r\n          type=\"date\"\r\n          defaultValue=\"\"\r\n          className={classes.textField}\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n          onChange={event => setStartDate(new Date(event.target.value))}\r\n        />\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n          <KeyboardDatePicker\r\n            disableToolbar\r\n            variant='inline'\r\n            format='MM/dd/yyyy'\r\n            margin='normal'\r\n            label='Дата с'\r\n            value={startDate}\r\n            onChange={event => setStartDate(event)}\r\n            KeyboardButtonProps={{\r\n              'aria-label': 'change date',\r\n            }}\r\n          />\r\n        </MuiPickersUtilsProvider>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <TextField\r\n          label=\"Дата по\"\r\n          type=\"date\"\r\n          defaultValue=\"\"\r\n          className={classes.textField}\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n          onChange={event => setEndDate(new Date(event.target.value))}\r\n        />\r\n      </FormControl>\r\n      <TableContainer>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Дата</TableCell>\r\n              <TableCell>Товар</TableCell>\r\n              <TableCell>Количество</TableCell>\r\n              <TableCell>Поставщик</TableCell>\r\n              <TableCell>Тип</TableCell>\r\n              <TableCell>Магазин</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {products\r\n              .filter(row => shop !== 0\r\n                ? row.shopId === shop\r\n                : true)\r\n              .filter(row => startDate\r\n                ? row.date >= startDate\r\n                : true)\r\n              .filter(row => endDate\r\n                ? row.date <= endDate\r\n                : true)\r\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n              .map(row => (\r\n              <TableRow key={row.id}>\r\n                <TableCell>{row.date.toLocaleDateString()}</TableCell>\r\n                <TableCell>{row.productTitle}</TableCell>\r\n                <TableCell>{row.amount}</TableCell>\r\n                <TableCell>{row.supplierName}</TableCell>\r\n                <TableCell>{row.type}</TableCell>\r\n                <TableCell>{row.shopTitle}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 50, 100]}\r\n        component='div'\r\n        count={products\r\n          .filter(row => shop !== 0\r\n            ? row.shopId === shop\r\n            : true)\r\n          .filter(row => startDate\r\n            ? row.date >= startDate\r\n            : true)\r\n          .filter(row => endDate\r\n            ? row.date <= endDate\r\n            : true)\r\n          .length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));","import React, {useCallback, useEffect, useState} from 'react'\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport {useHttp} from \"../../hooks/http.hook\";\r\n\r\nexport const ManagersPage = () => {\r\n  const {loading, request} = useHttp()\r\n  const [managers, setManagers] = useState([]);\r\n  \r\n  const getManagers = useCallback(async () => {\r\n    try {\r\n      const data = await request('http://localhost:5000/api/managers')\r\n      setManagers(data)\r\n    } \r\n    catch (e) {}\r\n  }, [request])\r\n  \r\n  useEffect(() => {\r\n    getManagers()\r\n  }, [getManagers])\r\n  \r\n  if(loading)\r\n    return (\r\n      <div>Загрузка...</div>\r\n    )\r\n  else\r\n    return (\r\n      <TableContainer>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Имя</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {managers.map(row => (\r\n              <TableRow key={row.id}>\r\n                <TableCell>{row.name}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    )\r\n}","import React from \"react\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport List from \"@material-ui/core/List\";\r\n\r\nexport const Menu = () => {\r\n\r\n  return (\r\n    <List>\r\n      <ListItem>\r\n        <a href='/'>\r\n          Старый интерфейс\r\n        </a>\r\n      </ListItem>\r\n      <ListItem button>\r\n        <NavLink to={'/admin/import'}>\r\n          <ListItemText primary={'Импорт'}/>\r\n        </NavLink>\r\n      </ListItem>\r\n      <ListItem button>\r\n        <NavLink to={'/admin/managers'}>\r\n          <ListItemText primary={'Менеджеры'}/>\r\n        </NavLink>\r\n      </ListItem>\r\n      <ListItem button>\r\n        <NavLink to={'/admin/products'}>\r\n          <ListItemText primary={'Все товары'}/>\r\n        </NavLink>\r\n      </ListItem>\r\n      <ListItem button>\r\n        <NavLink to={'/admin/productsHistory'}>\r\n          <ListItemText primary={'История товаров'}/>\r\n        </NavLink>\r\n      </ListItem>\r\n    </List>\r\n  )\r\n}","import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Menu} from \"../menu/menu\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  }\r\n}));\r\n\r\nexport const AdminLayout = props => {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={1}>\r\n          <Menu/>\r\n        </Grid>\r\n        <Grid container item xs={11}>\r\n          {props.page}\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  )\r\n}","import {createContext} from 'react'\r\n\r\n\r\nexport const AuthContext = createContext({\r\n  userId: null,\r\n  userRole: '',\r\n  isAuth: false\r\n})","import React, {useCallback, useState} from 'react';\nimport {BrowserRouter} from 'react-router-dom'\nimport {useRoutes} from \"./routes\";\nimport {AdminLayout} from \"./components/layouts/admin.layout\";\nimport {AuthContext} from \"./contexts/auth.context\";\nimport {useCookies} from \"react-cookie\";\n\nfunction App() {\n  const routes = useRoutes()\n  const [cookie] = useCookies()\n\n  const userId = cookie.userId\n  const userRole = 'Administrator'//cookie.userRole\n  const isAuth = !!userId\n\n  if(userRole === 'Administrator')\n    return (\n      <AuthContext.Provider value={{\n        userId, userRole, isAuth\n      }}>\n        <BrowserRouter>\n          <AdminLayout page={routes} />\n        </BrowserRouter>\n      </AuthContext.Provider>\n    )\n\n  if(userRole === 'Manager')\n    return (\n      <h1>Manager</h1>\n    )\n\n  return (\n    <h1>Нет авторизации</h1>\n  )\n\n}\n\nexport default App;\n","import React from \"react\";\r\nimport {Switch, Route, Redirect} from 'react-router-dom'\r\nimport {ImportPage} from \"./pages/admin/import.page\";\r\nimport {ProductsPage} from \"./pages/admin/products.page\";\r\nimport {ProductsHistory} from \"./pages/admin/products-history.page\";\r\nimport {ManagersPage} from \"./pages/admin/managers.page\";\r\n\r\nexport const useRoutes = () => {\r\n\r\n  return (\r\n    <Switch>\r\n      <Route path='/admin/import' exact>\r\n        <ImportPage/>\r\n      </Route>\r\n      <Route path='/admin/products' exact>\r\n        <ProductsPage/>\r\n      </Route>\r\n      <Route path='/admin/productsHistory' exact>\r\n        <ProductsHistory/>\r\n      </Route>\r\n      <Route path='/admin/managers' exact>\r\n        <ManagersPage/>\r\n      </Route>\r\n      <Redirect to='/admin/import'/>\r\n    </Switch>\r\n  )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}